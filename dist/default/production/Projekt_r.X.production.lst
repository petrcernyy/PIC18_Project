

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun May 07 16:30:09 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 06/04/2022 GMT
    80                           ; 
    81                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F46K22 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000000                     
   114                           	psect	idataBIGRAM
   115   0025DE                     __pidataBIGRAM:
   116                           	callstack 0
   117                           
   118                           ;initializer for _melody
   119   0025DE  0188               	dw	392
   120   0025E0  0008               	dw	8
   121   0025E2  0106               	dw	262
   122   0025E4  0008               	dw	8
   123   0025E6  0137               	dw	311
   124   0025E8  0010               	dw	16
   125   0025EA  015D               	dw	349
   126   0025EC  0010               	dw	16
   127   0025EE  0188               	dw	392
   128   0025F0  0008               	dw	8
   129   0025F2  0106               	dw	262
   130   0025F4  0008               	dw	8
   131   0025F6  0137               	dw	311
   132   0025F8  0010               	dw	16
   133   0025FA  015D               	dw	349
   134   0025FC  0010               	dw	16
   135   0025FE  0188               	dw	392
   136   002600  0008               	dw	8
   137   002602  0106               	dw	262
   138   002604  0008               	dw	8
   139   002606  0137               	dw	311
   140   002608  0010               	dw	16
   141   00260A  015D               	dw	349
   142   00260C  0010               	dw	16
   143   00260E  0188               	dw	392
   144   002610  0008               	dw	8
   145   002612  0106               	dw	262
   146   002614  0008               	dw	8
   147   002616  0137               	dw	311
   148   002618  0010               	dw	16
   149   00261A  015D               	dw	349
   150   00261C  0010               	dw	16
   151   00261E  0188               	dw	392
   152   002620  0008               	dw	8
   153   002622  0106               	dw	262
   154   002624  0008               	dw	8
   155   002626  014A               	dw	330
   156   002628  0010               	dw	16
   157   00262A  015D               	dw	349
   158   00262C  0010               	dw	16
   159   00262E  0188               	dw	392
   160   002630  0008               	dw	8
   161   002632  0106               	dw	262
   162   002634  0008               	dw	8
   163   002636  014A               	dw	330
   164   002638  0010               	dw	16
   165   00263A  015D               	dw	349
   166   00263C  0010               	dw	16
   167   00263E  0188               	dw	392
   168   002640  0008               	dw	8
   169   002642  0106               	dw	262
   170   002644  0008               	dw	8
   171   002646  014A               	dw	330
   172   002648  0010               	dw	16
   173   00264A  015D               	dw	349
   174   00264C  0010               	dw	16
   175   00264E  0188               	dw	392
   176   002650  0008               	dw	8
   177   002652  0106               	dw	262
   178   002654  0008               	dw	8
   179   002656  014A               	dw	330
   180   002658  0010               	dw	16
   181   00265A  015D               	dw	349
   182   00265C  0010               	dw	16
   183   00265E  0188               	dw	392
   184   002660  FFFC               	dw	65532
   185   002662  0106               	dw	262
   186   002664  FFFC               	dw	65532
   187   002666  0137               	dw	311
   188   002668  0010               	dw	16
   189   00266A  015D               	dw	349
   190   00266C  0010               	dw	16
   191   00266E  0188               	dw	392
   192   002670  0004               	dw	4
   193   002672  0106               	dw	262
   194   002674  0004               	dw	4
   195   002676  0137               	dw	311
   196   002678  0010               	dw	16
   197   00267A  015D               	dw	349
   198   00267C  0010               	dw	16
   199   00267E  0126               	dw	294
   200   002680  FFFF               	dw	65535
   201   002682  015D               	dw	349
   202   002684  FFFC               	dw	65532
   203   002686  00E9               	dw	233
   204   002688  FFFC               	dw	65532
   205   00268A  0137               	dw	311
   206   00268C  0010               	dw	16
   207   00268E  0126               	dw	294
   208   002690  0010               	dw	16
   209   002692  015D               	dw	349
   210   002694  0004               	dw	4
   211   002696  00E9               	dw	233
   212   002698  FFFC               	dw	65532
   213   00269A  0137               	dw	311
   214   00269C  0010               	dw	16
   215   00269E  0126               	dw	294
   216   0026A0  0010               	dw	16
   217   0026A2  0106               	dw	262
   218   0026A4  FFFF               	dw	65535
   219   0026A6  0188               	dw	392
   220   0026A8  FFFC               	dw	65532
   221   0026AA  0106               	dw	262
   222   0026AC  FFFC               	dw	65532
   223   0026AE  0137               	dw	311
   224   0026B0  0010               	dw	16
   225   0026B2  015D               	dw	349
   226   0026B4  0010               	dw	16
   227   0026B6  0188               	dw	392
   228   0026B8  0004               	dw	4
   229   0026BA  0106               	dw	262
   230   0026BC  0004               	dw	4
   231   0026BE  0137               	dw	311
   232   0026C0  0010               	dw	16
   233   0026C2  015D               	dw	349
   234   0026C4  0010               	dw	16
   235   0026C6  0126               	dw	294
   236   0026C8  FFFF               	dw	65535
   237   0026CA  015D               	dw	349
   238   0026CC  FFFC               	dw	65532
   239   0026CE  00E9               	dw	233
   240   0026D0  FFFC               	dw	65532
   241   0026D2  0137               	dw	311
   242   0026D4  0010               	dw	16
   243   0026D6  0126               	dw	294
   244   0026D8  0010               	dw	16
   245   0026DA  015D               	dw	349
   246   0026DC  0004               	dw	4
   247   0026DE  00E9               	dw	233
   248   0026E0  FFFC               	dw	65532
   249   0026E2  0137               	dw	311
   250   0026E4  0010               	dw	16
   251   0026E6  0126               	dw	294
   252   0026E8  0010               	dw	16
   253   0026EA  0106               	dw	262
   254   0026EC  FFFF               	dw	65535
   255   0026EE  0188               	dw	392
   256   0026F0  FFFC               	dw	65532
   257   0026F2  0106               	dw	262
   258   0026F4  FFFC               	dw	65532
   259   0026F6  0137               	dw	311
   260   0026F8  0010               	dw	16
   261   0026FA  015D               	dw	349
   262   0026FC  0010               	dw	16
   263   0026FE  0188               	dw	392
   264   002700  0004               	dw	4
   265   002702  0106               	dw	262
   266   002704  0004               	dw	4
   267   002706  0137               	dw	311
   268   002708  0010               	dw	16
   269   00270A  015D               	dw	349
   270   00270C  0010               	dw	16
   271   00270E  0126               	dw	294
   272   002710  FFFE               	dw	65534
   273   002712  015D               	dw	349
   274   002714  FFFC               	dw	65532
   275   002716  00E9               	dw	233
   276   002718  FFFC               	dw	65532
   277   00271A  0126               	dw	294
   278   00271C  FFF8               	dw	65528
   279   00271E  0137               	dw	311
   280   002720  FFF8               	dw	65528
   281   002722  0126               	dw	294
   282   002724  FFF8               	dw	65528
   283   002726  00E9               	dw	233
   284   002728  FFF8               	dw	65528
   285   00272A  0106               	dw	262
   286   00272C  FFFF               	dw	65535
   287   00272E  020B               	dw	523
   288   002730  FFFE               	dw	65534
   289   002732  01D2               	dw	466
   290   002734  FFFE               	dw	65534
   291   002736  0106               	dw	262
   292   002738  FFFE               	dw	65534
   293   00273A  0188               	dw	392
   294   00273C  FFFE               	dw	65534
   295   00273E  0137               	dw	311
   296   002740  FFFE               	dw	65534
   297   002742  0137               	dw	311
   298   002744  FFFC               	dw	65532
   299   002746  015D               	dw	349
   300   002748  FFFC               	dw	65532
   301   00274A  0188               	dw	392
   302   00274C  FFFF               	dw	65535
   303   00274E  020B               	dw	523
   304   002750  FFFE               	dw	65534
   305   002752  01D2               	dw	466
   306   002754  FFFE               	dw	65534
   307   002756  0106               	dw	262
   308   002758  FFFE               	dw	65534
   309   00275A  0188               	dw	392
   310   00275C  FFFE               	dw	65534
   311   00275E  0137               	dw	311
   312   002760  FFFE               	dw	65534
   313   002762  0137               	dw	311
   314   002764  FFFC               	dw	65532
   315   002766  0126               	dw	294
   316   002768  FFFC               	dw	65532
   317   00276A  020B               	dw	523
   318   00276C  0008               	dw	8
   319   00276E  0188               	dw	392
   320   002770  0008               	dw	8
   321   002772  019F               	dw	415
   322   002774  0010               	dw	16
   323   002776  01D2               	dw	466
   324   002778  0010               	dw	16
   325   00277A  020B               	dw	523
   326   00277C  0008               	dw	8
   327   00277E  0188               	dw	392
   328   002780  0008               	dw	8
   329   002782  019F               	dw	415
   330   002784  0010               	dw	16
   331   002786  01D2               	dw	466
   332   002788  0010               	dw	16
   333   00278A  020B               	dw	523
   334   00278C  0008               	dw	8
   335   00278E  0188               	dw	392
   336   002790  0008               	dw	8
   337   002792  019F               	dw	415
   338   002794  0010               	dw	16
   339   002796  01D2               	dw	466
   340   002798  0010               	dw	16
   341   00279A  020B               	dw	523
   342   00279C  0008               	dw	8
   343   00279E  0188               	dw	392
   344   0027A0  0008               	dw	8
   345   0027A2  019F               	dw	415
   346   0027A4  0010               	dw	16
   347   0027A6  01D2               	dw	466
   348   0027A8  0010               	dw	16
   349   0027AA  0001               	dw	1
   350   0027AC  0004               	dw	4
   351   0027AE  033F               	dw	831
   352   0027B0  0010               	dw	16
   353   0027B2  03A4               	dw	932
   354   0027B4  0010               	dw	16
   355   0027B6  0417               	dw	1047
   356   0027B8  0008               	dw	8
   357   0027BA  0310               	dw	784
   358   0027BC  0008               	dw	8
   359   0027BE  033F               	dw	831
   360   0027C0  0010               	dw	16
   361   0027C2  03A4               	dw	932
   362   0027C4  0010               	dw	16
   363   0027C6  0417               	dw	1047
   364   0027C8  0008               	dw	8
   365   0027CA  0310               	dw	784
   366   0027CC  0010               	dw	16
   367   0027CE  033F               	dw	831
   368   0027D0  0010               	dw	16
   369   0027D2  03A4               	dw	932
   370   0027D4  0010               	dw	16
   371   0027D6  0417               	dw	1047
   372   0027D8  0008               	dw	8
   373   0027DA  0310               	dw	784
   374   0027DC  0008               	dw	8
   375   0027DE  033F               	dw	831
   376   0027E0  0010               	dw	16
   377   0027E2  03A4               	dw	932
   378   0027E4  0010               	dw	16
   379                           
   380                           	psect	idataBANK1
   381   003EB2                     __pidataBANK1:
   382                           	callstack 0
   383                           
   384                           ;initializer for UART_main@F6213
   385   003EB2  50                 	db	80
   386   003EB3  65                 	db	101
   387   003EB4  72                 	db	114
   388   003EB5  69                 	db	105
   389   003EB6  66                 	db	102
   390   003EB7  65                 	db	101
   391   003EB8  72                 	db	114
   392   003EB9  69                 	db	105
   393   003EBA  65                 	db	101
   394   003EBB  20                 	db	32
   395   003EBC  55                 	db	85
   396   003EBD  41                 	db	65
   397   003EBE  52                 	db	82
   398   003EBF  54                 	db	84
   399   003EC0  20                 	db	32
   400   003EC1  70                 	db	112
   401   003EC2  6F                 	db	111
   402   003EC3  73                 	db	115
   403   003EC4  6C                 	db	108
   404   003EC5  65                 	db	101
   405   003EC6  20                 	db	32
   406   003EC7  7A                 	db	122
   407   003EC8  70                 	db	112
   408   003EC9  72                 	db	114
   409   003ECA  61                 	db	97
   410   003ECB  76                 	db	118
   411   003ECC  75                 	db	117
   412   003ECD  2C                 	db	44
   413   003ECE  20                 	db	32
   414   003ECF  6F                 	db	111
   415   003ED0  20                 	db	32
   416   003ED1  6D                 	db	109
   417   003ED2  61                 	db	97
   418   003ED3  78                 	db	120
   419   003ED4  69                 	db	105
   420   003ED5  6D                 	db	109
   421   003ED6  61                 	db	97
   422   003ED7  6C                 	db	108
   423   003ED8  6E                 	db	110
   424   003ED9  69                 	db	105
   425   003EDA  20                 	db	32
   426   003EDB  64                 	db	100
   427   003EDC  65                 	db	101
   428   003EDD  6C                 	db	108
   429   003EDE  63                 	db	99
   430   003EDF  65                 	db	101
   431   003EE0  20                 	db	32
   432   003EE1  33                 	db	51
   433   003EE2  30                 	db	48
   434   003EE3  20                 	db	32
   435   003EE4  7A                 	db	122
   436   003EE5  6E                 	db	110
   437   003EE6  61                 	db	97
   438   003EE7  6B                 	db	107
   439   003EE8  75                 	db	117
   440   003EE9  2C                 	db	44
   441   003EEA  20                 	db	32
   442   003EEB  7A                 	db	122
   443   003EEC  70                 	db	112
   444   003EED  65                 	db	101
   445   003EEE  74                 	db	116
   446   003EEF  20                 	db	32
   447   003EF0  76                 	db	118
   448   003EF1  20                 	db	32
   449   003EF2  6F                 	db	111
   450   003EF3  70                 	db	112
   451   003EF4  61                 	db	97
   452   003EF5  63                 	db	99
   453   003EF6  6E                 	db	110
   454   003EF7  65                 	db	101
   455   003EF8  6D                 	db	109
   456   003EF9  20                 	db	32
   457   003EFA  70                 	db	112
   458   003EFB  6F                 	db	111
   459   003EFC  72                 	db	114
   460   003EFD  61                 	db	97
   461   003EFE  64                 	db	100
   462   003EFF  69                 	db	105
   463   003F00  2E                 	db	46
   464   003F01  0A                 	db	10
   465   003F02  00                 	db	0
   466   003F03  00                 	db	0
   467   003F04  00                 	db	0
   468   003F05  00                 	db	0
   469   003F06  00                 	db	0
   470   003F07  00                 	db	0
   471   003F08  00                 	db	0
   472   003F09  00                 	db	0
   473   003F0A  00                 	db	0
   474   003F0B  00                 	db	0
   475                           
   476                           ;initializer for reprak_main@F6526
   477   003F0C  20                 	db	32
   478   003F0D  20                 	db	32
   479   003F0E  20                 	db	32
   480   003F0F  20                 	db	32
   481   003F10  20                 	db	32
   482   003F11  20                 	db	32
   483   003F12  20                 	db	32
   484   003F13  20                 	db	32
   485   003F14  20                 	db	32
   486   003F15  20                 	db	32
   487   003F16  20                 	db	32
   488   003F17  20                 	db	32
   489   003F18  20                 	db	32
   490   003F19  20                 	db	32
   491   003F1A  20                 	db	32
   492   003F1B  20                 	db	32
   493   003F1C  20                 	db	32
   494   000000                     _TXREG1	set	4013
   495   000000                     _RCREG1	set	4014
   496   000000                     _PR4	set	3922
   497   000000                     _SSP2STATbits	set	3949
   498   000000                     _SSP2ADD	set	3950
   499   000000                     _ANSELDbits	set	3899
   500   000000                     _SPBRG1	set	4015
   501   000000                     _ANSELBbits	set	3897
   502   000000                     _SSP1STATbits	set	4039
   503   000000                     _SSP1ADD	set	4040
   504   000000                     _TRISBbits	set	3987
   505   000000                     _ANSELC	set	3898
   506   000000                     _TXSTA1bits	set	4012
   507   000000                     _ADCON1bits	set	4033
   508   000000                     _ANSELEbits	set	3900
   509   000000                     _ADRESL	set	4035
   510   000000                     _ADRESH	set	4036
   511   000000                     _TRISAbits	set	3986
   512   000000                     _ANSELA	set	3896
   513   000000                     _TRISCbits	set	3988
   514   000000                     _TRISD	set	3989
   515   000000                     _LATC4	set	31836
   516   000000                     _LATD2	set	31842
   517   000000                     _T4CONbits	set	3921
   518   000000                     _ANSELAbits	set	3896
   519   000000                     _T3CONbits	set	4017
   520   000000                     _TRISDbits	set	3989
   521   000000                     _PIR1bits	set	3998
   522   000000                     _T1CONbits	set	4045
   523   000000                     _ADCON0bits	set	4034
   524   000000                     _TX1IF	set	31988
   525   000000                     _RC1IF	set	31989
   526   000000                     _LATD6	set	31846
   527   000000                     _LATD5	set	31845
   528   000000                     _LATD4	set	31844
   529   000000                     _LATD3	set	31843
   530   000000                     _SSP1IF	set	31987
   531   000000                     _ADON	set	32272
   532   000000                     _GIE	set	32663
   533   000000                     _TMR2ON	set	32210
   534   000000                     _TRISEbits	set	3990
   535   000000                     _T2CONbits	set	4026
   536   000000                     _TMR2IE	set	31977
   537   000000                     _TMR2IF	set	31985
   538   000000                     _CCP1CONbits	set	4029
   539   000000                     _CCPR1L	set	4030
   540   000000                     _ADCON2bits	set	4032
   541   000000                     _PR2	set	4027
   542   000000                     _GODONE	set	32273
   543   000000                     _PEIE	set	32662
   544   000000                     _RCSTA1bits	set	4011
   545   000000                     _TMR3IE	set	32001
   546   000000                     _TMR1	set	4046
   547   000000                     _SSP1CON1bits	set	4038
   548   000000                     _TMR1ON	set	32360
   549   000000                     _CCPTMRS0bits	set	3913
   550   000000                     _TMR4	set	3923
   551   000000                     _PORTAbits	set	3968
   552   000000                     _PORTCbits	set	3970
   553   000000                     _LATBbits	set	3978
   554   000000                     _TMR4ON	set	31370
   555   000000                     _TMR4IE	set	31720
   556   000000                     _TMR4IF	set	31728
   557   000000                     _SSPBUF	set	4041
   558   000000                     _TMR3	set	4018
   559   000000                     _TMR3ON	set	32136
   560   000000                     _LATAbits	set	3977
   561   000000                     _SSP2IF	set	32039
   562   000000                     _TMR3IF	set	32009
   563   000000                     _PSTR1CONbits	set	4025
   564   000000                     _SSP2CON2bits	set	3947
   565   000000                     _SSP2CON1bits	set	3948
   566   000000                     _SSP2BUF	set	3951
   567                           
   568                           	psect	mediumconst
   569   00FDA8                     __pmediumconst:
   570                           	callstack 0
   571   00FDA8  00                 	db	0
   572   00FDA9                     STR_13:
   573   00FDA9  3E                 	db	62	;'>'
   574   00FDAA  20                 	db	32
   575   00FDAB  37                 	db	55	;'7'
   576   00FDAC  20                 	db	32
   577   00FDAD  2D                 	db	45
   578   00FDAE  20                 	db	32
   579   00FDAF  50                 	db	80	;'P'
   580   00FDB0  52                 	db	82	;'R'
   581   00FDB1  45                 	db	69	;'E'
   582   00FDB2  48                 	db	72	;'H'
   583   00FDB3  52                 	db	82	;'R'
   584   00FDB4  41                 	db	65	;'A'
   585   00FDB5  56                 	db	86	;'V'
   586   00FDB6  41                 	db	65	;'A'
   587   00FDB7  43                 	db	67	;'C'
   588   00FDB8  20                 	db	32
   589   00FDB9  20                 	db	32
   590   00FDBA  20                 	db	32
   591   00FDBB  20                 	db	32
   592   00FDBC  20                 	db	32
   593   00FDBD  20                 	db	32
   594   00FDBE  20                 	db	32
   595   00FDBF  20                 	db	32
   596   00FDC0  20                 	db	32
   597   00FDC1  00                 	db	0
   598   00FDC2                     STR_22:
   599   00FDC2  20                 	db	32
   600   00FDC3  20                 	db	32
   601   00FDC4  20                 	db	32
   602   00FDC5  20                 	db	32
   603   00FDC6  20                 	db	32
   604   00FDC7  20                 	db	32
   605   00FDC8  20                 	db	32
   606   00FDC9  25                 	db	37
   607   00FDCA  64                 	db	100	;'d'
   608   00FDCB  20                 	db	32
   609   00FDCC  73                 	db	115	;'s'
   610   00FDCD  20                 	db	32
   611   00FDCE  20                 	db	32
   612   00FDCF  20                 	db	32
   613   00FDD0  20                 	db	32
   614   00FDD1  20                 	db	32
   615   00FDD2  20                 	db	32
   616   00FDD3  20                 	db	32
   617   00FDD4  20                 	db	32
   618   00FDD5  20                 	db	32
   619   00FDD6  00                 	db	0
   620   00FDD7                     STR_14:
   621   00FDD7  20                 	db	32
   622   00FDD8  20                 	db	32
   623   00FDD9  20                 	db	32
   624   00FDDA  20                 	db	32
   625   00FDDB  20                 	db	32
   626   00FDDC  20                 	db	32
   627   00FDDD  20                 	db	32
   628   00FDDE  20                 	db	32
   629   00FDDF  20                 	db	32
   630   00FDE0  20                 	db	32
   631   00FDE1  20                 	db	32
   632   00FDE2  20                 	db	32
   633   00FDE3  20                 	db	32
   634   00FDE4  20                 	db	32
   635   00FDE5  20                 	db	32
   636   00FDE6  20                 	db	32
   637   00FDE7  20                 	db	32
   638   00FDE8  20                 	db	32
   639   00FDE9  20                 	db	32
   640   00FDEA  20                 	db	32
   641   00FDEB  00                 	db	0
   642   00FDEC                     STR_28:
   643   00FDEC  42                 	db	66	;'B'
   644   00FDED  54                 	db	84	;'T'
   645   00FDEE  4E                 	db	78	;'N'
   646   00FDEF  32                 	db	50	;'2'
   647   00FDF0  20                 	db	32
   648   00FDF1  70                 	db	112	;'p'
   649   00FDF2  72                 	db	114	;'r'
   650   00FDF3  65                 	db	101	;'e'
   651   00FDF4  70                 	db	112	;'p'
   652   00FDF5  69                 	db	105	;'i'
   653   00FDF6  6E                 	db	110	;'n'
   654   00FDF7  61                 	db	97	;'a'
   655   00FDF8  20                 	db	32
   656   00FDF9  6A                 	db	106	;'j'
   657   00FDFA  61                 	db	97	;'a'
   658   00FDFB  73                 	db	115	;'s'
   659   00FDFC  20                 	db	32
   660   00FDFD  20                 	db	32
   661   00FDFE  20                 	db	32
   662   00FDFF  00                 	db	0
   663   00FE00                     STR_10:
   664   00FE00  20                 	db	32
   665   00FE01  20                 	db	32
   666   00FE02  36                 	db	54	;'6'
   667   00FE03  20                 	db	32
   668   00FE04  2D                 	db	45
   669   00FE05  20                 	db	32
   670   00FE06  47                 	db	71	;'G'
   671   00FE07  41                 	db	65	;'A'
   672   00FE08  4D                 	db	77	;'M'
   673   00FE09  45                 	db	69	;'E'
   674   00FE0A  20                 	db	32
   675   00FE0B  20                 	db	32
   676   00FE0C  20                 	db	32
   677   00FE0D  20                 	db	32
   678   00FE0E  20                 	db	32
   679   00FE0F  20                 	db	32
   680   00FE10  20                 	db	32
   681   00FE11  20                 	db	32
   682   00FE12  20                 	db	32
   683   00FE13  00                 	db	0
   684   00FE14                     STR_12:
   685   00FE14  3E                 	db	62	;'>'
   686   00FE15  20                 	db	32
   687   00FE16  36                 	db	54	;'6'
   688   00FE17  20                 	db	32
   689   00FE18  2D                 	db	45
   690   00FE19  20                 	db	32
   691   00FE1A  47                 	db	71	;'G'
   692   00FE1B  41                 	db	65	;'A'
   693   00FE1C  4D                 	db	77	;'M'
   694   00FE1D  45                 	db	69	;'E'
   695   00FE1E  20                 	db	32
   696   00FE1F  20                 	db	32
   697   00FE20  20                 	db	32
   698   00FE21  20                 	db	32
   699   00FE22  20                 	db	32
   700   00FE23  20                 	db	32
   701   00FE24  20                 	db	32
   702   00FE25  20                 	db	32
   703   00FE26  20                 	db	32
   704   00FE27  00                 	db	0
   705   00FE28                     STR_3:
   706   00FE28  20                 	db	32
   707   00FE29  20                 	db	32
   708   00FE2A  31                 	db	49	;'1'
   709   00FE2B  20                 	db	32
   710   00FE2C  2D                 	db	45
   711   00FE2D  20                 	db	32
   712   00FE2E  47                 	db	71	;'G'
   713   00FE2F  50                 	db	80	;'P'
   714   00FE30  49                 	db	73	;'I'
   715   00FE31  4F                 	db	79	;'O'
   716   00FE32  20                 	db	32
   717   00FE33  20                 	db	32
   718   00FE34  20                 	db	32
   719   00FE35  20                 	db	32
   720   00FE36  20                 	db	32
   721   00FE37  20                 	db	32
   722   00FE38  20                 	db	32
   723   00FE39  20                 	db	32
   724   00FE3A  20                 	db	32
   725   00FE3B  00                 	db	0
   726   00FE3C                     STR_4:
   727   00FE3C  3E                 	db	62	;'>'
   728   00FE3D  20                 	db	32
   729   00FE3E  32                 	db	50	;'2'
   730   00FE3F  20                 	db	32
   731   00FE40  2D                 	db	45
   732   00FE41  20                 	db	32
   733   00FE42  55                 	db	85	;'U'
   734   00FE43  41                 	db	65	;'A'
   735   00FE44  52                 	db	82	;'R'
   736   00FE45  54                 	db	84	;'T'
   737   00FE46  20                 	db	32
   738   00FE47  20                 	db	32
   739   00FE48  20                 	db	32
   740   00FE49  20                 	db	32
   741   00FE4A  20                 	db	32
   742   00FE4B  20                 	db	32
   743   00FE4C  20                 	db	32
   744   00FE4D  20                 	db	32
   745   00FE4E  20                 	db	32
   746   00FE4F  00                 	db	0
   747   00FE50                     STR_32:
   748   00FE50  42                 	db	66	;'B'
   749   00FE51  54                 	db	84	;'T'
   750   00FE52  4E                 	db	78	;'N'
   751   00FE53  31                 	db	49	;'1'
   752   00FE54  3A                 	db	58	;':'
   753   00FE55  20                 	db	32
   754   00FE56  53                 	db	83	;'S'
   755   00FE57  54                 	db	84	;'T'
   756   00FE58  41                 	db	65	;'A'
   757   00FE59  52                 	db	82	;'R'
   758   00FE5A  54                 	db	84	;'T'
   759   00FE5B  2F                 	db	47
   760   00FE5C  53                 	db	83	;'S'
   761   00FE5D  54                 	db	84	;'T'
   762   00FE5E  4F                 	db	79	;'O'
   763   00FE5F  50                 	db	80	;'P'
   764   00FE60  20                 	db	32
   765   00FE61  20                 	db	32
   766   00FE62  00                 	db	0
   767   00FE63                     STR_23:
   768   00FE63  5A                 	db	90	;'Z'
   769   00FE64  6D                 	db	109	;'m'
   770   00FE65  61                 	db	97	;'a'
   771   00FE66  63                 	db	99	;'c'
   772   00FE67  6B                 	db	107	;'k'
   773   00FE68  6E                 	db	110	;'n'
   774   00FE69  69                 	db	105	;'i'
   775   00FE6A  20                 	db	32
   776   00FE6B  42                 	db	66	;'B'
   777   00FE6C  54                 	db	84	;'T'
   778   00FE6D  4E                 	db	78	;'N'
   779   00FE6E  31                 	db	49	;'1'
   780   00FE6F  20                 	db	32
   781   00FE70  70                 	db	112	;'p'
   782   00FE71  6F                 	db	111	;'o'
   783   00FE72  3A                 	db	58	;':'
   784   00FE73  20                 	db	32
   785   00FE74  20                 	db	32
   786   00FE75  00                 	db	0
   787   00FE76                     STR_11:
   788   00FE76  20                 	db	32
   789   00FE77  20                 	db	32
   790   00FE78  35                 	db	53	;'5'
   791   00FE79  20                 	db	32
   792   00FE7A  2D                 	db	45
   793   00FE7B  20                 	db	32
   794   00FE7C  44                 	db	68	;'D'
   795   00FE7D  41                 	db	65	;'A'
   796   00FE7E  43                 	db	67	;'C'
   797   00FE7F  20                 	db	32
   798   00FE80  20                 	db	32
   799   00FE81  20                 	db	32
   800   00FE82  20                 	db	32
   801   00FE83  20                 	db	32
   802   00FE84  20                 	db	32
   803   00FE85  20                 	db	32
   804   00FE86  20                 	db	32
   805   00FE87  20                 	db	32
   806   00FE88  00                 	db	0
   807   00FE89                     STR_9:
   808   00FE89  3E                 	db	62	;'>'
   809   00FE8A  20                 	db	32
   810   00FE8B  35                 	db	53	;'5'
   811   00FE8C  20                 	db	32
   812   00FE8D  2D                 	db	45
   813   00FE8E  20                 	db	32
   814   00FE8F  44                 	db	68	;'D'
   815   00FE90  41                 	db	65	;'A'
   816   00FE91  43                 	db	67	;'C'
   817   00FE92  20                 	db	32
   818   00FE93  20                 	db	32
   819   00FE94  20                 	db	32
   820   00FE95  20                 	db	32
   821   00FE96  20                 	db	32
   822   00FE97  20                 	db	32
   823   00FE98  20                 	db	32
   824   00FE99  20                 	db	32
   825   00FE9A  20                 	db	32
   826   00FE9B  00                 	db	0
   827   00FE9C                     STR_6:
   828   00FE9C  20                 	db	32
   829   00FE9D  20                 	db	32
   830   00FE9E  34                 	db	52	;'4'
   831   00FE9F  20                 	db	32
   832   00FEA0  2D                 	db	45
   833   00FEA1  20                 	db	32
   834   00FEA2  41                 	db	65	;'A'
   835   00FEA3  44                 	db	68	;'D'
   836   00FEA4  43                 	db	67	;'C'
   837   00FEA5  20                 	db	32
   838   00FEA6  20                 	db	32
   839   00FEA7  20                 	db	32
   840   00FEA8  20                 	db	32
   841   00FEA9  20                 	db	32
   842   00FEAA  20                 	db	32
   843   00FEAB  20                 	db	32
   844   00FEAC  20                 	db	32
   845   00FEAD  20                 	db	32
   846   00FEAE  00                 	db	0
   847   00FEAF                     STR_8:
   848   00FEAF  3E                 	db	62	;'>'
   849   00FEB0  20                 	db	32
   850   00FEB1  34                 	db	52	;'4'
   851   00FEB2  20                 	db	32
   852   00FEB3  2D                 	db	45
   853   00FEB4  20                 	db	32
   854   00FEB5  41                 	db	65	;'A'
   855   00FEB6  44                 	db	68	;'D'
   856   00FEB7  43                 	db	67	;'C'
   857   00FEB8  20                 	db	32
   858   00FEB9  20                 	db	32
   859   00FEBA  20                 	db	32
   860   00FEBB  20                 	db	32
   861   00FEBC  20                 	db	32
   862   00FEBD  20                 	db	32
   863   00FEBE  20                 	db	32
   864   00FEBF  20                 	db	32
   865   00FEC0  20                 	db	32
   866   00FEC1  00                 	db	0
   867   00FEC2                     STR_7:
   868   00FEC2  20                 	db	32
   869   00FEC3  20                 	db	32
   870   00FEC4  33                 	db	51	;'3'
   871   00FEC5  20                 	db	32
   872   00FEC6  2D                 	db	45
   873   00FEC7  20                 	db	32
   874   00FEC8  50                 	db	80	;'P'
   875   00FEC9  4D                 	db	77	;'M'
   876   00FECA  57                 	db	87	;'W'
   877   00FECB  20                 	db	32
   878   00FECC  20                 	db	32
   879   00FECD  20                 	db	32
   880   00FECE  20                 	db	32
   881   00FECF  20                 	db	32
   882   00FED0  20                 	db	32
   883   00FED1  20                 	db	32
   884   00FED2  20                 	db	32
   885   00FED3  20                 	db	32
   886   00FED4  00                 	db	0
   887   00FED5                     STR_5:
   888   00FED5  3E                 	db	62	;'>'
   889   00FED6  20                 	db	32
   890   00FED7  33                 	db	51	;'3'
   891   00FED8  20                 	db	32
   892   00FED9  2D                 	db	45
   893   00FEDA  20                 	db	32
   894   00FEDB  50                 	db	80	;'P'
   895   00FEDC  4D                 	db	77	;'M'
   896   00FEDD  57                 	db	87	;'W'
   897   00FEDE  20                 	db	32
   898   00FEDF  20                 	db	32
   899   00FEE0  20                 	db	32
   900   00FEE1  20                 	db	32
   901   00FEE2  20                 	db	32
   902   00FEE3  20                 	db	32
   903   00FEE4  20                 	db	32
   904   00FEE5  20                 	db	32
   905   00FEE6  20                 	db	32
   906   00FEE7  00                 	db	0
   907   00FEE8                     STR_1:
   908   00FEE8  3E                 	db	62	;'>'
   909   00FEE9  20                 	db	32
   910   00FEEA  31                 	db	49	;'1'
   911   00FEEB  20                 	db	32
   912   00FEEC  2D                 	db	45
   913   00FEED  20                 	db	32
   914   00FEEE  47                 	db	71	;'G'
   915   00FEEF  50                 	db	80	;'P'
   916   00FEF0  49                 	db	73	;'I'
   917   00FEF1  4F                 	db	79	;'O'
   918   00FEF2  20                 	db	32
   919   00FEF3  20                 	db	32
   920   00FEF4  20                 	db	32
   921   00FEF5  20                 	db	32
   922   00FEF6  20                 	db	32
   923   00FEF7  20                 	db	32
   924   00FEF8  20                 	db	32
   925   00FEF9  20                 	db	32
   926   00FEFA  00                 	db	0
   927   00FEFB                     STR_2:
   928   00FEFB  20                 	db	32
   929   00FEFC  20                 	db	32
   930   00FEFD  32                 	db	50	;'2'
   931   00FEFE  20                 	db	32
   932   00FEFF  2D                 	db	45
   933   00FF00  20                 	db	32
   934   00FF01  55                 	db	85	;'U'
   935   00FF02  41                 	db	65	;'A'
   936   00FF03  52                 	db	82	;'R'
   937   00FF04  54                 	db	84	;'T'
   938   00FF05  20                 	db	32
   939   00FF06  20                 	db	32
   940   00FF07  20                 	db	32
   941   00FF08  20                 	db	32
   942   00FF09  20                 	db	32
   943   00FF0A  20                 	db	32
   944   00FF0B  20                 	db	32
   945   00FF0C  20                 	db	32
   946   00FF0D  00                 	db	0
   947   00FF0E                     STR_34:
   948   00FF0E  20                 	db	32
   949   00FF0F  20                 	db	32
   950   00FF10  20                 	db	32
   951   00FF11  20                 	db	32
   952   00FF12  20                 	db	32
   953   00FF13  20                 	db	32
   954   00FF14  55                 	db	85	;'U'
   955   00FF15  41                 	db	65	;'A'
   956   00FF16  52                 	db	82	;'R'
   957   00FF17  54                 	db	84	;'T'
   958   00FF18  20                 	db	32
   959   00FF19  20                 	db	32
   960   00FF1A  20                 	db	32
   961   00FF1B  20                 	db	32
   962   00FF1C  20                 	db	32
   963   00FF1D  20                 	db	32
   964   00FF1E  20                 	db	32
   965   00FF1F  00                 	db	0
   966   00FF20                     STR_35:
   967   00FF20  20                 	db	32
   968   00FF21  4F                 	db	79	;'O'
   969   00FF22  74                 	db	116	;'t'
   970   00FF23  6F                 	db	111	;'o'
   971   00FF24  63                 	db	99	;'c'
   972   00FF25  65                 	db	101	;'e'
   973   00FF26  6E                 	db	110	;'n'
   974   00FF27  69                 	db	105	;'i'
   975   00FF28  20                 	db	32
   976   00FF29  7A                 	db	122	;'z'
   977   00FF2A  70                 	db	112	;'p'
   978   00FF2B  72                 	db	114	;'r'
   979   00FF2C  61                 	db	97	;'a'
   980   00FF2D  76                 	db	118	;'v'
   981   00FF2E  79                 	db	121	;'y'
   982   00FF2F  20                 	db	32
   983   00FF30  20                 	db	32
   984   00FF31  00                 	db	0
   985   00FF32                     STR_27:
   986   00FF32  53                 	db	83	;'S'
   987   00FF33  74                 	db	116	;'t'
   988   00FF34  69                 	db	105	;'i'
   989   00FF35  73                 	db	115	;'s'
   990   00FF36  6B                 	db	107	;'k'
   991   00FF37  6E                 	db	110	;'n'
   992   00FF38  69                 	db	105	;'i'
   993   00FF39  20                 	db	32
   994   00FF3A  42                 	db	66	;'B'
   995   00FF3B  54                 	db	84	;'T'
   996   00FF3C  4E                 	db	78	;'N'
   997   00FF3D  32                 	db	50	;'2'
   998   00FF3E  20                 	db	32
   999   00FF3F  20                 	db	32
  1000   00FF40  20                 	db	32
  1001   00FF41  20                 	db	32
  1002   00FF42  20                 	db	32
  1003   00FF43  00                 	db	0
  1004   00FF44                     STR_26:
  1005   00FF44  52                 	db	82	;'R'
  1006   00FF45  6F                 	db	111	;'o'
  1007   00FF46  7A                 	db	122	;'z'
  1008   00FF47  73                 	db	115	;'s'
  1009   00FF48  76                 	db	118	;'v'
  1010   00FF49  65                 	db	101	;'e'
  1011   00FF4A  63                 	db	99	;'c'
  1012   00FF4B  6F                 	db	111	;'o'
  1013   00FF4C  76                 	db	118	;'v'
  1014   00FF4D  61                 	db	97	;'a'
  1015   00FF4E  6E                 	db	110	;'n'
  1016   00FF4F  69                 	db	105	;'i'
  1017   00FF50  20                 	db	32
  1018   00FF51  4C                 	db	76	;'L'
  1019   00FF52  45                 	db	69	;'E'
  1020   00FF53  44                 	db	68	;'D'
  1021   00FF54  20                 	db	32
  1022   00FF55  00                 	db	0
  1023   00FF56                     STR_25:
  1024   00FF56  4E                 	db	78	;'N'
  1025   00FF57  6F                 	db	111	;'o'
  1026   00FF58  76                 	db	118	;'v'
  1027   00FF59  61                 	db	97	;'a'
  1028   00FF5A  20                 	db	32
  1029   00FF5B  68                 	db	104	;'h'
  1030   00FF5C  72                 	db	114	;'r'
  1031   00FF5D  61                 	db	97	;'a'
  1032   00FF5E  20                 	db	32
  1033   00FF5F  42                 	db	66	;'B'
  1034   00FF60  54                 	db	84	;'T'
  1035   00FF61  4E                 	db	78	;'N'
  1036   00FF62  31                 	db	49	;'1'
  1037   00FF63  20                 	db	32
  1038   00FF64  20                 	db	32
  1039   00FF65  20                 	db	32
  1040   00FF66  20                 	db	32
  1041   00FF67  00                 	db	0
  1042   00FF68                     STR_20:
  1043   00FF68  20                 	db	32
  1044   00FF69  20                 	db	32
  1045   00FF6A  48                 	db	72	;'H'
  1046   00FF6B  61                 	db	97	;'a'
  1047   00FF6C  64                 	db	100	;'d'
  1048   00FF6D  61                 	db	97	;'a'
  1049   00FF6E  6E                 	db	110	;'n'
  1050   00FF6F  69                 	db	105	;'i'
  1051   00FF70  20                 	db	32
  1052   00FF71  63                 	db	99	;'c'
  1053   00FF72  61                 	db	97	;'a'
  1054   00FF73  73                 	db	115	;'s'
  1055   00FF74  75                 	db	117	;'u'
  1056   00FF75  20                 	db	32
  1057   00FF76  20                 	db	32
  1058   00FF77  20                 	db	32
  1059   00FF78  20                 	db	32
  1060   00FF79  00                 	db	0
  1061   00FF7A                     STR_21:
  1062   00FF7A  20                 	db	32
  1063   00FF7B  20                 	db	32
  1064   00FF7C  53                 	db	83	;'S'
  1065   00FF7D  74                 	db	116	;'t'
  1066   00FF7E  69                 	db	105	;'i'
  1067   00FF7F  73                 	db	115	;'s'
  1068   00FF80  6B                 	db	107	;'k'
  1069   00FF81  6E                 	db	110	;'n'
  1070   00FF82  69                 	db	105	;'i'
  1071   00FF83  20                 	db	32
  1072   00FF84  42                 	db	66	;'B'
  1073   00FF85  54                 	db	84	;'T'
  1074   00FF86  4E                 	db	78	;'N'
  1075   00FF87  31                 	db	49	;'1'
  1076   00FF88  20                 	db	32
  1077   00FF89  20                 	db	32
  1078   00FF8A  20                 	db	32
  1079   00FF8B  00                 	db	0
  1080   00FF8C                     STR_15:
  1081   00FF8C  50                 	db	80	;'P'
  1082   00FF8D  4F                 	db	79	;'O'
  1083   00FF8E  54                 	db	84	;'T'
  1084   00FF8F  31                 	db	49	;'1'
  1085   00FF90  3A                 	db	58	;':'
  1086   00FF91  20                 	db	32
  1087   00FF92  20                 	db	32
  1088   00FF93  25                 	db	37
  1089   00FF94  2E                 	db	46
  1090   00FF95  31                 	db	49	;'1'
  1091   00FF96  66                 	db	102	;'f'
  1092   00FF97  20                 	db	32
  1093   00FF98  56                 	db	86	;'V'
  1094   00FF99  20                 	db	32
  1095   00FF9A  20                 	db	32
  1096   00FF9B  20                 	db	32
  1097   00FF9C  20                 	db	32
  1098   00FF9D  00                 	db	0
  1099   00FF9E                     STR_16:
  1100   00FF9E  50                 	db	80	;'P'
  1101   00FF9F  4F                 	db	79	;'O'
  1102   00FFA0  54                 	db	84	;'T'
  1103   00FFA1  32                 	db	50	;'2'
  1104   00FFA2  3A                 	db	58	;':'
  1105   00FFA3  20                 	db	32
  1106   00FFA4  20                 	db	32
  1107   00FFA5  25                 	db	37
  1108   00FFA6  2E                 	db	46
  1109   00FFA7  31                 	db	49	;'1'
  1110   00FFA8  66                 	db	102	;'f'
  1111   00FFA9  20                 	db	32
  1112   00FFAA  56                 	db	86	;'V'
  1113   00FFAB  20                 	db	32
  1114   00FFAC  20                 	db	32
  1115   00FFAD  20                 	db	32
  1116   00FFAE  20                 	db	32
  1117   00FFAF  00                 	db	0
  1118   00FFB0                     STR_29:
  1119   00FFB0  4A                 	db	74	;'J'
  1120   00FFB1  61                 	db	97	;'a'
  1121   00FFB2  73                 	db	115	;'s'
  1122   00FFB3  3A                 	db	58	;':'
  1123   00FFB4  20                 	db	32
  1124   00FFB5  20                 	db	32
  1125   00FFB6  25                 	db	37
  1126   00FFB7  64                 	db	100	;'d'
  1127   00FFB8  20                 	db	32
  1128   00FFB9  70                 	db	112	;'p'
  1129   00FFBA  65                 	db	101	;'e'
  1130   00FFBB  72                 	db	114	;'r'
  1131   00FFBC  63                 	db	99	;'c'
  1132   00FFBD  20                 	db	32
  1133   00FFBE  20                 	db	32
  1134   00FFBF  20                 	db	32
  1135   00FFC0  00                 	db	0
  1136   00FFC1                     STR_17:
  1137   00FFC1  20                 	db	32
  1138   00FFC2  20                 	db	32
  1139   00FFC3  54                 	db	84	;'T'
  1140   00FFC4  72                 	db	114	;'r'
  1141   00FFC5  6F                 	db	111	;'o'
  1142   00FFC6  6A                 	db	106	;'j'
  1143   00FFC7  75                 	db	117	;'u'
  1144   00FFC8  68                 	db	104	;'h'
  1145   00FFC9  65                 	db	101	;'e'
  1146   00FFCA  6C                 	db	108	;'l'
  1147   00FFCB  6E                 	db	110	;'n'
  1148   00FFCC  69                 	db	105	;'i'
  1149   00FFCD  6B                 	db	107	;'k'
  1150   00FFCE  20                 	db	32
  1151   00FFCF  20                 	db	32
  1152   00FFD0  20                 	db	32
  1153   00FFD1  00                 	db	0
  1154   00FFD2                     STR_18:
  1155   00FFD2  50                 	db	80	;'P'
  1156   00FFD3  4F                 	db	79	;'O'
  1157   00FFD4  54                 	db	84	;'T'
  1158   00FFD5  31                 	db	49	;'1'
  1159   00FFD6  3A                 	db	58	;':'
  1160   00FFD7  41                 	db	65	;'A'
  1161   00FFD8  6D                 	db	109	;'m'
  1162   00FFD9  70                 	db	112	;'p'
  1163   00FFDA  2C                 	db	44
  1164   00FFDB  50                 	db	80	;'P'
  1165   00FFDC  4F                 	db	79	;'O'
  1166   00FFDD  54                 	db	84	;'T'
  1167   00FFDE  32                 	db	50	;'2'
  1168   00FFDF  3A                 	db	58	;':'
  1169   00FFE0  48                 	db	72	;'H'
  1170   00FFE1  7A                 	db	122	;'z'
  1171   00FFE2  00                 	db	0
  1172   00FFE3                     STR_24:
  1173   00FFE3  52                 	db	82	;'R'
  1174   00FFE4  6F                 	db	111	;'o'
  1175   00FFE5  7A                 	db	122	;'z'
  1176   00FFE6  64                 	db	100	;'d'
  1177   00FFE7  69                 	db	105	;'i'
  1178   00FFE8  6C                 	db	108	;'l'
  1179   00FFE9  3A                 	db	58	;':'
  1180   00FFEA  20                 	db	32
  1181   00FFEB  25                 	db	37
  1182   00FFEC  64                 	db	100	;'d'
  1183   00FFED  20                 	db	32
  1184   00FFEE  6D                 	db	109	;'m'
  1185   00FFEF  73                 	db	115	;'s'
  1186   00FFF0  00                 	db	0
  1187   00FFF1                     STR_19:
  1188   00FFF1  25                 	db	37
  1189   00FFF2  64                 	db	100	;'d'
  1190   00FFF3  2C                 	db	44
  1191   00FFF4  20                 	db	32
  1192   00FFF5  0D                 	db	13
  1193   00FFF6  00                 	db	0
  1194   00FFF7                     STR_36:
  1195   00FFF7  69                 	db	105	;'i'
  1196   00FFF8  6E                 	db	110	;'n'
  1197   00FFF9  66                 	db	102	;'f'
  1198   00FFFA  00                 	db	0
  1199   00FFFB                     STR_39:
  1200   00FFFB  6E                 	db	110	;'n'
  1201   00FFFC  61                 	db	97	;'a'
  1202   00FFFD  6E                 	db	110	;'n'
  1203   00FFFE  00                 	db	0
  1204   00FFFF  00                 	db	0	; dummy byte at the end
  1205   000000                     
  1206                           ; #config settings
  1207                           
  1208                           	psect	cinit
  1209   003CE8                     __pcinit:
  1210                           	callstack 0
  1211   003CE8                     start_initialization:
  1212                           	callstack 0
  1213   003CE8                     __initialization:
  1214                           	callstack 0
  1215                           
  1216                           ; Initialize objects allocated to BIGRAM (520 bytes)
  1217                           ; load TBLPTR registers with __pidataBIGRAM
  1218   003CE8  0EDE               	movlw	low __pidataBIGRAM
  1219   003CEA  6EF6               	movwf	tblptrl,c
  1220   003CEC  0E25               	movlw	high __pidataBIGRAM
  1221   003CEE  6EF7               	movwf	tblptrh,c
  1222   003CF0  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1223   003CF2  6EF8               	movwf	tblptru,c
  1224   003CF4  EE01  F0F6         	lfsr	0,__pdataBIGRAM
  1225   003CF8  EE12 F008          	lfsr	1,520
  1226   003CFC                     copy_data0:
  1227   003CFC  0009               	tblrd		*+
  1228   003CFE  CFF5 FFEE          	movff	tablat,postinc0
  1229   003D02  50E5               	movf	postdec1,w,c
  1230   003D04  50E1               	movf	fsr1l,w,c
  1231   003D06  E1FA               	bnz	copy_data0
  1232   003D08  50E2               	movf	fsr1h,w,c
  1233   003D0A  E1F8               	bnz	copy_data0
  1234                           
  1235                           ; Initialize objects allocated to BANK1 (107 bytes)
  1236                           ; load TBLPTR registers with __pidataBANK1
  1237   003D0C  0EB2               	movlw	low __pidataBANK1
  1238   003D0E  6EF6               	movwf	tblptrl,c
  1239   003D10  0E3E               	movlw	high __pidataBANK1
  1240   003D12  6EF7               	movwf	tblptrh,c
  1241   003D14  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1242   003D16  6EF8               	movwf	tblptru,c
  1243   003D18  EE01  F000         	lfsr	0,__pdataBANK1
  1244   003D1C  EE10 F06B          	lfsr	1,107
  1245   003D20                     copy_data1:
  1246   003D20  0009               	tblrd		*+
  1247   003D22  CFF5 FFEE          	movff	tablat,postinc0
  1248   003D26  50E5               	movf	postdec1,w,c
  1249   003D28  50E1               	movf	fsr1l,w,c
  1250   003D2A  E1FA               	bnz	copy_data1
  1251                           
  1252                           ; Clear objects allocated to BANK1 (92 bytes)
  1253   003D2C  EE01  F06B         	lfsr	0,__pbssBANK1
  1254   003D30  0E5C               	movlw	92
  1255   003D32                     clear_0:
  1256   003D32  6AEE               	clrf	postinc0,c
  1257   003D34  06E8               	decf	wreg,f,c
  1258   003D36  E1FD               	bnz	clear_0
  1259                           
  1260                           ; Clear objects allocated to BANK0 (18 bytes)
  1261   003D38  EE00  F0E7         	lfsr	0,__pbssBANK0
  1262   003D3C  0E12               	movlw	18
  1263   003D3E                     clear_1:
  1264   003D3E  6AEE               	clrf	postinc0,c
  1265   003D40  06E8               	decf	wreg,f,c
  1266   003D42  E1FD               	bnz	clear_1
  1267                           
  1268                           ; Clear objects allocated to COMRAM (6 bytes)
  1269   003D44  6A5D               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1270   003D46  6A5C               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1271   003D48  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1272   003D4A  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1273   003D4C  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1274   003D4E  6A58               	clrf	__pbssCOMRAM& (0+255),c
  1275   003D50                     end_of_initialization:
  1276                           	callstack 0
  1277   003D50                     __end_of__initialization:
  1278                           	callstack 0
  1279   003D50  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1280   003D52  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1281   003D54  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1282   003D56  6EF8               	movwf	tblptru,c
  1283   003D58  0100               	movlb	0
  1284   003D5A  EF95  F010         	goto	_main	;jump to C main() function
  1285                           
  1286                           	psect	bssCOMRAM
  1287   000058                     __pbssCOMRAM:
  1288                           	callstack 0
  1289   000058                     _width:
  1290                           	callstack 0
  1291   000058                     	ds	2
  1292   00005A                     _prec:
  1293                           	callstack 0
  1294   00005A                     	ds	2
  1295   00005C                     ISR_HANDLER@t_c2:
  1296                           	callstack 0
  1297   00005C                     	ds	2
  1298                           
  1299                           	psect	bssBANK0
  1300   0000E7                     __pbssBANK0:
  1301                           	callstack 0
  1302   0000E7                     _reprak:
  1303                           	callstack 0
  1304   0000E7                     	ds	9
  1305   0000F0                     _buttons:
  1306                           	callstack 0
  1307   0000F0                     	ds	8
  1308   0000F8                     _flags:
  1309                           	callstack 0
  1310   0000F8                     	ds	1
  1311                           
  1312                           	psect	bssBANK1
  1313   00016B                     __pbssBANK1:
  1314                           	callstack 0
  1315   00016B                     floorf@F526:
  1316                           	callstack 0
  1317   00016B                     	ds	4
  1318   00016F                     ___fpclassifyf@F465:
  1319                           	callstack 0
  1320   00016F                     	ds	4
  1321   000173                     _dbuf:
  1322                           	callstack 0
  1323   000173                     	ds	80
  1324   0001C3                     _seed:
  1325                           	callstack 0
  1326   0001C3                     	ds	4
  1327                           
  1328                           	psect	dataBANK1
  1329   000100                     __pdataBANK1:
  1330                           	callstack 0
  1331   000100                     UART_main@F6213:
  1332                           	callstack 0
  1333   000100                     	ds	90
  1334   00015A                     reprak_main@F6526:
  1335                           	callstack 0
  1336   00015A                     	ds	17
  1337                           
  1338                           	psect	dataBIGRAM
  1339   0001F6                     __pdataBIGRAM:
  1340                           	callstack 0
  1341   0001F6                     _melody:
  1342                           	callstack 0
  1343   0001F6                     	ds	520
  1344                           
  1345                           	psect	cstackBANK1
  1346   0001C7                     __pcstackBANK1:
  1347                           	callstack 0
  1348   0001C7                     ADC_main@txt_pot1:
  1349                           	callstack 0
  1350                           
  1351                           ; 17 bytes @ 0x0
  1352   0001C7                     	ds	17
  1353   0001D8                     ADC_main@txt_pot2:
  1354                           	callstack 0
  1355                           
  1356                           ; 17 bytes @ 0x11
  1357   0001D8                     	ds	17
  1358   0001E9                     ADC_main@pot1:
  1359                           	callstack 0
  1360                           
  1361                           ; 4 bytes @ 0x22
  1362   0001E9                     	ds	4
  1363   0001ED                     ADC_main@pot2:
  1364                           	callstack 0
  1365                           
  1366                           ; 4 bytes @ 0x26
  1367   0001ED                     	ds	4
  1368   0001F1                     ADC_main@data_pot1:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x2A
  1372   0001F1                     	ds	2
  1373   0001F3                     ADC_main@data_pot2:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x2C
  1377   0001F3                     	ds	2
  1378   0001F5                     ADC_main@change:
  1379                           	callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x2E
  1382   0001F5                     	ds	1
  1383                           
  1384                           	psect	cstackBANK0
  1385   000060                     __pcstackBANK0:
  1386                           	callstack 0
  1387   000060                     ?___flsub:
  1388                           	callstack 0
  1389   000060                     ?___fltol:
  1390                           	callstack 0
  1391   000060                     ___fltol@f1:
  1392                           	callstack 0
  1393   000060                     ___flsub@b:
  1394                           	callstack 0
  1395   000060                     UART_main@uvod:
  1396                           	callstack 0
  1397                           
  1398                           ; 90 bytes @ 0x0
  1399   000060                     	ds	4
  1400   000064                     ___flsub@a:
  1401                           	callstack 0
  1402   000064                     reprak_main@txt:
  1403                           	callstack 0
  1404                           
  1405                           ; 17 bytes @ 0x4
  1406   000064                     	ds	4
  1407   000068                     efgtoa@fp:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x8
  1411   000068                     	ds	2
  1412   00006A                     efgtoa@f:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0xA
  1416   00006A                     	ds	4
  1417   00006E                     efgtoa@c:
  1418                           	callstack 0
  1419                           
  1420                           ; 1 bytes @ 0xE
  1421   00006E                     	ds	1
  1422   00006F                     ??_efgtoa:
  1423                           
  1424                           ; 1 bytes @ 0xF
  1425   00006F                     	ds	2
  1426   000071                     efgtoa@ne:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x11
  1430   000071                     	ds	2
  1431   000073                     efgtoa@p:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x13
  1435   000073                     	ds	2
  1436   000075                     efgtoa@t:
  1437                           	callstack 0
  1438   000075                     _reprak_main$3616:
  1439                           	callstack 0
  1440                           
  1441                           ; 4 bytes @ 0x15
  1442   000075                     	ds	2
  1443   000077                     _efgtoa$3290:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x17
  1447   000077                     	ds	2
  1448   000079                     efgtoa@pp:
  1449                           	callstack 0
  1450   000079                     reprak_main@perc:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x19
  1454   000079                     	ds	1
  1455   00007A                     efgtoa@mode:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x1A
  1459   00007A                     	ds	1
  1460   00007B                     reprak_main@btn1:
  1461                           	callstack 0
  1462   00007B                     efgtoa@nmode:
  1463                           	callstack 0
  1464                           
  1465                           ; 1 bytes @ 0x1B
  1466   00007B                     	ds	1
  1467   00007C                     reprak_main@len:
  1468                           	callstack 0
  1469   00007C                     efgtoa@d:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x1C
  1473   00007C                     	ds	2
  1474   00007E                     efgtoa@m:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x1E
  1478   00007E                     	ds	2
  1479   000080                     efgtoa@e:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x20
  1483   000080                     	ds	2
  1484   000082                     efgtoa@w:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x22
  1488   000082                     	ds	2
  1489   000084                     efgtoa@ou:
  1490                           	callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x24
  1493   000084                     	ds	4
  1494   000088                     efgtoa@i:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x28
  1498   000088                     	ds	2
  1499   00008A                     efgtoa@h:
  1500                           	callstack 0
  1501                           
  1502                           ; 4 bytes @ 0x2A
  1503   00008A                     	ds	4
  1504   00008E                     efgtoa@l:
  1505                           	callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x2E
  1508   00008E                     	ds	4
  1509   000092                     efgtoa@sign:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x32
  1513   000092                     	ds	1
  1514   000093                     efgtoa@g:
  1515                           	callstack 0
  1516                           
  1517                           ; 4 bytes @ 0x33
  1518   000093                     	ds	4
  1519   000097                     efgtoa@n:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x37
  1523   000097                     	ds	2
  1524   000099                     efgtoa@u:
  1525                           	callstack 0
  1526                           
  1527                           ; 4 bytes @ 0x39
  1528   000099                     	ds	4
  1529   00009D                     vfpfcnvrt@fp:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x3D
  1533   00009D                     	ds	2
  1534   00009F                     vfpfcnvrt@fmt:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x3F
  1538   00009F                     	ds	2
  1539   0000A1                     vfpfcnvrt@ap:
  1540                           	callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x41
  1543   0000A1                     	ds	2
  1544   0000A3                     ??_vfpfcnvrt:
  1545                           
  1546                           ; 1 bytes @ 0x43
  1547   0000A3                     	ds	2
  1548   0000A5                     vfpfcnvrt@convarg:
  1549                           	callstack 0
  1550                           
  1551                           ; 4 bytes @ 0x45
  1552   0000A5                     	ds	4
  1553   0000A9                     vfpfcnvrt@c:
  1554                           	callstack 0
  1555                           
  1556                           ; 1 bytes @ 0x49
  1557   0000A9                     	ds	1
  1558   0000AA                     vfpfcnvrt@cp:
  1559                           	callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x4A
  1562   0000AA                     	ds	2
  1563   0000AC                     ?_vfprintf:
  1564                           	callstack 0
  1565   0000AC                     vfprintf@fp:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x4C
  1569   0000AC                     	ds	2
  1570   0000AE                     vfprintf@fmt:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x4E
  1574   0000AE                     	ds	2
  1575   0000B0                     vfprintf@ap:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x50
  1579   0000B0                     	ds	2
  1580   0000B2                     vfprintf@cfmt:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x52
  1584   0000B2                     	ds	2
  1585   0000B4                     ?_sprintf:
  1586                           	callstack 0
  1587   0000B4                     ?_printf:
  1588                           	callstack 0
  1589   0000B4                     sprintf@s:
  1590                           	callstack 0
  1591   0000B4                     printf@fmt:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x54
  1595   0000B4                     	ds	2
  1596   0000B6                     sprintf@fmt:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x56
  1600   0000B6                     	ds	2
  1601   0000B8                     printf@ap:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x58
  1605   0000B8                     	ds	2
  1606   0000BA                     ??_DAC_main:
  1607   0000BA                     UART_main@text:
  1608                           	callstack 0
  1609                           
  1610                           ; 30 bytes @ 0x5A
  1611   0000BA                     	ds	2
  1612   0000BC                     sprintf@ap:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x5C
  1616   0000BC                     	ds	1
  1617   0000BD                     DAC_main@data_pot1:
  1618                           	callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x5D
  1621   0000BD                     	ds	1
  1622   0000BE                     sprintf@f:
  1623                           	callstack 0
  1624                           
  1625                           ; 12 bytes @ 0x5E
  1626   0000BE                     	ds	1
  1627   0000BF                     DAC_main@data_pot2:
  1628                           	callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x5F
  1631   0000BF                     	ds	2
  1632   0000C1                     DAC_main@A:
  1633                           	callstack 0
  1634                           
  1635                           ; 2 bytes @ 0x61
  1636   0000C1                     	ds	2
  1637   0000C3                     DAC_main@freq:
  1638                           	callstack 0
  1639                           
  1640                           ; 2 bytes @ 0x63
  1641   0000C3                     	ds	2
  1642   0000C5                     DAC_main@dir:
  1643                           	callstack 0
  1644                           
  1645                           ; 1 bytes @ 0x65
  1646   0000C5                     	ds	1
  1647   0000C6                     DAC_main@i:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x66
  1651   0000C6                     	ds	4
  1652   0000CA                     ??_ADC_main:
  1653   0000CA                     GAME_main@txt_g:
  1654                           	callstack 0
  1655   0000CA                     PWM_main@txt:
  1656                           	callstack 0
  1657                           
  1658                           ; 17 bytes @ 0x6A
  1659   0000CA                     	ds	14
  1660   0000D8                     UART_main@flag:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x78
  1664   0000D8                     	ds	1
  1665   0000D9                     UART_main@idx:
  1666                           	callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x79
  1669   0000D9                     	ds	2
  1670   0000DB                     GAME_main@vysledek:
  1671                           	callstack 0
  1672   0000DB                     PWM_main@duty:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x7B
  1676   0000DB                     	ds	2
  1677   0000DD                     GAME_main@tmr_c:
  1678                           	callstack 0
  1679   0000DD                     PWM_main@jas:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x7D
  1683   0000DD                     	ds	2
  1684   0000DF                     GAME_main@cas:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x7F
  1688   0000DF                     	ds	2
  1689   0000E1                     GAME_main@game_end:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x81
  1693   0000E1                     	ds	1
  1694   0000E2                     ??_main:
  1695                           
  1696                           ; 1 bytes @ 0x82
  1697   0000E2                     	ds	2
  1698   0000E4                     main@menu_kurz:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x84
  1702   0000E4                     	ds	2
  1703   0000E6                     main@flag:
  1704                           	callstack 0
  1705                           
  1706                           ; 1 bytes @ 0x86
  1707   0000E6                     	ds	1
  1708                           
  1709                           	psect	cstackCOMRAM
  1710   000001                     __pcstackCOMRAM:
  1711                           	callstack 0
  1712   000001                     ??_ISR_HANDLER:
  1713                           
  1714                           ; 1 bytes @ 0x0
  1715   000001                     	ds	1
  1716   000002                     ?___fpclassifyf:
  1717                           	callstack 0
  1718   000002                     ?___wmul:
  1719                           	callstack 0
  1720   000002                     ?___awdiv:
  1721                           	callstack 0
  1722   000002                     ?___awmod:
  1723                           	callstack 0
  1724   000002                     ?_labs:
  1725                           	callstack 0
  1726   000002                     ?___lmul:
  1727                           	callstack 0
  1728   000002                     ?___aldiv:
  1729                           	callstack 0
  1730   000002                     ?___flneg:
  1731                           	callstack 0
  1732   000002                     ?___xxtofl:
  1733                           	callstack 0
  1734   000002                     DAC_Write@msb:
  1735                           	callstack 0
  1736   000002                     driveLED@in:
  1737                           	callstack 0
  1738   000002                     LCD_Send@data:
  1739                           	callstack 0
  1740   000002                     putch@data:
  1741                           	callstack 0
  1742   000002                     ___wmul@multiplier:
  1743                           	callstack 0
  1744   000002                     ___awdiv@dividend:
  1745                           	callstack 0
  1746   000002                     ___awmod@dividend:
  1747                           	callstack 0
  1748   000002                     memset@dest:
  1749                           	callstack 0
  1750   000002                     memcpy@d1:
  1751                           	callstack 0
  1752   000002                     strcpy@dest:
  1753                           	callstack 0
  1754   000002                     ___lmul@multiplier:
  1755                           	callstack 0
  1756   000002                     ___aldiv@dividend:
  1757                           	callstack 0
  1758   000002                     ___fleq@ff1:
  1759                           	callstack 0
  1760   000002                     ___flneg@f1:
  1761                           	callstack 0
  1762   000002                     ___xxtofl@val:
  1763                           	callstack 0
  1764   000002                     ___fpclassifyf@x:
  1765                           	callstack 0
  1766   000002                     labs@a:
  1767                           	callstack 0
  1768                           
  1769                           ; 4 bytes @ 0x1
  1770   000002                     	ds	1
  1771   000003                     ??_LCD_Init:
  1772   000003                     DAC_Write@lsb:
  1773                           	callstack 0
  1774   000003                     LCD_ShowString@textData:
  1775                           	callstack 0
  1776   000003                     uart_write_norm@text:
  1777                           	callstack 0
  1778   000003                     uart_write@text:
  1779                           	callstack 0
  1780   000003                     fputc@c:
  1781                           	callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x2
  1784   000003                     	ds	1
  1785   000004                     DAC_Write@data:
  1786                           	callstack 0
  1787   000004                     ___wmul@multiplicand:
  1788                           	callstack 0
  1789   000004                     ___awdiv@divisor:
  1790                           	callstack 0
  1791   000004                     ___awmod@divisor:
  1792                           	callstack 0
  1793   000004                     memset@c:
  1794                           	callstack 0
  1795   000004                     memcpy@s1:
  1796                           	callstack 0
  1797   000004                     strcpy@src:
  1798                           	callstack 0
  1799                           
  1800                           ; 2 bytes @ 0x3
  1801   000004                     	ds	1
  1802   000005                     ??_LCD_ShowString:
  1803   000005                     uart_write_norm@len:
  1804                           	callstack 0
  1805   000005                     uart_write@len:
  1806                           	callstack 0
  1807   000005                     fputc@fp:
  1808                           	callstack 0
  1809                           
  1810                           ; 2 bytes @ 0x4
  1811   000005                     	ds	1
  1812   000006                     ??___fpclassifyf:
  1813   000006                     ??_labs:
  1814   000006                     ??___xxtofl:
  1815   000006                     ___awdiv@counter:
  1816                           	callstack 0
  1817   000006                     ___awmod@counter:
  1818                           	callstack 0
  1819   000006                     ___wmul@product:
  1820                           	callstack 0
  1821   000006                     memset@n:
  1822                           	callstack 0
  1823   000006                     memcpy@n:
  1824                           	callstack 0
  1825   000006                     strcpy@s:
  1826                           	callstack 0
  1827   000006                     ___lmul@multiplicand:
  1828                           	callstack 0
  1829   000006                     ___aldiv@divisor:
  1830                           	callstack 0
  1831   000006                     ___fleq@ff2:
  1832                           	callstack 0
  1833                           
  1834                           ; 4 bytes @ 0x5
  1835   000006                     	ds	1
  1836   000007                     ??_uart_write_norm:
  1837   000007                     ??_fputc:
  1838   000007                     LCD_ShowString@lineNum:
  1839                           	callstack 0
  1840   000007                     ___awdiv@sign:
  1841                           	callstack 0
  1842   000007                     ___awmod@sign:
  1843                           	callstack 0
  1844                           
  1845                           ; 1 bytes @ 0x6
  1846   000007                     	ds	1
  1847   000008                     ??_memset:
  1848   000008                     ?_abs:
  1849                           	callstack 0
  1850   000008                     ?_read_prec_or_width:
  1851                           	callstack 0
  1852   000008                     LCD_ShowString@i:
  1853                           	callstack 0
  1854   000008                     uart_write@flag:
  1855                           	callstack 0
  1856   000008                     uart_write_norm@i:
  1857                           	callstack 0
  1858   000008                     ___awdiv@quotient:
  1859                           	callstack 0
  1860   000008                     read_prec_or_width@fmt:
  1861                           	callstack 0
  1862   000008                     abs@a:
  1863                           	callstack 0
  1864   000008                     memcpy@d:
  1865                           	callstack 0
  1866   000008                     strcpy@d:
  1867                           	callstack 0
  1868                           
  1869                           ; 2 bytes @ 0x7
  1870   000008                     	ds	1
  1871   000009                     ??_GPIO_main:
  1872   000009                     uart_write@i:
  1873                           	callstack 0
  1874                           
  1875                           ; 2 bytes @ 0x8
  1876   000009                     	ds	1
  1877   00000A                     ??_abs:
  1878   00000A                     ??___fleq:
  1879   00000A                     ___aldiv@counter:
  1880                           	callstack 0
  1881   00000A                     ___xxtofl@sign:
  1882                           	callstack 0
  1883   00000A                     memset@k:
  1884                           	callstack 0
  1885   00000A                     read_prec_or_width@ap:
  1886                           	callstack 0
  1887   00000A                     ___fpclassifyf@e:
  1888                           	callstack 0
  1889   00000A                     memcpy@s:
  1890                           	callstack 0
  1891   00000A                     ___lmul@product:
  1892                           	callstack 0
  1893                           
  1894                           ; 4 bytes @ 0x9
  1895   00000A                     	ds	1
  1896   00000B                     ___aldiv@sign:
  1897                           	callstack 0
  1898   00000B                     ___xxtofl@exp:
  1899                           	callstack 0
  1900   00000B                     GPIO_main@i:
  1901                           	callstack 0
  1902                           
  1903                           ; 2 bytes @ 0xA
  1904   00000B                     	ds	1
  1905   00000C                     ??_read_prec_or_width:
  1906   00000C                     memcpy@tmp:
  1907                           	callstack 0
  1908   00000C                     memset@s:
  1909                           	callstack 0
  1910   00000C                     fputs@s:
  1911                           	callstack 0
  1912   00000C                     ___aldiv@quotient:
  1913                           	callstack 0
  1914   00000C                     ___xxtofl@arg:
  1915                           	callstack 0
  1916   00000C                     ___fpclassifyf@u:
  1917                           	callstack 0
  1918                           
  1919                           ; 4 bytes @ 0xB
  1920   00000C                     	ds	1
  1921   00000D                     GPIO_main@ledky:
  1922                           	callstack 0
  1923                           
  1924                           ; 1 bytes @ 0xC
  1925   00000D                     	ds	1
  1926   00000E                     ?_rand:
  1927                           	callstack 0
  1928   00000E                     read_prec_or_width@c:
  1929                           	callstack 0
  1930   00000E                     fputs@fp:
  1931                           	callstack 0
  1932                           
  1933                           ; 2 bytes @ 0xD
  1934   00000E                     	ds	1
  1935   00000F                     read_prec_or_width@n:
  1936                           	callstack 0
  1937                           
  1938                           ; 2 bytes @ 0xE
  1939   00000F                     	ds	1
  1940   000010                     ??_rand:
  1941   000010                     ?___fldiv:
  1942                           	callstack 0
  1943   000010                     fputs@c:
  1944                           	callstack 0
  1945   000010                     ___fldiv@b:
  1946                           	callstack 0
  1947                           
  1948                           ; 4 bytes @ 0xF
  1949   000010                     	ds	1
  1950   000011                     fputs@i:
  1951                           	callstack 0
  1952                           
  1953                           ; 2 bytes @ 0x10
  1954   000011                     	ds	2
  1955   000013                     pad@fp:
  1956                           	callstack 0
  1957                           
  1958                           ; 2 bytes @ 0x12
  1959   000013                     	ds	1
  1960   000014                     ___fldiv@a:
  1961                           	callstack 0
  1962                           
  1963                           ; 4 bytes @ 0x13
  1964   000014                     	ds	1
  1965   000015                     pad@buf:
  1966                           	callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x14
  1969   000015                     	ds	2
  1970   000017                     pad@p:
  1971                           	callstack 0
  1972                           
  1973                           ; 2 bytes @ 0x16
  1974   000017                     	ds	1
  1975   000018                     ??___fldiv:
  1976                           
  1977                           ; 1 bytes @ 0x17
  1978   000018                     	ds	1
  1979   000019                     ??_pad:
  1980                           
  1981                           ; 1 bytes @ 0x18
  1982   000019                     	ds	1
  1983   00001A                     pad@i:
  1984                           	callstack 0
  1985                           
  1986                           ; 2 bytes @ 0x19
  1987   00001A                     	ds	2
  1988   00001C                     pad@w:
  1989                           	callstack 0
  1990   00001C                     ___fldiv@rem:
  1991                           	callstack 0
  1992                           
  1993                           ; 4 bytes @ 0x1B
  1994   00001C                     	ds	2
  1995   00001E                     dtoa@fp:
  1996                           	callstack 0
  1997                           
  1998                           ; 2 bytes @ 0x1D
  1999   00001E                     	ds	2
  2000   000020                     ___fldiv@sign:
  2001                           	callstack 0
  2002   000020                     dtoa@d:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x1F
  2006   000020                     	ds	1
  2007   000021                     ___fldiv@new_exp:
  2008                           	callstack 0
  2009                           
  2010                           ; 2 bytes @ 0x20
  2011   000021                     	ds	1
  2012   000022                     _dtoa$3259:
  2013                           	callstack 0
  2014                           
  2015                           ; 2 bytes @ 0x21
  2016   000022                     	ds	1
  2017   000023                     ___fldiv@grs:
  2018                           	callstack 0
  2019                           
  2020                           ; 4 bytes @ 0x22
  2021   000023                     	ds	1
  2022   000024                     dtoa@p:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x23
  2026   000024                     	ds	2
  2027   000026                     dtoa@w:
  2028                           	callstack 0
  2029                           
  2030                           ; 2 bytes @ 0x25
  2031   000026                     	ds	1
  2032   000027                     ___fldiv@bexp:
  2033                           	callstack 0
  2034                           
  2035                           ; 1 bytes @ 0x26
  2036   000027                     	ds	1
  2037   000028                     ___fldiv@aexp:
  2038                           	callstack 0
  2039   000028                     dtoa@i:
  2040                           	callstack 0
  2041                           
  2042                           ; 2 bytes @ 0x27
  2043   000028                     	ds	1
  2044   000029                     ?___flmul:
  2045                           	callstack 0
  2046   000029                     ?_floorf:
  2047                           	callstack 0
  2048   000029                     ___flmul@b:
  2049                           	callstack 0
  2050   000029                     floorf@x:
  2051                           	callstack 0
  2052                           
  2053                           ; 4 bytes @ 0x28
  2054   000029                     	ds	1
  2055   00002A                     dtoa@s:
  2056                           	callstack 0
  2057                           
  2058                           ; 1 bytes @ 0x29
  2059   00002A                     	ds	3
  2060   00002D                     ??_floorf:
  2061   00002D                     ___flmul@a:
  2062                           	callstack 0
  2063                           
  2064                           ; 4 bytes @ 0x2C
  2065   00002D                     	ds	4
  2066   000031                     ??___flmul:
  2067                           
  2068                           ; 1 bytes @ 0x30
  2069   000031                     	ds	2
  2070   000033                     floorf@m:
  2071                           	callstack 0
  2072                           
  2073                           ; 4 bytes @ 0x32
  2074   000033                     	ds	2
  2075   000035                     ___flmul@sign:
  2076                           	callstack 0
  2077                           
  2078                           ; 1 bytes @ 0x34
  2079   000035                     	ds	1
  2080   000036                     ___flmul@grs:
  2081                           	callstack 0
  2082                           
  2083                           ; 4 bytes @ 0x35
  2084   000036                     	ds	1
  2085   000037                     floorf@e:
  2086                           	callstack 0
  2087                           
  2088                           ; 2 bytes @ 0x36
  2089   000037                     	ds	2
  2090   000039                     floorf@u:
  2091                           	callstack 0
  2092                           
  2093                           ; 4 bytes @ 0x38
  2094   000039                     	ds	1
  2095   00003A                     ___flmul@aexp:
  2096                           	callstack 0
  2097                           
  2098                           ; 1 bytes @ 0x39
  2099   00003A                     	ds	1
  2100   00003B                     ___flmul@bexp:
  2101                           	callstack 0
  2102                           
  2103                           ; 1 bytes @ 0x3A
  2104   00003B                     	ds	1
  2105   00003C                     ___flmul@prod:
  2106                           	callstack 0
  2107                           
  2108                           ; 4 bytes @ 0x3B
  2109   00003C                     	ds	4
  2110   000040                     ___flmul@temp:
  2111                           	callstack 0
  2112                           
  2113                           ; 2 bytes @ 0x3F
  2114   000040                     	ds	2
  2115   000042                     ?___fladd:
  2116                           	callstack 0
  2117   000042                     ___flge@ff1:
  2118                           	callstack 0
  2119   000042                     ___fladd@b:
  2120                           	callstack 0
  2121                           
  2122                           ; 4 bytes @ 0x41
  2123   000042                     	ds	4
  2124   000046                     ___flge@ff2:
  2125                           	callstack 0
  2126   000046                     ___fladd@a:
  2127                           	callstack 0
  2128                           
  2129                           ; 4 bytes @ 0x45
  2130   000046                     	ds	4
  2131   00004A                     ??___fladd:
  2132   00004A                     ??___flge:
  2133                           
  2134                           ; 1 bytes @ 0x49
  2135   00004A                     	ds	4
  2136   00004E                     ___fladd@signs:
  2137                           	callstack 0
  2138                           
  2139                           ; 1 bytes @ 0x4D
  2140   00004E                     	ds	1
  2141   00004F                     ___fladd@aexp:
  2142                           	callstack 0
  2143                           
  2144                           ; 1 bytes @ 0x4E
  2145   00004F                     	ds	1
  2146   000050                     ___fladd@bexp:
  2147                           	callstack 0
  2148                           
  2149                           ; 1 bytes @ 0x4F
  2150   000050                     	ds	1
  2151   000051                     ___fladd@grs:
  2152                           	callstack 0
  2153                           
  2154                           ; 1 bytes @ 0x50
  2155   000051                     	ds	1
  2156   000052                     ??___fltol:
  2157                           
  2158                           ; 1 bytes @ 0x51
  2159   000052                     	ds	4
  2160   000056                     ___fltol@sign1:
  2161                           	callstack 0
  2162                           
  2163                           ; 1 bytes @ 0x55
  2164   000056                     	ds	1
  2165   000057                     ___fltol@exp1:
  2166                           	callstack 0
  2167                           
  2168                           ; 1 bytes @ 0x56
  2169   000057                     	ds	1
  2170   000058                     
  2171                           ; 1 bytes @ 0x57
  2172 ;;
  2173 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2174 ;;
  2175 ;; *************** function _main *****************
  2176 ;; Defined at:
  2177 ;;		line 37 in file "main.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  menu_kurz       2  132[BANK0 ] int 
  2182 ;;  flag            1  134[BANK0 ] unsigned char 
  2183 ;;  in              1    0        unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        5 bytes
  2198 ;; Hardware stack levels required when called: 10
  2199 ;; This function calls:
  2200 ;;		_ADC_main
  2201 ;;		_DAC_main
  2202 ;;		_GAME_main
  2203 ;;		_GPIO_main
  2204 ;;		_Init
  2205 ;;		_LCD_Init
  2206 ;;		_LCD_ShowString
  2207 ;;		_PWM_main
  2208 ;;		_UART_main
  2209 ;;		_driveLED
  2210 ;;		_reprak_main
  2211 ;; This function is called by:
  2212 ;;		Startup code after reset
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text0
  2217   00212A                     __ptext0:
  2218                           	callstack 0
  2219   00212A                     _main:
  2220                           	callstack 21
  2221   00212A                     
  2222                           ;main.c: 39:     char flag = 1;
  2223   00212A  0E01               	movlw	1
  2224   00212C  0100               	movlb	0	; () banked
  2225   00212E  6FE6               	movwf	main@flag& (0+255),b
  2226   002130                     
  2227                           ; BSR set to: 0
  2228                           ;main.c: 40:     Init();
  2229   002130  ECC2  F021         	call	_Init	;wreg free
  2230   002134                     
  2231                           ;main.c: 41:     int menu_kurz = 0;
  2232   002134  0E00               	movlw	0
  2233   002136  0100               	movlb	0	; () banked
  2234   002138  6FE5               	movwf	(main@menu_kurz+1)& (0+255),b
  2235   00213A  0E00               	movlw	0
  2236   00213C  6FE4               	movwf	main@menu_kurz& (0+255),b
  2237   00213E                     
  2238                           ; BSR set to: 0
  2239                           ;main.c: 43:     driveLED(in);
  2240   00213E  0E3F               	movlw	63
  2241   002140  ECEA  F01E         	call	_driveLED
  2242   002144                     
  2243                           ;main.c: 44:     LCD_Init();
  2244   002144  ECFE  F01A         	call	_LCD_Init	;wreg free
  2245   002148                     l6709:
  2246                           
  2247                           ;main.c: 48:         if(buttons.btn2_state){
  2248   002148  0100               	movlb	0	; () banked
  2249   00214A  51F5               	movf	(_buttons+5)& (0+255),w,b	;volatile
  2250   00214C  B4D8               	btfsc	status,2,c
  2251   00214E  EFAB  F010         	goto	u7501
  2252   002152  EFAD  F010         	goto	u7500
  2253   002156                     u7501:
  2254   002156  EFC5  F010         	goto	l52
  2255   00215A                     u7500:
  2256   00215A                     
  2257                           ; BSR set to: 0
  2258                           ;main.c: 49:             flag = 1;
  2259   00215A  0E01               	movlw	1
  2260   00215C  6FE6               	movwf	main@flag& (0+255),b
  2261   00215E                     
  2262                           ; BSR set to: 0
  2263                           ;main.c: 50:             menu_kurz++;
  2264   00215E  4BE4               	infsnz	main@menu_kurz& (0+255),f,b
  2265   002160  2BE5               	incf	(main@menu_kurz+1)& (0+255),f,b
  2266   002162                     
  2267                           ; BSR set to: 0
  2268                           ;main.c: 51:             if(menu_kurz > 6){
  2269   002162  BFE5               	btfsc	(main@menu_kurz+1)& (0+255),7,b
  2270   002164  EFBD  F010         	goto	u7511
  2271   002168  51E5               	movf	(main@menu_kurz+1)& (0+255),w,b
  2272   00216A  E109               	bnz	u7510
  2273   00216C  0E07               	movlw	7
  2274   00216E  5DE4               	subwf	main@menu_kurz& (0+255),w,b
  2275   002170  A0D8               	btfss	status,0,c
  2276   002172  EFBD  F010         	goto	u7511
  2277   002176  EFBF  F010         	goto	u7510
  2278   00217A                     u7511:
  2279   00217A  EFC3  F010         	goto	l53
  2280   00217E                     u7510:
  2281   00217E                     
  2282                           ; BSR set to: 0
  2283                           ;main.c: 52:                 menu_kurz = 6;
  2284   00217E  0E00               	movlw	0
  2285   002180  6FE5               	movwf	(main@menu_kurz+1)& (0+255),b
  2286   002182  0E06               	movlw	6
  2287   002184  6FE4               	movwf	main@menu_kurz& (0+255),b
  2288   002186                     l53:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;main.c: 54:             buttons.btn2_state = 0;
  2292   002186  0E00               	movlw	0
  2293   002188  6FF5               	movwf	(_buttons+5)& (0+255),b	;volatile
  2294   00218A                     l52:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 56:         if(buttons.btn1_state){
  2298   00218A  51F4               	movf	(_buttons+4)& (0+255),w,b	;volatile
  2299   00218C  B4D8               	btfsc	status,2,c
  2300   00218E  EFCB  F010         	goto	u7521
  2301   002192  EFCD  F010         	goto	u7520
  2302   002196                     u7521:
  2303   002196  EFDF  F010         	goto	l54
  2304   00219A                     u7520:
  2305   00219A                     
  2306                           ; BSR set to: 0
  2307                           ;main.c: 57:             flag = 1;
  2308   00219A  0E01               	movlw	1
  2309   00219C  6FE6               	movwf	main@flag& (0+255),b
  2310   00219E                     
  2311                           ; BSR set to: 0
  2312                           ;main.c: 58:             menu_kurz--;
  2313   00219E  07E4               	decf	main@menu_kurz& (0+255),f,b
  2314   0021A0  A0D8               	btfss	status,0,c
  2315   0021A2  07E5               	decf	(main@menu_kurz+1)& (0+255),f,b
  2316   0021A4                     
  2317                           ; BSR set to: 0
  2318                           ;main.c: 59:             if(menu_kurz < 0){
  2319   0021A4  BFE5               	btfsc	(main@menu_kurz+1)& (0+255),7,b
  2320   0021A6  EFD9  F010         	goto	u7530
  2321   0021AA  EFD7  F010         	goto	u7531
  2322   0021AE                     u7531:
  2323   0021AE  EFDD  F010         	goto	l55
  2324   0021B2                     u7530:
  2325   0021B2                     
  2326                           ; BSR set to: 0
  2327                           ;main.c: 60:                 menu_kurz = 0;
  2328   0021B2  0E00               	movlw	0
  2329   0021B4  6FE5               	movwf	(main@menu_kurz+1)& (0+255),b
  2330   0021B6  0E00               	movlw	0
  2331   0021B8  6FE4               	movwf	main@menu_kurz& (0+255),b
  2332   0021BA                     l55:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;main.c: 62:             buttons.btn1_state = 0;
  2336   0021BA  0E00               	movlw	0
  2337   0021BC  6FF4               	movwf	(_buttons+4)& (0+255),b	;volatile
  2338   0021BE                     l54:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;main.c: 64:         if(buttons.btn3_state){
  2342   0021BE  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2343   0021C0  B4D8               	btfsc	status,2,c
  2344   0021C2  EFE5  F010         	goto	u7541
  2345   0021C6  EFE7  F010         	goto	u7540
  2346   0021CA                     u7541:
  2347   0021CA  EFE9  F010         	goto	l56
  2348   0021CE                     u7540:
  2349   0021CE                     
  2350                           ; BSR set to: 0
  2351                           ;main.c: 65:             flag = 1;
  2352   0021CE  0E01               	movlw	1
  2353   0021D0  6FE6               	movwf	main@flag& (0+255),b
  2354   0021D2                     l56:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;main.c: 69:         if(flag){
  2358   0021D2  51E6               	movf	main@flag& (0+255),w,b
  2359   0021D4  B4D8               	btfsc	status,2,c
  2360   0021D6  EFEF  F010         	goto	u7551
  2361   0021DA  EFF1  F010         	goto	u7550
  2362   0021DE                     u7551:
  2363   0021DE  EFA4  F010         	goto	l6709
  2364   0021E2                     u7550:
  2365   0021E2  EFBA  F011         	goto	l6817
  2366   0021E6                     l6731:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 72:                 if(buttons.btn3_state){
  2370   0021E6  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2371   0021E8  B4D8               	btfsc	status,2,c
  2372   0021EA  EFF9  F010         	goto	u7561
  2373   0021EE  EFFB  F010         	goto	u7560
  2374   0021F2                     u7561:
  2375   0021F2  EFFF  F010         	goto	l6737
  2376   0021F6                     u7560:
  2377   0021F6                     
  2378                           ; BSR set to: 0
  2379                           ;main.c: 73:                     buttons.btn3_state = 0;
  2380   0021F6  0E00               	movlw	0
  2381   0021F8  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
  2382   0021FA                     
  2383                           ; BSR set to: 0
  2384                           ;main.c: 74:                     GPIO_main();
  2385   0021FA  EC95  F01C         	call	_GPIO_main	;wreg free
  2386   0021FE                     l6737:
  2387                           
  2388                           ;main.c: 76:                 LCD_ShowString(1,"> 1 - GPIO        ");
  2389   0021FE  0EE8               	movlw	low STR_1
  2390   002200  6E03               	movwf	LCD_ShowString@textData^0,c
  2391   002202  0EFE               	movlw	high STR_1
  2392   002204  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2393   002206  0E01               	movlw	1
  2394   002208  ECF2  F01C         	call	_LCD_ShowString
  2395   00220C                     
  2396                           ;main.c: 77:                 LCD_ShowString(2,"  2 - UART        ");
  2397   00220C  0EFB               	movlw	low STR_2
  2398   00220E  6E03               	movwf	LCD_ShowString@textData^0,c
  2399   002210  0EFE               	movlw	high STR_2
  2400   002212  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2401   002214  0E02               	movlw	2
  2402   002216  ECF2  F01C         	call	_LCD_ShowString
  2403   00221A                     l6741:
  2404                           
  2405                           ;main.c: 78:                 flag = 0;
  2406   00221A  0E00               	movlw	0
  2407   00221C  0100               	movlb	0	; () banked
  2408   00221E  6FE6               	movwf	main@flag& (0+255),b
  2409                           
  2410                           ;main.c: 79:                 break;
  2411   002220  EFA4  F010         	goto	l6709
  2412   002224                     l6743:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;main.c: 81:                 if(buttons.btn3_state){
  2416   002224  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2417   002226  B4D8               	btfsc	status,2,c
  2418   002228  EF18  F011         	goto	u7571
  2419   00222C  EF1A  F011         	goto	u7570
  2420   002230                     u7571:
  2421   002230  EF1E  F011         	goto	l6749
  2422   002234                     u7570:
  2423   002234                     
  2424                           ; BSR set to: 0
  2425                           ;main.c: 82:                     buttons.btn3_state = 0;
  2426   002234  0E00               	movlw	0
  2427   002236  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
  2428   002238                     
  2429                           ; BSR set to: 0
  2430                           ;main.c: 83:                     UART_main();
  2431   002238  ECFF  F019         	call	_UART_main	;wreg free
  2432   00223C                     l6749:
  2433                           
  2434                           ;main.c: 85:                 LCD_ShowString(1,"  1 - GPIO         ");
  2435   00223C  0E28               	movlw	low STR_3
  2436   00223E  6E03               	movwf	LCD_ShowString@textData^0,c
  2437   002240  0EFE               	movlw	high STR_3
  2438   002242  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2439   002244  0E01               	movlw	1
  2440   002246  ECF2  F01C         	call	_LCD_ShowString
  2441   00224A                     
  2442                           ;main.c: 86:                 LCD_ShowString(2,"> 2 - UART         ");
  2443   00224A  0E3C               	movlw	low STR_4
  2444   00224C  6E03               	movwf	LCD_ShowString@textData^0,c
  2445   00224E  0EFE               	movlw	high STR_4
  2446   002250  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2447   002252  0E02               	movlw	2
  2448   002254  ECF2  F01C         	call	_LCD_ShowString
  2449   002258  EF0D  F011         	goto	l6741
  2450   00225C                     l6755:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 90:                 if(buttons.btn3_state){
  2454   00225C  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2455   00225E  B4D8               	btfsc	status,2,c
  2456   002260  EF34  F011         	goto	u7581
  2457   002264  EF36  F011         	goto	u7580
  2458   002268                     u7581:
  2459   002268  EF3A  F011         	goto	l6761
  2460   00226C                     u7580:
  2461   00226C                     
  2462                           ; BSR set to: 0
  2463                           ;main.c: 91:                     buttons.btn3_state = 0;
  2464   00226C  0E00               	movlw	0
  2465   00226E  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
  2466   002270                     
  2467                           ; BSR set to: 0
  2468                           ;main.c: 92:                     PWM_main();
  2469   002270  ECEC  F017         	call	_PWM_main	;wreg free
  2470   002274                     l6761:
  2471                           
  2472                           ;main.c: 94:                 LCD_ShowString(1,"> 3 - PMW         ");
  2473   002274  0ED5               	movlw	low STR_5
  2474   002276  6E03               	movwf	LCD_ShowString@textData^0,c
  2475   002278  0EFE               	movlw	high STR_5
  2476   00227A  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2477   00227C  0E01               	movlw	1
  2478   00227E  ECF2  F01C         	call	_LCD_ShowString
  2479   002282                     
  2480                           ;main.c: 95:                 LCD_ShowString(2,"  4 - ADC         ");
  2481   002282  0E9C               	movlw	low STR_6
  2482   002284  6E03               	movwf	LCD_ShowString@textData^0,c
  2483   002286  0EFE               	movlw	high STR_6
  2484   002288  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2485   00228A  0E02               	movlw	2
  2486   00228C  ECF2  F01C         	call	_LCD_ShowString
  2487   002290  EF0D  F011         	goto	l6741
  2488   002294                     l6767:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;main.c: 99:                 if(buttons.btn3_state){
  2492   002294  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2493   002296  B4D8               	btfsc	status,2,c
  2494   002298  EF50  F011         	goto	u7591
  2495   00229C  EF52  F011         	goto	u7590
  2496   0022A0                     u7591:
  2497   0022A0  EF56  F011         	goto	l6773
  2498   0022A4                     u7590:
  2499   0022A4                     
  2500                           ; BSR set to: 0
  2501                           ;main.c: 100:                     buttons.btn3_state = 0;
  2502   0022A4  0E00               	movlw	0
  2503   0022A6  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
  2504   0022A8                     
  2505                           ; BSR set to: 0
  2506                           ;main.c: 101:                     ADC_main();
  2507   0022A8  ECF3  F013         	call	_ADC_main	;wreg free
  2508   0022AC                     l6773:
  2509                           
  2510                           ;main.c: 103:                 LCD_ShowString(1,"  3 - PMW         ");
  2511   0022AC  0EC2               	movlw	low STR_7
  2512   0022AE  6E03               	movwf	LCD_ShowString@textData^0,c
  2513   0022B0  0EFE               	movlw	high STR_7
  2514   0022B2  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2515   0022B4  0E01               	movlw	1
  2516   0022B6  ECF2  F01C         	call	_LCD_ShowString
  2517   0022BA                     
  2518                           ;main.c: 104:                 LCD_ShowString(2,"> 4 - ADC         ");
  2519   0022BA  0EAF               	movlw	low STR_8
  2520   0022BC  6E03               	movwf	LCD_ShowString@textData^0,c
  2521   0022BE  0EFE               	movlw	high STR_8
  2522   0022C0  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2523   0022C2  0E02               	movlw	2
  2524   0022C4  ECF2  F01C         	call	_LCD_ShowString
  2525   0022C8  EF0D  F011         	goto	l6741
  2526   0022CC                     l6779:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;main.c: 108:                 if(buttons.btn3_state){
  2530   0022CC  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2531   0022CE  B4D8               	btfsc	status,2,c
  2532   0022D0  EF6C  F011         	goto	u7601
  2533   0022D4  EF6E  F011         	goto	u7600
  2534   0022D8                     u7601:
  2535   0022D8  EF72  F011         	goto	l6785
  2536   0022DC                     u7600:
  2537   0022DC                     
  2538                           ; BSR set to: 0
  2539                           ;main.c: 109:                     buttons.btn3_state = 0;
  2540   0022DC  0E00               	movlw	0
  2541   0022DE  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
  2542   0022E0                     
  2543                           ; BSR set to: 0
  2544                           ;main.c: 110:                     DAC_main();
  2545   0022E0  EC43  F00F         	call	_DAC_main	;wreg free
  2546   0022E4                     l6785:
  2547                           
  2548                           ;main.c: 112:                 LCD_ShowString(1,"> 5 - DAC         ");
  2549   0022E4  0E89               	movlw	low STR_9
  2550   0022E6  6E03               	movwf	LCD_ShowString@textData^0,c
  2551   0022E8  0EFE               	movlw	high STR_9
  2552   0022EA  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2553   0022EC  0E01               	movlw	1
  2554   0022EE  ECF2  F01C         	call	_LCD_ShowString
  2555   0022F2                     
  2556                           ;main.c: 113:                 LCD_ShowString(2,"  6 - GAME         ");
  2557   0022F2  0E00               	movlw	low STR_10
  2558   0022F4  6E03               	movwf	LCD_ShowString@textData^0,c
  2559   0022F6  0EFE               	movlw	high STR_10
  2560   0022F8  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2561   0022FA  0E02               	movlw	2
  2562   0022FC  ECF2  F01C         	call	_LCD_ShowString
  2563   002300  EF0D  F011         	goto	l6741
  2564   002304                     l6791:
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;main.c: 117:                 if(buttons.btn3_state){
  2568   002304  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2569   002306  B4D8               	btfsc	status,2,c
  2570   002308  EF88  F011         	goto	u7611
  2571   00230C  EF8A  F011         	goto	u7610
  2572   002310                     u7611:
  2573   002310  EF8E  F011         	goto	l6797
  2574   002314                     u7610:
  2575   002314                     
  2576                           ; BSR set to: 0
  2577                           ;main.c: 118:                     buttons.btn3_state = 0;
  2578   002314  0E00               	movlw	0
  2579   002316  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
  2580   002318                     
  2581                           ; BSR set to: 0
  2582                           ;main.c: 119:                     GAME_main();
  2583   002318  EC75  F016         	call	_GAME_main	;wreg free
  2584   00231C                     l6797:
  2585                           
  2586                           ;main.c: 121:                 LCD_ShowString(1,"  5 - DAC         ");
  2587   00231C  0E76               	movlw	low STR_11
  2588   00231E  6E03               	movwf	LCD_ShowString@textData^0,c
  2589   002320  0EFE               	movlw	high STR_11
  2590   002322  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2591   002324  0E01               	movlw	1
  2592   002326  ECF2  F01C         	call	_LCD_ShowString
  2593   00232A                     
  2594                           ;main.c: 122:                 LCD_ShowString(2,"> 6 - GAME         ");
  2595   00232A  0E14               	movlw	low STR_12
  2596   00232C  6E03               	movwf	LCD_ShowString@textData^0,c
  2597   00232E  0EFE               	movlw	high STR_12
  2598   002330  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2599   002332  0E02               	movlw	2
  2600   002334  ECF2  F01C         	call	_LCD_ShowString
  2601   002338  EF0D  F011         	goto	l6741
  2602   00233C                     l6803:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;main.c: 126:                 if(buttons.btn3_state){
  2606   00233C  51F6               	movf	(_buttons+6)& (0+255),w,b	;volatile
  2607   00233E  B4D8               	btfsc	status,2,c
  2608   002340  EFA4  F011         	goto	u7621
  2609   002344  EFA6  F011         	goto	u7620
  2610   002348                     u7621:
  2611   002348  EFAA  F011         	goto	l6809
  2612   00234C                     u7620:
  2613   00234C                     
  2614                           ; BSR set to: 0
  2615                           ;main.c: 127:                     buttons.btn3_state = 0;
  2616   00234C  0E00               	movlw	0
  2617   00234E  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
  2618   002350                     
  2619                           ; BSR set to: 0
  2620                           ;main.c: 128:                     reprak_main();
  2621   002350  ECC2  F00D         	call	_reprak_main	;wreg free
  2622   002354                     l6809:
  2623                           
  2624                           ;main.c: 130:                 LCD_ShowString(1,"> 7 - PREHRAVAC         ");
  2625   002354  0EA9               	movlw	low STR_13
  2626   002356  6E03               	movwf	LCD_ShowString@textData^0,c
  2627   002358  0EFD               	movlw	high STR_13
  2628   00235A  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2629   00235C  0E01               	movlw	1
  2630   00235E  ECF2  F01C         	call	_LCD_ShowString
  2631   002362                     
  2632                           ;main.c: 131:                 LCD_ShowString(2,"                    ");
  2633   002362  0ED7               	movlw	low STR_14
  2634   002364  6E03               	movwf	LCD_ShowString@textData^0,c
  2635   002366  0EFD               	movlw	high STR_14
  2636   002368  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2637   00236A  0E02               	movlw	2
  2638   00236C  ECF2  F01C         	call	_LCD_ShowString
  2639   002370  EF0D  F011         	goto	l6741
  2640   002374                     l6817:
  2641                           
  2642                           ; BSR set to: 0
  2643   002374  C0E4  F0E2         	movff	main@menu_kurz,??_main
  2644   002378  C0E5  F0E3         	movff	main@menu_kurz+1,??_main+1
  2645                           
  2646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2647                           ; Switch size 1, requested type "simple"
  2648                           ; Number of cases is 1, Range of values is 0 to 0
  2649                           ; switch strategies available:
  2650                           ; Name         Instructions Cycles
  2651                           ; simple_byte            4     3 (average)
  2652                           ;	Chosen strategy is simple_byte
  2653   00237C  51E3               	movf	(??_main+1)& (0+255),w,b
  2654   00237E  0A00               	xorlw	0	; case 0
  2655   002380  B4D8               	btfsc	status,2,c
  2656   002382  EFC5  F011         	goto	l6933
  2657   002386  EFA4  F010         	goto	l6709
  2658   00238A                     l6933:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ; Switch size 1, requested type "simple"
  2662                           ; Number of cases is 7, Range of values is 0 to 6
  2663                           ; switch strategies available:
  2664                           ; Name         Instructions Cycles
  2665                           ; simple_byte           22    12 (average)
  2666                           ;	Chosen strategy is simple_byte
  2667   00238A  51E2               	movf	??_main& (0+255),w,b
  2668   00238C  0A00               	xorlw	0	; case 0
  2669   00238E  B4D8               	btfsc	status,2,c
  2670   002390  EFF3  F010         	goto	l6731
  2671   002394  0A01               	xorlw	1	; case 1
  2672   002396  B4D8               	btfsc	status,2,c
  2673   002398  EF12  F011         	goto	l6743
  2674   00239C  0A03               	xorlw	3	; case 2
  2675   00239E  B4D8               	btfsc	status,2,c
  2676   0023A0  EF2E  F011         	goto	l6755
  2677   0023A4  0A01               	xorlw	1	; case 3
  2678   0023A6  B4D8               	btfsc	status,2,c
  2679   0023A8  EF4A  F011         	goto	l6767
  2680   0023AC  0A07               	xorlw	7	; case 4
  2681   0023AE  B4D8               	btfsc	status,2,c
  2682   0023B0  EF66  F011         	goto	l6779
  2683   0023B4  0A01               	xorlw	1	; case 5
  2684   0023B6  B4D8               	btfsc	status,2,c
  2685   0023B8  EF82  F011         	goto	l6791
  2686   0023BC  0A03               	xorlw	3	; case 6
  2687   0023BE  B4D8               	btfsc	status,2,c
  2688   0023C0  EF9E  F011         	goto	l6803
  2689   0023C4  EFA4  F010         	goto	l6709
  2690   0023C8  EFFB  F000         	goto	start
  2691   0023CC                     __end_of_main:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _reprak_main *****************
  2695 ;; Defined at:
  2696 ;;		line 15 in file "reprak.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  txt            17    4[BANK0 ] unsigned char [17]
  2701 ;;  len             2   28[BANK0 ] int 
  2702 ;;  perc            2   25[BANK0 ] int 
  2703 ;;  btn1            1   27[BANK0 ] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;Total ram usage:       26 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 3
  2720 ;; This function calls:
  2721 ;;		_LCD_ShowString
  2722 ;;		___aldiv
  2723 ;;		___awdiv
  2724 ;;		___fldiv
  2725 ;;		___flmul
  2726 ;;		___fltol
  2727 ;;		___xxtofl
  2728 ;;		_reprak_Init
  2729 ;;		_strcpy
  2730 ;; This function is called by:
  2731 ;;		_main
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text1
  2736   001B84                     __ptext1:
  2737                           	callstack 0
  2738   001B84                     _reprak_main:
  2739                           	callstack 27
  2740   001B84                     
  2741                           ;reprak.c: 17:     reprak_Init();
  2742   001B84  ECA3  F020         	call	_reprak_Init	;wreg free
  2743   001B88                     
  2744                           ;reprak.c: 19:     LCD_ShowString(2,"                  ");
  2745   001B88  0ED9               	movlw	low (STR_14+2)
  2746   001B8A  6E03               	movwf	LCD_ShowString@textData^0,c
  2747   001B8C  0EFD               	movlw	high (STR_14+2)
  2748   001B8E  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2749   001B90  0E02               	movlw	2
  2750   001B92  ECF2  F01C         	call	_LCD_ShowString
  2751   001B96                     
  2752                           ;reprak.c: 20:     LCD_ShowString(1,"BTN1: START/STOP  ");
  2753   001B96  0E50               	movlw	low STR_32
  2754   001B98  6E03               	movwf	LCD_ShowString@textData^0,c
  2755   001B9A  0EFE               	movlw	high STR_32
  2756   001B9C  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2757   001B9E  0E01               	movlw	1
  2758   001BA0  ECF2  F01C         	call	_LCD_ShowString
  2759   001BA4                     
  2760                           ;reprak.c: 22:     char btn1 = 0;
  2761   001BA4  0E00               	movlw	0
  2762   001BA6  0100               	movlb	0	; () banked
  2763   001BA8  6F7B               	movwf	reprak_main@btn1& (0+255),b
  2764   001BAA                     
  2765                           ; BSR set to: 0
  2766                           ;reprak.c: 23:     char txt[17] = "                 ";
  2767   001BAA  EE21  F05A         	lfsr	2,reprak_main@F6526
  2768   001BAE  EE10  F064         	lfsr	1,reprak_main@txt
  2769   001BB2  0E10               	movlw	16
  2770   001BB4                     u7411:
  2771   001BB4  CFDB FFE3          	movff	plusw2,plusw1
  2772   001BB8  06E8               	decf	wreg,f,c
  2773   001BBA  E2FC               	bc	u7411
  2774   001BBC                     l6641:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;reprak.c: 30:         if(reprak.counter == 0){
  2778   001BBC  51EC               	movf	(_reprak+5)& (0+255),w,b	;volatile
  2779   001BBE  11ED               	iorwf	(_reprak+6)& (0+255),w,b	;volatile
  2780   001BC0  A4D8               	btfss	status,2,c
  2781   001BC2  EFE5  F00D         	goto	u7421
  2782   001BC6  EFE7  F00D         	goto	u7420
  2783   001BCA                     u7421:
  2784   001BCA  EFF8  F00D         	goto	l6647
  2785   001BCE                     u7420:
  2786   001BCE                     
  2787                           ; BSR set to: 0
  2788                           ;reprak.c: 31:             strcpy(txt,"                 ");
  2789   001BCE  0E64               	movlw	low reprak_main@txt
  2790   001BD0  6E02               	movwf	strcpy@dest^0,c
  2791   001BD2  0E00               	movlw	high reprak_main@txt
  2792   001BD4  6E03               	movwf	(strcpy@dest+1)^0,c
  2793   001BD6  0EDA               	movlw	low (STR_14+3)
  2794   001BD8  6E04               	movwf	strcpy@src^0,c
  2795   001BDA  0EFD               	movlw	high (STR_14+3)
  2796   001BDC  6E05               	movwf	(strcpy@src+1)^0,c
  2797   001BDE  EC4E  F021         	call	_strcpy	;wreg free
  2798   001BE2                     
  2799                           ;reprak.c: 32:             LCD_ShowString(2,txt);
  2800   001BE2  0E64               	movlw	low reprak_main@txt
  2801   001BE4  6E03               	movwf	LCD_ShowString@textData^0,c
  2802   001BE6  0E00               	movlw	high reprak_main@txt
  2803   001BE8  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  2804   001BEA  0E02               	movlw	2
  2805   001BEC  ECF2  F01C         	call	_LCD_ShowString
  2806   001BF0                     l6647:
  2807                           
  2808                           ;reprak.c: 35:         if(buttons.btn1_state){
  2809   001BF0  0100               	movlb	0	; () banked
  2810   001BF2  51F4               	movf	(_buttons+4)& (0+255),w,b	;volatile
  2811   001BF4  B4D8               	btfsc	status,2,c
  2812   001BF6  EFFF  F00D         	goto	u7431
  2813   001BFA  EF01  F00E         	goto	u7430
  2814   001BFE                     u7431:
  2815   001BFE  EF19  F00E         	goto	l6657
  2816   001C02                     u7430:
  2817   001C02                     
  2818                           ; BSR set to: 0
  2819                           ;reprak.c: 36:             buttons.btn1_state = 0;
  2820   001C02  0E00               	movlw	0
  2821   001C04  6FF4               	movwf	(_buttons+4)& (0+255),b	;volatile
  2822   001C06                     
  2823                           ; BSR set to: 0
  2824                           ;reprak.c: 37:             btn1 ^= 1;
  2825   001C06  0E01               	movlw	1
  2826   001C08  1B7B               	xorwf	reprak_main@btn1& (0+255),f,b
  2827   001C0A                     
  2828                           ; BSR set to: 0
  2829                           ;reprak.c: 38:             if(btn1){
  2830   001C0A  517B               	movf	reprak_main@btn1& (0+255),w,b
  2831   001C0C  B4D8               	btfsc	status,2,c
  2832   001C0E  EF0B  F00E         	goto	u7441
  2833   001C12  EF0D  F00E         	goto	u7440
  2834   001C16                     u7441:
  2835   001C16  EF14  F00E         	goto	l486
  2836   001C1A                     u7440:
  2837   001C1A                     
  2838                           ; BSR set to: 0
  2839                           ;reprak.c: 39:                 TMR3ON = 1;
  2840   001C1A  80B1               	bsf	4017,0,c	;volatile
  2841                           
  2842                           ;reprak.c: 40:                 TMR3IE = 1;
  2843   001C1C  82A0               	bsf	4000,1,c	;volatile
  2844                           
  2845                           ;reprak.c: 41:                 TMR4ON = 1;
  2846   001C1E  010F               	movlb	15	; () banked
  2847   001C20  8551               	bsf	81,2,b	;volatile
  2848                           
  2849                           ;reprak.c: 42:                 TMR4IE = 1;
  2850   001C22  807D               	bsf	3965,0,c	;volatile
  2851                           
  2852                           ;reprak.c: 43:             }
  2853   001C24  EF19  F00E         	goto	l6657
  2854   001C28                     l486:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;reprak.c: 45:                 TMR3ON = 0;
  2858   001C28  90B1               	bcf	4017,0,c	;volatile
  2859                           
  2860                           ;reprak.c: 46:                 TMR3IE = 0;
  2861   001C2A  92A0               	bcf	4000,1,c	;volatile
  2862                           
  2863                           ;reprak.c: 47:                 TMR4ON = 0;
  2864   001C2C  010F               	movlb	15	; () banked
  2865   001C2E  9551               	bcf	81,2,b	;volatile
  2866                           
  2867                           ;reprak.c: 48:                 TMR4IE = 0;
  2868   001C30  907D               	bcf	3965,0,c	;volatile
  2869   001C32                     l6657:
  2870                           
  2871                           ;reprak.c: 52:         if(reprak.flag && btn1){
  2872   001C32  0100               	movlb	0	; () banked
  2873   001C34  51EB               	movf	(_reprak+4)& (0+255),w,b	;volatile
  2874   001C36  B4D8               	btfsc	status,2,c
  2875   001C38  EF20  F00E         	goto	u7451
  2876   001C3C  EF22  F00E         	goto	u7450
  2877   001C40                     u7451:
  2878   001C40  EF33  F00F         	goto	l6683
  2879   001C44                     u7450:
  2880   001C44                     
  2881                           ; BSR set to: 0
  2882   001C44  517B               	movf	reprak_main@btn1& (0+255),w,b
  2883   001C46  B4D8               	btfsc	status,2,c
  2884   001C48  EF28  F00E         	goto	u7461
  2885   001C4C  EF2A  F00E         	goto	u7460
  2886   001C50                     u7461:
  2887   001C50  EF33  F00F         	goto	l6683
  2888   001C54                     u7460:
  2889   001C54                     
  2890                           ; BSR set to: 0
  2891                           ;reprak.c: 54:             reprak.freq = ((1000000/melody[reprak.counter])/2);
  2892   001C54  90D8               	bcf	status,0,c
  2893   001C56  35EC               	rlcf	(_reprak+5)& (0+255),w,b	;volatile
  2894   001C58  6ED9               	movwf	fsr2l,c
  2895   001C5A  35ED               	rlcf	(_reprak+6)& (0+255),w,b	;volatile
  2896   001C5C  6EDA               	movwf	fsr2h,c
  2897   001C5E  0EF6               	movlw	low _melody
  2898   001C60  26D9               	addwf	fsr2l,f,c
  2899   001C62  0E01               	movlw	high _melody
  2900   001C64  22DA               	addwfc	fsr2h,f,c
  2901   001C66  CFDE F006          	movff	postinc2,___aldiv@divisor
  2902   001C6A  CFDD F007          	movff	postdec2,___aldiv@divisor+1
  2903   001C6E  0E00               	movlw	0
  2904   001C70  BE07               	btfsc	(___aldiv@divisor+1)^0,7,c
  2905   001C72  0EFF               	movlw	-1
  2906   001C74  6E08               	movwf	(___aldiv@divisor+2)^0,c
  2907   001C76  6E09               	movwf	(___aldiv@divisor+3)^0,c
  2908   001C78  0E40               	movlw	64
  2909   001C7A  6E02               	movwf	___aldiv@dividend^0,c
  2910   001C7C  0E42               	movlw	66
  2911   001C7E  6E03               	movwf	(___aldiv@dividend+1)^0,c
  2912   001C80  0E0F               	movlw	15
  2913   001C82  6E04               	movwf	(___aldiv@dividend+2)^0,c
  2914   001C84  0E00               	movlw	0
  2915   001C86  6E05               	movwf	(___aldiv@dividend+3)^0,c
  2916   001C88  EC73  F018         	call	___aldiv	;wreg free
  2917   001C8C  C002  F075         	movff	?___aldiv,_reprak_main$3616
  2918   001C90  C003  F076         	movff	?___aldiv+1,_reprak_main$3616+1
  2919   001C94  C004  F077         	movff	?___aldiv+2,_reprak_main$3616+2
  2920   001C98  C005  F078         	movff	?___aldiv+3,_reprak_main$3616+3
  2921   001C9C                     
  2922                           ;reprak.c: 54:             reprak.freq = ((1000000/melody[reprak.counter])/2);
  2923   001C9C  C075  F002         	movff	_reprak_main$3616,___aldiv@dividend
  2924   001CA0  C076  F003         	movff	_reprak_main$3616+1,___aldiv@dividend+1
  2925   001CA4  C077  F004         	movff	_reprak_main$3616+2,___aldiv@dividend+2
  2926   001CA8  C078  F005         	movff	_reprak_main$3616+3,___aldiv@dividend+3
  2927   001CAC  0E02               	movlw	2
  2928   001CAE  6E06               	movwf	___aldiv@divisor^0,c
  2929   001CB0  0E00               	movlw	0
  2930   001CB2  6E07               	movwf	(___aldiv@divisor+1)^0,c
  2931   001CB4  0E00               	movlw	0
  2932   001CB6  6E08               	movwf	(___aldiv@divisor+2)^0,c
  2933   001CB8  0E00               	movlw	0
  2934   001CBA  6E09               	movwf	(___aldiv@divisor+3)^0,c
  2935   001CBC  EC73  F018         	call	___aldiv	;wreg free
  2936   001CC0  C002  F0E7         	movff	?___aldiv,_reprak	;volatile
  2937   001CC4  C003  F0E8         	movff	?___aldiv+1,_reprak+1	;volatile
  2938   001CC8                     
  2939                           ;reprak.c: 55:             len = melody[reprak.counter+1];
  2940   001CC8  90D8               	bcf	status,0,c
  2941   001CCA  0100               	movlb	0	; () banked
  2942   001CCC  35EC               	rlcf	(_reprak+5)& (0+255),w,b	;volatile
  2943   001CCE  6ED9               	movwf	fsr2l,c
  2944   001CD0  35ED               	rlcf	(_reprak+6)& (0+255),w,b	;volatile
  2945   001CD2  6EDA               	movwf	fsr2h,c
  2946   001CD4  0EF8               	movlw	low (_melody+2)
  2947   001CD6  26D9               	addwf	fsr2l,f,c
  2948   001CD8  0E01               	movlw	high (_melody+2)
  2949   001CDA  22DA               	addwfc	fsr2h,f,c
  2950   001CDC  CFDE F07C          	movff	postinc2,reprak_main@len
  2951   001CE0  CFDD F07D          	movff	postdec2,reprak_main@len+1
  2952                           
  2953                           ;reprak.c: 56:             if(len > 0){
  2954   001CE4  BF7D               	btfsc	(reprak_main@len+1)& (0+255),7,b
  2955   001CE6  EF7D  F00E         	goto	u7471
  2956   001CEA  517D               	movf	(reprak_main@len+1)& (0+255),w,b
  2957   001CEC  E108               	bnz	u7470
  2958   001CEE  057C               	decf	reprak_main@len& (0+255),w,b
  2959   001CF0  A0D8               	btfss	status,0,c
  2960   001CF2  EF7D  F00E         	goto	u7471
  2961   001CF6  EF7F  F00E         	goto	u7470
  2962   001CFA                     u7471:
  2963   001CFA  EF8F  F00E         	goto	l6669
  2964   001CFE                     u7470:
  2965   001CFE                     
  2966                           ; BSR set to: 0
  2967                           ;reprak.c: 57:                 reprak.full_note = 1600/len;
  2968   001CFE  0E06               	movlw	6
  2969   001D00  6E03               	movwf	(___awdiv@dividend+1)^0,c
  2970   001D02  0E40               	movlw	64
  2971   001D04  6E02               	movwf	___awdiv@dividend^0,c
  2972   001D06  C07C  F004         	movff	reprak_main@len,___awdiv@divisor
  2973   001D0A  C07D  F005         	movff	reprak_main@len+1,___awdiv@divisor+1
  2974   001D0E  EC33  F01C         	call	___awdiv	;wreg free
  2975   001D12  C002  F0E9         	movff	?___awdiv,_reprak+2	;volatile
  2976   001D16  C003  F0EA         	movff	?___awdiv+1,_reprak+3	;volatile
  2977                           
  2978                           ;reprak.c: 58:             }
  2979   001D1A  EFD2  F00E         	goto	l6675
  2980   001D1E                     l6669:
  2981                           
  2982                           ; BSR set to: 0
  2983   001D1E  BF7D               	btfsc	(reprak_main@len+1)& (0+255),7,b
  2984   001D20  EF96  F00E         	goto	u7480
  2985   001D24  EF94  F00E         	goto	u7481
  2986   001D28                     u7481:
  2987   001D28  EFD2  F00E         	goto	l6675
  2988   001D2C                     u7480:
  2989   001D2C                     
  2990                           ; BSR set to: 0
  2991                           ;reprak.c: 60:                 reprak.full_note = 1600/len;
  2992   001D2C  0E06               	movlw	6
  2993   001D2E  6E03               	movwf	(___awdiv@dividend+1)^0,c
  2994   001D30  0E40               	movlw	64
  2995   001D32  6E02               	movwf	___awdiv@dividend^0,c
  2996   001D34  C07C  F004         	movff	reprak_main@len,___awdiv@divisor
  2997   001D38  C07D  F005         	movff	reprak_main@len+1,___awdiv@divisor+1
  2998   001D3C  EC33  F01C         	call	___awdiv	;wreg free
  2999   001D40  C002  F0E9         	movff	?___awdiv,_reprak+2	;volatile
  3000   001D44  C003  F0EA         	movff	?___awdiv+1,_reprak+3	;volatile
  3001   001D48                     
  3002                           ;reprak.c: 61:                 reprak.full_note = reprak.full_note * -1.5;
  3003   001D48  0E00               	movlw	0
  3004   001D4A  6E2D               	movwf	___flmul@a^0,c
  3005   001D4C  0E00               	movlw	0
  3006   001D4E  6E2E               	movwf	(___flmul@a+1)^0,c
  3007   001D50  0EC0               	movlw	192
  3008   001D52  6E2F               	movwf	(___flmul@a+2)^0,c
  3009   001D54  0EBF               	movlw	191
  3010   001D56  6E30               	movwf	(___flmul@a+3)^0,c
  3011   001D58  EE20  F0E9         	lfsr	2,_reprak+2	;volatile
  3012   001D5C  CFDE F002          	movff	postinc2,___xxtofl@val
  3013   001D60  CFDD F003          	movff	postdec2,___xxtofl@val+1
  3014   001D64  0E00               	movlw	0
  3015   001D66  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  3016   001D68  0EFF               	movlw	-1
  3017   001D6A  6E04               	movwf	(___xxtofl@val+2)^0,c
  3018   001D6C  6E05               	movwf	(___xxtofl@val+3)^0,c
  3019   001D6E  0E01               	movlw	1
  3020   001D70  ECD1  F014         	call	___xxtofl
  3021   001D74  C002  F029         	movff	?___xxtofl,___flmul@b
  3022   001D78  C003  F02A         	movff	?___xxtofl+1,___flmul@b+1
  3023   001D7C  C004  F02B         	movff	?___xxtofl+2,___flmul@b+2
  3024   001D80  C005  F02C         	movff	?___xxtofl+3,___flmul@b+3
  3025   001D84  EC5A  F008         	call	___flmul	;wreg free
  3026   001D88  C029  F060         	movff	?___flmul,___fltol@f1
  3027   001D8C  C02A  F061         	movff	?___flmul+1,___fltol@f1+1
  3028   001D90  C02B  F062         	movff	?___flmul+2,___fltol@f1+2
  3029   001D94  C02C  F063         	movff	?___flmul+3,___fltol@f1+3
  3030   001D98  ECF9  F018         	call	___fltol	;wreg free
  3031   001D9C  C060  F0E9         	movff	?___fltol,_reprak+2	;volatile
  3032   001DA0  C061  F0EA         	movff	?___fltol+1,_reprak+3	;volatile
  3033   001DA4                     l6675:
  3034                           
  3035                           ;reprak.c: 64:             perc = (reprak.counter/((float)reprak.array_len))*16;
  3036   001DA4  0E00               	movlw	0
  3037   001DA6  6E2D               	movwf	___flmul@a^0,c
  3038   001DA8  0E00               	movlw	0
  3039   001DAA  6E2E               	movwf	(___flmul@a+1)^0,c
  3040   001DAC  0E80               	movlw	128
  3041   001DAE  6E2F               	movwf	(___flmul@a+2)^0,c
  3042   001DB0  0E41               	movlw	65
  3043   001DB2  6E30               	movwf	(___flmul@a+3)^0,c
  3044   001DB4  EE20  F0EE         	lfsr	2,_reprak+7	;volatile
  3045   001DB8  CFDE F002          	movff	postinc2,___xxtofl@val
  3046   001DBC  CFDD F003          	movff	postdec2,___xxtofl@val+1
  3047   001DC0  0E00               	movlw	0
  3048   001DC2  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  3049   001DC4  0EFF               	movlw	-1
  3050   001DC6  6E04               	movwf	(___xxtofl@val+2)^0,c
  3051   001DC8  6E05               	movwf	(___xxtofl@val+3)^0,c
  3052   001DCA  0E01               	movlw	1
  3053   001DCC  ECD1  F014         	call	___xxtofl
  3054   001DD0  C002  F014         	movff	?___xxtofl,___fldiv@a
  3055   001DD4  C003  F015         	movff	?___xxtofl+1,___fldiv@a+1
  3056   001DD8  C004  F016         	movff	?___xxtofl+2,___fldiv@a+2
  3057   001DDC  C005  F017         	movff	?___xxtofl+3,___fldiv@a+3
  3058   001DE0  EE20  F0EC         	lfsr	2,_reprak+5	;volatile
  3059   001DE4  CFDE F002          	movff	postinc2,___xxtofl@val
  3060   001DE8  CFDD F003          	movff	postdec2,___xxtofl@val+1
  3061   001DEC  0E00               	movlw	0
  3062   001DEE  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  3063   001DF0  0EFF               	movlw	-1
  3064   001DF2  6E04               	movwf	(___xxtofl@val+2)^0,c
  3065   001DF4  6E05               	movwf	(___xxtofl@val+3)^0,c
  3066   001DF6  0E01               	movlw	1
  3067   001DF8  ECD1  F014         	call	___xxtofl
  3068   001DFC  C002  F010         	movff	?___xxtofl,___fldiv@b
  3069   001E00  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  3070   001E04  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  3071   001E08  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  3072   001E0C  EC6F  F00A         	call	___fldiv	;wreg free
  3073   001E10  C010  F029         	movff	?___fldiv,___flmul@b
  3074   001E14  C011  F02A         	movff	?___fldiv+1,___flmul@b+1
  3075   001E18  C012  F02B         	movff	?___fldiv+2,___flmul@b+2
  3076   001E1C  C013  F02C         	movff	?___fldiv+3,___flmul@b+3
  3077   001E20  EC5A  F008         	call	___flmul	;wreg free
  3078   001E24  C029  F060         	movff	?___flmul,___fltol@f1
  3079   001E28  C02A  F061         	movff	?___flmul+1,___fltol@f1+1
  3080   001E2C  C02B  F062         	movff	?___flmul+2,___fltol@f1+2
  3081   001E30  C02C  F063         	movff	?___flmul+3,___fltol@f1+3
  3082   001E34  ECF9  F018         	call	___fltol	;wreg free
  3083   001E38  C060  F079         	movff	?___fltol,reprak_main@perc
  3084   001E3C  C061  F07A         	movff	?___fltol+1,reprak_main@perc+1
  3085   001E40                     
  3086                           ;reprak.c: 65:             txt[perc] = 219;
  3087   001E40  0E64               	movlw	low reprak_main@txt
  3088   001E42  0100               	movlb	0	; () banked
  3089   001E44  2579               	addwf	reprak_main@perc& (0+255),w,b
  3090   001E46  6ED9               	movwf	fsr2l,c
  3091   001E48  0E00               	movlw	high reprak_main@txt
  3092   001E4A  217A               	addwfc	(reprak_main@perc+1)& (0+255),w,b
  3093   001E4C  6EDA               	movwf	fsr2h,c
  3094   001E4E  0EDB               	movlw	219
  3095   001E50  6EDF               	movwf	indf2,c
  3096   001E52                     
  3097                           ; BSR set to: 0
  3098                           ;reprak.c: 66:             LCD_ShowString(2,txt);
  3099   001E52  0E64               	movlw	low reprak_main@txt
  3100   001E54  6E03               	movwf	LCD_ShowString@textData^0,c
  3101   001E56  0E00               	movlw	high reprak_main@txt
  3102   001E58  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  3103   001E5A  0E02               	movlw	2
  3104   001E5C  ECF2  F01C         	call	_LCD_ShowString
  3105   001E60                     
  3106                           ;reprak.c: 69:             reprak.flag = 0;
  3107   001E60  0E00               	movlw	0
  3108   001E62  0100               	movlb	0	; () banked
  3109   001E64  6FEB               	movwf	(_reprak+4)& (0+255),b	;volatile
  3110   001E66                     l6683:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;reprak.c: 72:         if(buttons.btn4_state){
  3114   001E66  51F7               	movf	(_buttons+7)& (0+255),w,b	;volatile
  3115   001E68  B4D8               	btfsc	status,2,c
  3116   001E6A  EF39  F00F         	goto	u7491
  3117   001E6E  EF3B  F00F         	goto	u7490
  3118   001E72                     u7491:
  3119   001E72  EFDE  F00D         	goto	l6641
  3120   001E76                     u7490:
  3121   001E76                     
  3122                           ; BSR set to: 0
  3123                           ;reprak.c: 73:             buttons.btn4_state = 0;
  3124   001E76  0E00               	movlw	0
  3125   001E78  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
  3126   001E7A                     
  3127                           ; BSR set to: 0
  3128                           ;reprak.c: 74:             TMR3ON = 0;
  3129   001E7A  90B1               	bcf	4017,0,c	;volatile
  3130   001E7C                     
  3131                           ; BSR set to: 0
  3132                           ;reprak.c: 75:             TMR3IE = 0;
  3133   001E7C  92A0               	bcf	4000,1,c	;volatile
  3134   001E7E                     
  3135                           ; BSR set to: 0
  3136                           ;reprak.c: 76:             TMR4ON = 0;
  3137   001E7E  010F               	movlb	15	; () banked
  3138   001E80  9551               	bcf	81,2,b	;volatile
  3139   001E82                     
  3140                           ; BSR set to: 15
  3141                           ;reprak.c: 77:             TMR4IE = 0;
  3142   001E82  907D               	bcf	3965,0,c	;volatile
  3143   001E84                     
  3144                           ; BSR set to: 15
  3145   001E84  0012               	return		;funcret
  3146   001E86                     __end_of_reprak_main:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function _reprak_Init *****************
  3150 ;; Defined at:
  3151 ;;		line 83 in file "reprak.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used: 1
  3171 ;; Hardware stack levels required when called: 1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_reprak_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text2
  3180   004146                     __ptext2:
  3181                           	callstack 0
  3182   004146                     _reprak_Init:
  3183                           	callstack 28
  3184   004146                     
  3185                           ;reprak.c: 85:     T4CONbits.T4CKPS = 0b01;
  3186   004146  010F               	movlb	15	; () banked
  3187   004148  5151               	movf	81,w,b	;volatile
  3188   00414A  0BFC               	andlw	-4
  3189   00414C  0901               	iorlw	1
  3190   00414E  6F51               	movwf	81,b	;volatile
  3191                           
  3192                           ;reprak.c: 86:     T4CONbits.T4OUTPS = 0b0111;
  3193   004150  5151               	movf	81,w,b	;volatile
  3194   004152  0B87               	andlw	-121
  3195   004154  0938               	iorlw	56
  3196   004156  6F51               	movwf	81,b	;volatile
  3197   004158                     
  3198                           ; BSR set to: 15
  3199                           ;reprak.c: 87:     TMR4ON = 0;
  3200   004158  9551               	bcf	81,2,b	;volatile
  3201   00415A                     
  3202                           ; BSR set to: 15
  3203                           ;reprak.c: 88:     TMR4IE = 0;
  3204   00415A  907D               	bcf	3965,0,c	;volatile
  3205   00415C                     
  3206                           ; BSR set to: 15
  3207                           ;reprak.c: 89:     TMR4IF = 0;
  3208   00415C  907E               	bcf	3966,0,c	;volatile
  3209                           
  3210                           ;reprak.c: 90:     PR4 = 250;
  3211   00415E  0EFA               	movlw	250
  3212   004160  6F52               	movwf	82,b	;volatile
  3213                           
  3214                           ;reprak.c: 92:     T3CONbits.TMR3CS = 0b00;
  3215   004162  0E3F               	movlw	-193
  3216   004164  16B1               	andwf	177,f,c	;volatile
  3217                           
  3218                           ;reprak.c: 93:     T3CONbits.T3CKPS = 0b11;
  3219   004166  0E30               	movlw	48
  3220   004168  12B1               	iorwf	177,f,c	;volatile
  3221   00416A                     
  3222                           ; BSR set to: 15
  3223                           ;reprak.c: 95:     TMR3ON = 0;
  3224   00416A  90B1               	bcf	4017,0,c	;volatile
  3225   00416C                     
  3226                           ; BSR set to: 15
  3227                           ;reprak.c: 96:     TMR3IE = 0;
  3228   00416C  92A0               	bcf	4000,1,c	;volatile
  3229   00416E                     
  3230                           ; BSR set to: 15
  3231                           ;reprak.c: 97:     TMR3IF = 0;
  3232   00416E  92A1               	bcf	4001,1,c	;volatile
  3233   004170                     
  3234                           ; BSR set to: 15
  3235                           ;reprak.c: 99:     PEIE = 1;
  3236   004170  8CF2               	bsf	4082,6,c	;volatile
  3237   004172                     
  3238                           ; BSR set to: 15
  3239                           ;reprak.c: 100:     GIE = 1;
  3240   004172  8EF2               	bsf	4082,7,c	;volatile
  3241                           
  3242                           ;reprak.c: 102:     reprak.counter = 0;
  3243   004174  0E00               	movlw	0
  3244   004176  0100               	movlb	0	; () banked
  3245   004178  6FED               	movwf	(_reprak+6)& (0+255),b	;volatile
  3246   00417A  0E00               	movlw	0
  3247   00417C  6FEC               	movwf	(_reprak+5)& (0+255),b	;volatile
  3248                           
  3249                           ;reprak.c: 103:     reprak.flag = 1;
  3250   00417E  0E01               	movlw	1
  3251   004180  6FEB               	movwf	(_reprak+4)& (0+255),b	;volatile
  3252                           
  3253                           ;reprak.c: 104:     reprak.array_len = sizeof(melody)/sizeof(melody[0]);
  3254   004182  0E01               	movlw	1
  3255   004184  6FEF               	movwf	(_reprak+8)& (0+255),b	;volatile
  3256   004186  0E04               	movlw	4
  3257   004188  6FEE               	movwf	(_reprak+7)& (0+255),b	;volatile
  3258   00418A                     
  3259                           ; BSR set to: 0
  3260                           ;reprak.c: 106:     TRISBbits.TRISB5 = 0;
  3261   00418A  9A93               	bcf	147,5,c	;volatile
  3262   00418C                     
  3263                           ; BSR set to: 0
  3264   00418C  0012               	return		;funcret
  3265   00418E                     __end_of_reprak_Init:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function ___aldiv *****************
  3269 ;; Defined at:
  3270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  dividend        4    1[COMRAM] long 
  3273 ;;  divisor         4    5[COMRAM] long 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  quotient        4   11[COMRAM] long 
  3276 ;;  sign            1   10[COMRAM] unsigned char 
  3277 ;;  counter         1    9[COMRAM] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  4    1[COMRAM] long 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;Total ram usage:       14 bytes
  3292 ;; Hardware stack levels used: 1
  3293 ;; Hardware stack levels required when called: 1
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_reprak_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text3
  3302   0030E6                     __ptext3:
  3303                           	callstack 0
  3304   0030E6                     ___aldiv:
  3305                           	callstack 28
  3306   0030E6  0E00               	movlw	0
  3307   0030E8  6E0B               	movwf	___aldiv@sign^0,c
  3308   0030EA  BE09               	btfsc	(___aldiv@divisor+3)^0,7,c
  3309   0030EC  EF7C  F018         	goto	u5420
  3310   0030F0  EF7A  F018         	goto	u5421
  3311   0030F4                     u5421:
  3312   0030F4  EF86  F018         	goto	l5051
  3313   0030F8                     u5420:
  3314   0030F8  1E09               	comf	(___aldiv@divisor+3)^0,f,c
  3315   0030FA  1E08               	comf	(___aldiv@divisor+2)^0,f,c
  3316   0030FC  1E07               	comf	(___aldiv@divisor+1)^0,f,c
  3317   0030FE  6C06               	negf	___aldiv@divisor^0,c
  3318   003100  0E00               	movlw	0
  3319   003102  2207               	addwfc	(___aldiv@divisor+1)^0,f,c
  3320   003104  2208               	addwfc	(___aldiv@divisor+2)^0,f,c
  3321   003106  2209               	addwfc	(___aldiv@divisor+3)^0,f,c
  3322   003108  0E01               	movlw	1
  3323   00310A  6E0B               	movwf	___aldiv@sign^0,c
  3324   00310C                     l5051:
  3325   00310C  BE05               	btfsc	(___aldiv@dividend+3)^0,7,c
  3326   00310E  EF8D  F018         	goto	u5430
  3327   003112  EF8B  F018         	goto	u5431
  3328   003116                     u5431:
  3329   003116  EF97  F018         	goto	l5057
  3330   00311A                     u5430:
  3331   00311A  1E05               	comf	(___aldiv@dividend+3)^0,f,c
  3332   00311C  1E04               	comf	(___aldiv@dividend+2)^0,f,c
  3333   00311E  1E03               	comf	(___aldiv@dividend+1)^0,f,c
  3334   003120  6C02               	negf	___aldiv@dividend^0,c
  3335   003122  0E00               	movlw	0
  3336   003124  2203               	addwfc	(___aldiv@dividend+1)^0,f,c
  3337   003126  2204               	addwfc	(___aldiv@dividend+2)^0,f,c
  3338   003128  2205               	addwfc	(___aldiv@dividend+3)^0,f,c
  3339   00312A  0E01               	movlw	1
  3340   00312C  1A0B               	xorwf	___aldiv@sign^0,f,c
  3341   00312E                     l5057:
  3342   00312E  0E00               	movlw	0
  3343   003130  6E0C               	movwf	___aldiv@quotient^0,c
  3344   003132  0E00               	movlw	0
  3345   003134  6E0D               	movwf	(___aldiv@quotient+1)^0,c
  3346   003136  0E00               	movlw	0
  3347   003138  6E0E               	movwf	(___aldiv@quotient+2)^0,c
  3348   00313A  0E00               	movlw	0
  3349   00313C  6E0F               	movwf	(___aldiv@quotient+3)^0,c
  3350   00313E  5006               	movf	___aldiv@divisor^0,w,c
  3351   003140  1007               	iorwf	(___aldiv@divisor+1)^0,w,c
  3352   003142  1008               	iorwf	(___aldiv@divisor+2)^0,w,c
  3353   003144  1009               	iorwf	(___aldiv@divisor+3)^0,w,c
  3354   003146  B4D8               	btfsc	status,2,c
  3355   003148  EFA8  F018         	goto	u5441
  3356   00314C  EFAA  F018         	goto	u5440
  3357   003150                     u5441:
  3358   003150  EFE0  F018         	goto	l5079
  3359   003154                     u5440:
  3360   003154  0E01               	movlw	1
  3361   003156  6E0A               	movwf	___aldiv@counter^0,c
  3362   003158  EFB4  F018         	goto	l5065
  3363   00315C                     l5063:
  3364   00315C  90D8               	bcf	status,0,c
  3365   00315E  3606               	rlcf	___aldiv@divisor^0,f,c
  3366   003160  3607               	rlcf	(___aldiv@divisor+1)^0,f,c
  3367   003162  3608               	rlcf	(___aldiv@divisor+2)^0,f,c
  3368   003164  3609               	rlcf	(___aldiv@divisor+3)^0,f,c
  3369   003166  2A0A               	incf	___aldiv@counter^0,f,c
  3370   003168                     l5065:
  3371   003168  AE09               	btfss	(___aldiv@divisor+3)^0,7,c
  3372   00316A  EFB9  F018         	goto	u5451
  3373   00316E  EFBB  F018         	goto	u5450
  3374   003172                     u5451:
  3375   003172  EFAE  F018         	goto	l5063
  3376   003176                     u5450:
  3377   003176                     l5067:
  3378   003176  90D8               	bcf	status,0,c
  3379   003178  360C               	rlcf	___aldiv@quotient^0,f,c
  3380   00317A  360D               	rlcf	(___aldiv@quotient+1)^0,f,c
  3381   00317C  360E               	rlcf	(___aldiv@quotient+2)^0,f,c
  3382   00317E  360F               	rlcf	(___aldiv@quotient+3)^0,f,c
  3383   003180  5006               	movf	___aldiv@divisor^0,w,c
  3384   003182  5C02               	subwf	___aldiv@dividend^0,w,c
  3385   003184  5007               	movf	(___aldiv@divisor+1)^0,w,c
  3386   003186  5803               	subwfb	(___aldiv@dividend+1)^0,w,c
  3387   003188  5008               	movf	(___aldiv@divisor+2)^0,w,c
  3388   00318A  5804               	subwfb	(___aldiv@dividend+2)^0,w,c
  3389   00318C  5009               	movf	(___aldiv@divisor+3)^0,w,c
  3390   00318E  5805               	subwfb	(___aldiv@dividend+3)^0,w,c
  3391   003190  A0D8               	btfss	status,0,c
  3392   003192  EFCD  F018         	goto	u5461
  3393   003196  EFCF  F018         	goto	u5460
  3394   00319A                     u5461:
  3395   00319A  EFD8  F018         	goto	l5075
  3396   00319E                     u5460:
  3397   00319E  5006               	movf	___aldiv@divisor^0,w,c
  3398   0031A0  5E02               	subwf	___aldiv@dividend^0,f,c
  3399   0031A2  5007               	movf	(___aldiv@divisor+1)^0,w,c
  3400   0031A4  5A03               	subwfb	(___aldiv@dividend+1)^0,f,c
  3401   0031A6  5008               	movf	(___aldiv@divisor+2)^0,w,c
  3402   0031A8  5A04               	subwfb	(___aldiv@dividend+2)^0,f,c
  3403   0031AA  5009               	movf	(___aldiv@divisor+3)^0,w,c
  3404   0031AC  5A05               	subwfb	(___aldiv@dividend+3)^0,f,c
  3405   0031AE  800C               	bsf	___aldiv@quotient^0,0,c
  3406   0031B0                     l5075:
  3407   0031B0  90D8               	bcf	status,0,c
  3408   0031B2  3209               	rrcf	(___aldiv@divisor+3)^0,f,c
  3409   0031B4  3208               	rrcf	(___aldiv@divisor+2)^0,f,c
  3410   0031B6  3207               	rrcf	(___aldiv@divisor+1)^0,f,c
  3411   0031B8  3206               	rrcf	___aldiv@divisor^0,f,c
  3412   0031BA  2E0A               	decfsz	___aldiv@counter^0,f,c
  3413   0031BC  EFBB  F018         	goto	l5067
  3414   0031C0                     l5079:
  3415   0031C0  500B               	movf	___aldiv@sign^0,w,c
  3416   0031C2  B4D8               	btfsc	status,2,c
  3417   0031C4  EFE6  F018         	goto	u5471
  3418   0031C8  EFE8  F018         	goto	u5470
  3419   0031CC                     u5471:
  3420   0031CC  EFF0  F018         	goto	l5083
  3421   0031D0                     u5470:
  3422   0031D0  1E0F               	comf	(___aldiv@quotient+3)^0,f,c
  3423   0031D2  1E0E               	comf	(___aldiv@quotient+2)^0,f,c
  3424   0031D4  1E0D               	comf	(___aldiv@quotient+1)^0,f,c
  3425   0031D6  6C0C               	negf	___aldiv@quotient^0,c
  3426   0031D8  0E00               	movlw	0
  3427   0031DA  220D               	addwfc	(___aldiv@quotient+1)^0,f,c
  3428   0031DC  220E               	addwfc	(___aldiv@quotient+2)^0,f,c
  3429   0031DE  220F               	addwfc	(___aldiv@quotient+3)^0,f,c
  3430   0031E0                     l5083:
  3431   0031E0  C00C  F002         	movff	___aldiv@quotient,?___aldiv
  3432   0031E4  C00D  F003         	movff	___aldiv@quotient+1,?___aldiv+1
  3433   0031E8  C00E  F004         	movff	___aldiv@quotient+2,?___aldiv+2
  3434   0031EC  C00F  F005         	movff	___aldiv@quotient+3,?___aldiv+3
  3435   0031F0  0012               	return		;funcret
  3436   0031F2                     __end_of___aldiv:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _UART_main *****************
  3440 ;; Defined at:
  3441 ;;		line 10 in file "UART.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  uvod           90    0[BANK0 ] unsigned char [90]
  3446 ;;  text           30   90[BANK0 ] unsigned char [30]
  3447 ;;  idx             1  121[BANK0 ] unsigned char 
  3448 ;;  flag            1  120[BANK0 ] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Locals:         0     122       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Totals:         0     122       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;Total ram usage:      122 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; Hardware stack levels required when called: 3
  3465 ;; This function calls:
  3466 ;;		_LCD_ShowString
  3467 ;;		_UART_Init
  3468 ;;		_memset
  3469 ;;		_uart_write
  3470 ;;		_uart_write_norm
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text4
  3477   0033FE                     __ptext4:
  3478                           	callstack 0
  3479   0033FE                     _UART_main:
  3480                           	callstack 27
  3481   0033FE                     
  3482                           ;UART.c: 12:     UART_Init();
  3483   0033FE  EC12  F022         	call	_UART_Init	;wreg free
  3484   003402                     
  3485                           ;UART.c: 14:     LCD_ShowString(1,"      UART       ");
  3486   003402  0E0E               	movlw	low STR_34
  3487   003404  6E03               	movwf	LCD_ShowString@textData^0,c
  3488   003406  0EFF               	movlw	high STR_34
  3489   003408  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  3490   00340A  0E01               	movlw	1
  3491   00340C  ECF2  F01C         	call	_LCD_ShowString
  3492   003410                     
  3493                           ;UART.c: 15:     LCD_ShowString(2," Otoceni zpravy  ");
  3494   003410  0E20               	movlw	low STR_35
  3495   003412  6E03               	movwf	LCD_ShowString@textData^0,c
  3496   003414  0EFF               	movlw	high STR_35
  3497   003416  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  3498   003418  0E02               	movlw	2
  3499   00341A  ECF2  F01C         	call	_LCD_ShowString
  3500   00341E                     
  3501                           ;UART.c: 17:     char text[30];;UART.c: 18:     char idx = 0;
  3502   00341E  0E00               	movlw	0
  3503   003420  0100               	movlb	0	; () banked
  3504   003422  6FD9               	movwf	UART_main@idx& (0+255),b
  3505   003424                     
  3506                           ; BSR set to: 0
  3507                           ;UART.c: 19:     char flag = 0;
  3508   003424  0E00               	movlw	0
  3509   003426  6FD8               	movwf	UART_main@flag& (0+255),b
  3510   003428                     
  3511                           ; BSR set to: 0
  3512                           ;UART.c: 21:     char uvod[90] = "Periferie UART posle zpravu, o maximalni delce 30 znak
      +                          u, zpet v opacnem poradi.\n";
  3513   003428  EE21  F000         	lfsr	2,UART_main@F6213
  3514   00342C  EE10  F060         	lfsr	1,UART_main@uvod
  3515   003430  0E59               	movlw	89
  3516   003432                     u5641:
  3517   003432  CFDB FFE3          	movff	plusw2,plusw1
  3518   003436  06E8               	decf	wreg,f,c
  3519   003438  E2FC               	bc	u5641
  3520   00343A                     
  3521                           ; BSR set to: 0
  3522                           ;UART.c: 23:     uart_write_norm(&uvod, 90);
  3523   00343A  0E60               	movlw	low UART_main@uvod
  3524   00343C  6E03               	movwf	uart_write_norm@text^0,c
  3525   00343E  0E00               	movlw	high UART_main@uvod
  3526   003440  6E04               	movwf	(uart_write_norm@text+1)^0,c
  3527   003442  0E00               	movlw	0
  3528   003444  6E06               	movwf	(uart_write_norm@len+1)^0,c
  3529   003446  0E5A               	movlw	90
  3530   003448  6E05               	movwf	uart_write_norm@len^0,c
  3531   00344A  ECAF  F01E         	call	_uart_write_norm	;wreg free
  3532   00344E                     l5217:
  3533                           
  3534                           ;UART.c: 28:         if(RC1IF){
  3535   00344E  AA9E               	btfss	3998,5,c	;volatile
  3536   003450  EF2C  F01A         	goto	u5651
  3537   003454  EF2E  F01A         	goto	u5650
  3538   003458                     u5651:
  3539   003458  EF50  F01A         	goto	l5231
  3540   00345C                     u5650:
  3541   00345C                     
  3542                           ;UART.c: 29:             if(RCREG1 == '\n'){
  3543   00345C  0E0A               	movlw	10
  3544   00345E  18AE               	xorwf	174,w,c	;volatile
  3545   003460  A4D8               	btfss	status,2,c
  3546   003462  EF35  F01A         	goto	u5661
  3547   003466  EF37  F01A         	goto	u5660
  3548   00346A                     u5661:
  3549   00346A  EF46  F01A         	goto	l5227
  3550   00346E                     u5660:
  3551   00346E                     
  3552                           ;UART.c: 30:                 text[idx] = '\n';
  3553   00346E  0EBA               	movlw	low UART_main@text
  3554   003470  0100               	movlb	0	; () banked
  3555   003472  25D9               	addwf	UART_main@idx& (0+255),w,b
  3556   003474  6ED9               	movwf	fsr2l,c
  3557   003476  6ADA               	clrf	fsr2h,c
  3558   003478  0E00               	movlw	high UART_main@text
  3559   00347A  22DA               	addwfc	fsr2h,f,c
  3560   00347C  0E0A               	movlw	10
  3561   00347E  6EDF               	movwf	indf2,c
  3562   003480                     
  3563                           ; BSR set to: 0
  3564                           ;UART.c: 31:                 idx = 0;
  3565   003480  0E00               	movlw	0
  3566   003482  6FD9               	movwf	UART_main@idx& (0+255),b
  3567   003484                     
  3568                           ; BSR set to: 0
  3569                           ;UART.c: 32:                 flag = 1;
  3570   003484  0E01               	movlw	1
  3571   003486  6FD8               	movwf	UART_main@flag& (0+255),b
  3572                           
  3573                           ;UART.c: 33:             }
  3574   003488  EF50  F01A         	goto	l5231
  3575   00348C                     l5227:
  3576                           
  3577                           ;UART.c: 35:                 text[idx] = RCREG1;
  3578   00348C  0EBA               	movlw	low UART_main@text
  3579   00348E  0100               	movlb	0	; () banked
  3580   003490  25D9               	addwf	UART_main@idx& (0+255),w,b
  3581   003492  6ED9               	movwf	fsr2l,c
  3582   003494  6ADA               	clrf	fsr2h,c
  3583   003496  0E00               	movlw	high UART_main@text
  3584   003498  22DA               	addwfc	fsr2h,f,c
  3585   00349A  CFAE FFDF          	movff	4014,indf2	;volatile
  3586   00349E                     
  3587                           ; BSR set to: 0
  3588                           ;UART.c: 36:                 idx++;
  3589   00349E  2BD9               	incf	UART_main@idx& (0+255),f,b
  3590   0034A0                     l5231:
  3591                           
  3592                           ;UART.c: 41:         if(flag){
  3593   0034A0  0100               	movlb	0	; () banked
  3594   0034A2  51D8               	movf	UART_main@flag& (0+255),w,b
  3595   0034A4  B4D8               	btfsc	status,2,c
  3596   0034A6  EF57  F01A         	goto	u5671
  3597   0034AA  EF59  F01A         	goto	u5670
  3598   0034AE                     u5671:
  3599   0034AE  EF74  F01A         	goto	l5237
  3600   0034B2                     u5670:
  3601   0034B2                     
  3602                           ; BSR set to: 0
  3603                           ;UART.c: 42:             uart_write(&text,30);
  3604   0034B2  0EBA               	movlw	low UART_main@text
  3605   0034B4  6E03               	movwf	uart_write@text^0,c
  3606   0034B6  0E00               	movlw	high UART_main@text
  3607   0034B8  6E04               	movwf	(uart_write@text+1)^0,c
  3608   0034BA  0E00               	movlw	0
  3609   0034BC  6E06               	movwf	(uart_write@len+1)^0,c
  3610   0034BE  0E1E               	movlw	30
  3611   0034C0  6E05               	movwf	uart_write@len^0,c
  3612   0034C2  ECF8  F01D         	call	_uart_write	;wreg free
  3613                           
  3614                           ;UART.c: 43:             memset(text, 0, sizeof text);
  3615   0034C6  0EBA               	movlw	low UART_main@text
  3616   0034C8  6E02               	movwf	memset@dest^0,c
  3617   0034CA  0E00               	movlw	high UART_main@text
  3618   0034CC  6E03               	movwf	(memset@dest+1)^0,c
  3619   0034CE  0E00               	movlw	0
  3620   0034D0  6E05               	movwf	(memset@c+1)^0,c
  3621   0034D2  0E00               	movlw	0
  3622   0034D4  6E04               	movwf	memset@c^0,c
  3623   0034D6  0E00               	movlw	0
  3624   0034D8  6E07               	movwf	(memset@n+1)^0,c
  3625   0034DA  0E1E               	movlw	30
  3626   0034DC  6E06               	movwf	memset@n^0,c
  3627   0034DE  EC31  F017         	call	_memset	;wreg free
  3628   0034E2                     
  3629                           ;UART.c: 44:             flag = 0;
  3630   0034E2  0E00               	movlw	0
  3631   0034E4  0100               	movlb	0	; () banked
  3632   0034E6  6FD8               	movwf	UART_main@flag& (0+255),b
  3633   0034E8                     l5237:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;UART.c: 47:         if(buttons.btn4_state){
  3637   0034E8  51F7               	movf	(_buttons+7)& (0+255),w,b	;volatile
  3638   0034EA  B4D8               	btfsc	status,2,c
  3639   0034EC  EF7A  F01A         	goto	u5681
  3640   0034F0  EF7C  F01A         	goto	u5680
  3641   0034F4                     u5681:
  3642   0034F4  EF27  F01A         	goto	l5217
  3643   0034F8                     u5680:
  3644   0034F8                     
  3645                           ; BSR set to: 0
  3646                           ;UART.c: 48:             buttons.btn4_state = 0;
  3647   0034F8  0E00               	movlw	0
  3648   0034FA  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
  3649   0034FC                     
  3650                           ; BSR set to: 0
  3651   0034FC  0012               	return		;funcret
  3652   0034FE                     __end_of_UART_main:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _uart_write_norm *****************
  3656 ;; Defined at:
  3657 ;;		line 73 in file "UART.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  text            2    2[COMRAM] PTR unsigned char 
  3660 ;;		 -> UART_main@uvod(90), 
  3661 ;;  len             2    4[COMRAM] int 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  i               2    7[COMRAM] int 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;Total ram usage:        7 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 2
  3680 ;; This function calls:
  3681 ;;		_putch
  3682 ;; This function is called by:
  3683 ;;		_UART_main
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text5
  3688   003D5E                     __ptext5:
  3689                           	callstack 0
  3690   003D5E                     _uart_write_norm:
  3691                           	callstack 27
  3692   003D5E                     
  3693                           ;UART.c: 74:     int i;;UART.c: 75:     for(i = 0; i <= len; i++){
  3694   003D5E  0E00               	movlw	0
  3695   003D60  6E09               	movwf	(uart_write_norm@i+1)^0,c
  3696   003D62  0E00               	movlw	0
  3697   003D64  6E08               	movwf	uart_write_norm@i^0,c
  3698   003D66  EFDA  F01E         	goto	l4987
  3699   003D6A                     l4975:
  3700                           
  3701                           ;UART.c: 76:         if(text[i] == '\n'){
  3702   003D6A  5008               	movf	uart_write_norm@i^0,w,c
  3703   003D6C  2403               	addwf	uart_write_norm@text^0,w,c
  3704   003D6E  6ED9               	movwf	fsr2l,c
  3705   003D70  5009               	movf	(uart_write_norm@i+1)^0,w,c
  3706   003D72  2004               	addwfc	(uart_write_norm@text+1)^0,w,c
  3707   003D74  6EDA               	movwf	fsr2h,c
  3708   003D76  0E0A               	movlw	10
  3709   003D78  18DE               	xorwf	postinc2,w,c
  3710   003D7A  A4D8               	btfss	status,2,c
  3711   003D7C  EFC2  F01E         	goto	u5321
  3712   003D80  EFC4  F01E         	goto	u5320
  3713   003D84                     u5321:
  3714   003D84  EFCF  F01E         	goto	l4983
  3715   003D88                     u5320:
  3716   003D88                     
  3717                           ;UART.c: 77:             putch(text[i]);
  3718   003D88  5008               	movf	uart_write_norm@i^0,w,c
  3719   003D8A  2403               	addwf	uart_write_norm@text^0,w,c
  3720   003D8C  6ED9               	movwf	fsr2l,c
  3721   003D8E  5009               	movf	(uart_write_norm@i+1)^0,w,c
  3722   003D90  2004               	addwfc	(uart_write_norm@text+1)^0,w,c
  3723   003D92  6EDA               	movwf	fsr2h,c
  3724   003D94  50DF               	movf	indf2,w,c
  3725   003D96  EC1E  F022         	call	_putch
  3726   003D9A  EFE9  F01E         	goto	l552
  3727   003D9E                     l4983:
  3728                           
  3729                           ;UART.c: 81:             putch(text[i]);
  3730   003D9E  5008               	movf	uart_write_norm@i^0,w,c
  3731   003DA0  2403               	addwf	uart_write_norm@text^0,w,c
  3732   003DA2  6ED9               	movwf	fsr2l,c
  3733   003DA4  5009               	movf	(uart_write_norm@i+1)^0,w,c
  3734   003DA6  2004               	addwfc	(uart_write_norm@text+1)^0,w,c
  3735   003DA8  6EDA               	movwf	fsr2h,c
  3736   003DAA  50DF               	movf	indf2,w,c
  3737   003DAC  EC1E  F022         	call	_putch
  3738   003DB0                     
  3739                           ;UART.c: 83:     }
  3740   003DB0  4A08               	infsnz	uart_write_norm@i^0,f,c
  3741   003DB2  2A09               	incf	(uart_write_norm@i+1)^0,f,c
  3742   003DB4                     l4987:
  3743   003DB4  5008               	movf	uart_write_norm@i^0,w,c
  3744   003DB6  5C05               	subwf	uart_write_norm@len^0,w,c
  3745   003DB8  5006               	movf	(uart_write_norm@len+1)^0,w,c
  3746   003DBA  0A80               	xorlw	128
  3747   003DBC  6E07               	movwf	??_uart_write_norm^0,c
  3748   003DBE  5009               	movf	(uart_write_norm@i+1)^0,w,c
  3749   003DC0  0A80               	xorlw	128
  3750   003DC2  5807               	subwfb	??_uart_write_norm^0,w,c
  3751   003DC4  B0D8               	btfsc	status,0,c
  3752   003DC6  EFE7  F01E         	goto	u5331
  3753   003DCA  EFE9  F01E         	goto	u5330
  3754   003DCE                     u5331:
  3755   003DCE  EFB5  F01E         	goto	l4975
  3756   003DD2                     u5330:
  3757   003DD2                     l552:
  3758   003DD2  0012               	return		;funcret
  3759   003DD4                     __end_of_uart_write_norm:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _uart_write *****************
  3763 ;; Defined at:
  3764 ;;		line 86 in file "UART.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  text            2    2[COMRAM] PTR unsigned char 
  3767 ;;		 -> UART_main@text(30), 
  3768 ;;  len             2    4[COMRAM] int 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  i               2    8[COMRAM] int 
  3771 ;;  flag            1    7[COMRAM] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        8 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 2
  3788 ;; This function calls:
  3789 ;;		_putch
  3790 ;; This function is called by:
  3791 ;;		_UART_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text6
  3796   003BF0                     __ptext6:
  3797                           	callstack 0
  3798   003BF0                     _uart_write:
  3799                           	callstack 27
  3800   003BF0                     
  3801                           ;UART.c: 87:     int i;;UART.c: 88:     char flag = 0;
  3802   003BF0  0E00               	movlw	0
  3803   003BF2  6E08               	movwf	uart_write@flag^0,c
  3804   003BF4                     
  3805                           ;UART.c: 89:     for(i = len; i >= 0; i--){
  3806   003BF4  C005  F009         	movff	uart_write@len,uart_write@i
  3807   003BF8  C006  F00A         	movff	uart_write@len+1,uart_write@i+1
  3808   003BFC                     l4993:
  3809   003BFC  BE0A               	btfsc	(uart_write@i+1)^0,7,c
  3810   003BFE  EF05  F01E         	goto	u5340
  3811   003C02  EF03  F01E         	goto	u5341
  3812   003C06                     u5341:
  3813   003C06  EF07  F01E         	goto	l4997
  3814   003C0A                     u5340:
  3815   003C0A  EF30  F01E         	goto	l5009
  3816   003C0E                     l4997:
  3817                           
  3818                           ;UART.c: 90:         if(text[i] == '\n'){
  3819   003C0E  5009               	movf	uart_write@i^0,w,c
  3820   003C10  2403               	addwf	uart_write@text^0,w,c
  3821   003C12  6ED9               	movwf	fsr2l,c
  3822   003C14  500A               	movf	(uart_write@i+1)^0,w,c
  3823   003C16  2004               	addwfc	(uart_write@text+1)^0,w,c
  3824   003C18  6EDA               	movwf	fsr2h,c
  3825   003C1A  0E0A               	movlw	10
  3826   003C1C  18DE               	xorwf	postinc2,w,c
  3827   003C1E  A4D8               	btfss	status,2,c
  3828   003C20  EF14  F01E         	goto	u5351
  3829   003C24  EF16  F01E         	goto	u5350
  3830   003C28                     u5351:
  3831   003C28  EF1A  F01E         	goto	l5001
  3832   003C2C                     u5350:
  3833   003C2C                     
  3834                           ;UART.c: 91:             flag = 1;
  3835   003C2C  0E01               	movlw	1
  3836   003C2E  6E08               	movwf	uart_write@flag^0,c
  3837                           
  3838                           ;UART.c: 92:         }
  3839   003C30  EF2B  F01E         	goto	l5005
  3840   003C34                     l5001:
  3841   003C34  5008               	movf	uart_write@flag^0,w,c
  3842   003C36  B4D8               	btfsc	status,2,c
  3843   003C38  EF20  F01E         	goto	u5361
  3844   003C3C  EF22  F01E         	goto	u5360
  3845   003C40                     u5361:
  3846   003C40  EF2B  F01E         	goto	l5005
  3847   003C44                     u5360:
  3848   003C44                     
  3849                           ;UART.c: 94:             putch(text[i]);
  3850   003C44  5009               	movf	uart_write@i^0,w,c
  3851   003C46  2403               	addwf	uart_write@text^0,w,c
  3852   003C48  6ED9               	movwf	fsr2l,c
  3853   003C4A  500A               	movf	(uart_write@i+1)^0,w,c
  3854   003C4C  2004               	addwfc	(uart_write@text+1)^0,w,c
  3855   003C4E  6EDA               	movwf	fsr2h,c
  3856   003C50  50DF               	movf	indf2,w,c
  3857   003C52  EC1E  F022         	call	_putch
  3858   003C56                     l5005:
  3859                           
  3860                           ;UART.c: 96:     }
  3861   003C56  0609               	decf	uart_write@i^0,f,c
  3862   003C58  A0D8               	btfss	status,0,c
  3863   003C5A  060A               	decf	(uart_write@i+1)^0,f,c
  3864   003C5C  EFFE  F01D         	goto	l4993
  3865   003C60                     l5009:
  3866                           
  3867                           ;UART.c: 97:     putch('\n');
  3868   003C60  0E0A               	movlw	10
  3869   003C62  EC1E  F022         	call	_putch
  3870                           
  3871                           ;UART.c: 98:     putch('\n');
  3872   003C66  0E0A               	movlw	10
  3873   003C68  EC1E  F022         	call	_putch
  3874   003C6C  0012               	return		;funcret
  3875   003C6E                     __end_of_uart_write:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _memset *****************
  3879 ;; Defined at:
  3880 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  dest            2    1[COMRAM] PTR void 
  3883 ;;		 -> UART_main@text(30), 
  3884 ;;  c               2    3[COMRAM] int 
  3885 ;;  n               2    5[COMRAM] unsigned int 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  s               2   11[COMRAM] PTR unsigned char 
  3888 ;;		 -> UART_main@text(30), 
  3889 ;;  k               2    9[COMRAM] unsigned int 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  2    1[COMRAM] PTR void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3899 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;Total ram usage:       12 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 1
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_UART_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text7
  3914   002E62                     __ptext7:
  3915                           	callstack 0
  3916   002E62                     _memset:
  3917                           	callstack 28
  3918   002E62  C002  F00C         	movff	memset@dest,memset@s
  3919   002E66  C003  F00D         	movff	memset@dest+1,memset@s+1
  3920   002E6A  5006               	movf	memset@n^0,w,c
  3921   002E6C  1007               	iorwf	(memset@n+1)^0,w,c
  3922   002E6E  A4D8               	btfss	status,2,c
  3923   002E70  EF3C  F017         	goto	u5371
  3924   002E74  EF3E  F017         	goto	u5370
  3925   002E78                     u5371:
  3926   002E78  EF40  F017         	goto	l5015
  3927   002E7C                     u5370:
  3928   002E7C  EFEB  F017         	goto	l1246
  3929   002E80                     l5015:
  3930   002E80  C00C  FFD9         	movff	memset@s,fsr2l
  3931   002E84  C00D  FFDA         	movff	memset@s+1,fsr2h
  3932   002E88  C004  FFDF         	movff	memset@c,indf2
  3933   002E8C  5006               	movf	memset@n^0,w,c
  3934   002E8E  240C               	addwf	memset@s^0,w,c
  3935   002E90  6E08               	movwf	??_memset^0,c
  3936   002E92  5007               	movf	(memset@n+1)^0,w,c
  3937   002E94  200D               	addwfc	(memset@s+1)^0,w,c
  3938   002E96  6E09               	movwf	(??_memset+1)^0,c
  3939   002E98  0EFF               	movlw	255
  3940   002E9A  2408               	addwf	??_memset^0,w,c
  3941   002E9C  6ED9               	movwf	fsr2l,c
  3942   002E9E  0EFF               	movlw	255
  3943   002EA0  2009               	addwfc	(??_memset+1)^0,w,c
  3944   002EA2  6EDA               	movwf	fsr2h,c
  3945   002EA4  C004  FFDF         	movff	memset@c,indf2
  3946   002EA8  5007               	movf	(memset@n+1)^0,w,c
  3947   002EAA  E107               	bnz	u5381
  3948   002EAC  0E03               	movlw	3
  3949   002EAE  5C06               	subwf	memset@n^0,w,c
  3950   002EB0  B0D8               	btfsc	status,0,c
  3951   002EB2  EF5D  F017         	goto	u5381
  3952   002EB6  EF5F  F017         	goto	u5380
  3953   002EBA                     u5381:
  3954   002EBA  EF61  F017         	goto	l5021
  3955   002EBE                     u5380:
  3956   002EBE  EFEB  F017         	goto	l1246
  3957   002EC2                     l5021:
  3958   002EC2  EE20 F001          	lfsr	2,1
  3959   002EC6  500C               	movf	memset@s^0,w,c
  3960   002EC8  26D9               	addwf	fsr2l,f,c
  3961   002ECA  500D               	movf	(memset@s+1)^0,w,c
  3962   002ECC  22DA               	addwfc	fsr2h,f,c
  3963   002ECE  C004  FFDF         	movff	memset@c,indf2
  3964   002ED2  EE20 F002          	lfsr	2,2
  3965   002ED6  500C               	movf	memset@s^0,w,c
  3966   002ED8  26D9               	addwf	fsr2l,f,c
  3967   002EDA  500D               	movf	(memset@s+1)^0,w,c
  3968   002EDC  22DA               	addwfc	fsr2h,f,c
  3969   002EDE  C004  FFDF         	movff	memset@c,indf2
  3970   002EE2  5006               	movf	memset@n^0,w,c
  3971   002EE4  240C               	addwf	memset@s^0,w,c
  3972   002EE6  6E08               	movwf	??_memset^0,c
  3973   002EE8  5007               	movf	(memset@n+1)^0,w,c
  3974   002EEA  200D               	addwfc	(memset@s+1)^0,w,c
  3975   002EEC  6E09               	movwf	(??_memset+1)^0,c
  3976   002EEE  0EFE               	movlw	254
  3977   002EF0  2408               	addwf	??_memset^0,w,c
  3978   002EF2  6ED9               	movwf	fsr2l,c
  3979   002EF4  0EFF               	movlw	255
  3980   002EF6  2009               	addwfc	(??_memset+1)^0,w,c
  3981   002EF8  6EDA               	movwf	fsr2h,c
  3982   002EFA  C004  FFDF         	movff	memset@c,indf2
  3983   002EFE  5006               	movf	memset@n^0,w,c
  3984   002F00  240C               	addwf	memset@s^0,w,c
  3985   002F02  6E08               	movwf	??_memset^0,c
  3986   002F04  5007               	movf	(memset@n+1)^0,w,c
  3987   002F06  200D               	addwfc	(memset@s+1)^0,w,c
  3988   002F08  6E09               	movwf	(??_memset+1)^0,c
  3989   002F0A  0EFD               	movlw	253
  3990   002F0C  2408               	addwf	??_memset^0,w,c
  3991   002F0E  6ED9               	movwf	fsr2l,c
  3992   002F10  0EFF               	movlw	255
  3993   002F12  2009               	addwfc	(??_memset+1)^0,w,c
  3994   002F14  6EDA               	movwf	fsr2h,c
  3995   002F16  C004  FFDF         	movff	memset@c,indf2
  3996   002F1A  5007               	movf	(memset@n+1)^0,w,c
  3997   002F1C  E107               	bnz	u5391
  3998   002F1E  0E07               	movlw	7
  3999   002F20  5C06               	subwf	memset@n^0,w,c
  4000   002F22  B0D8               	btfsc	status,0,c
  4001   002F24  EF96  F017         	goto	u5391
  4002   002F28  EF98  F017         	goto	u5390
  4003   002F2C                     u5391:
  4004   002F2C  EF9A  F017         	goto	l5027
  4005   002F30                     u5390:
  4006   002F30  EFEB  F017         	goto	l1246
  4007   002F34                     l5027:
  4008   002F34  EE20 F003          	lfsr	2,3
  4009   002F38  500C               	movf	memset@s^0,w,c
  4010   002F3A  26D9               	addwf	fsr2l,f,c
  4011   002F3C  500D               	movf	(memset@s+1)^0,w,c
  4012   002F3E  22DA               	addwfc	fsr2h,f,c
  4013   002F40  C004  FFDF         	movff	memset@c,indf2
  4014   002F44  5006               	movf	memset@n^0,w,c
  4015   002F46  240C               	addwf	memset@s^0,w,c
  4016   002F48  6E08               	movwf	??_memset^0,c
  4017   002F4A  5007               	movf	(memset@n+1)^0,w,c
  4018   002F4C  200D               	addwfc	(memset@s+1)^0,w,c
  4019   002F4E  6E09               	movwf	(??_memset+1)^0,c
  4020   002F50  0EFC               	movlw	252
  4021   002F52  2408               	addwf	??_memset^0,w,c
  4022   002F54  6ED9               	movwf	fsr2l,c
  4023   002F56  0EFF               	movlw	255
  4024   002F58  2009               	addwfc	(??_memset+1)^0,w,c
  4025   002F5A  6EDA               	movwf	fsr2h,c
  4026   002F5C  C004  FFDF         	movff	memset@c,indf2
  4027   002F60  5007               	movf	(memset@n+1)^0,w,c
  4028   002F62  E107               	bnz	u5401
  4029   002F64  0E09               	movlw	9
  4030   002F66  5C06               	subwf	memset@n^0,w,c
  4031   002F68  B0D8               	btfsc	status,0,c
  4032   002F6A  EFB9  F017         	goto	u5401
  4033   002F6E  EFBB  F017         	goto	u5400
  4034   002F72                     u5401:
  4035   002F72  EFBD  F017         	goto	l5033
  4036   002F76                     u5400:
  4037   002F76  EFEB  F017         	goto	l1246
  4038   002F7A                     l5033:
  4039   002F7A  C00C  F008         	movff	memset@s,??_memset
  4040   002F7E  C00D  F009         	movff	memset@s+1,??_memset+1
  4041   002F82  1E08               	comf	??_memset^0,f,c
  4042   002F84  1E09               	comf	(??_memset+1)^0,f,c
  4043   002F86  4A08               	infsnz	??_memset^0,f,c
  4044   002F88  2A09               	incf	(??_memset+1)^0,f,c
  4045   002F8A  0E03               	movlw	3
  4046   002F8C  1408               	andwf	??_memset^0,w,c
  4047   002F8E  6E0A               	movwf	memset@k^0,c
  4048   002F90  6A0B               	clrf	(memset@k+1)^0,c
  4049   002F92  500A               	movf	memset@k^0,w,c
  4050   002F94  260C               	addwf	memset@s^0,f,c
  4051   002F96  500B               	movf	(memset@k+1)^0,w,c
  4052   002F98  220D               	addwfc	(memset@s+1)^0,f,c
  4053   002F9A  500A               	movf	memset@k^0,w,c
  4054   002F9C  5E06               	subwf	memset@n^0,f,c
  4055   002F9E  500B               	movf	(memset@k+1)^0,w,c
  4056   002FA0  5A07               	subwfb	(memset@n+1)^0,f,c
  4057   002FA2  0EFC               	movlw	252
  4058   002FA4  1606               	andwf	memset@n^0,f,c
  4059   002FA6  0EFF               	movlw	255
  4060   002FA8  1607               	andwf	(memset@n+1)^0,f,c
  4061   002FAA  EFE2  F017         	goto	l5041
  4062   002FAE                     l5035:
  4063   002FAE  C00C  FFD9         	movff	memset@s,fsr2l
  4064   002FB2  C00D  FFDA         	movff	memset@s+1,fsr2h
  4065   002FB6  C004  FFDF         	movff	memset@c,indf2
  4066   002FBA  0606               	decf	memset@n^0,f,c
  4067   002FBC  A0D8               	btfss	status,0,c
  4068   002FBE  0607               	decf	(memset@n+1)^0,f,c
  4069   002FC0  4A0C               	infsnz	memset@s^0,f,c
  4070   002FC2  2A0D               	incf	(memset@s+1)^0,f,c
  4071   002FC4                     l5041:
  4072   002FC4  5006               	movf	memset@n^0,w,c
  4073   002FC6  1007               	iorwf	(memset@n+1)^0,w,c
  4074   002FC8  A4D8               	btfss	status,2,c
  4075   002FCA  EFE9  F017         	goto	u5411
  4076   002FCE  EFEB  F017         	goto	u5410
  4077   002FD2                     u5411:
  4078   002FD2  EFD7  F017         	goto	l5035
  4079   002FD6                     u5410:
  4080   002FD6                     l1246:
  4081   002FD6  0012               	return		;funcret
  4082   002FD8                     __end_of_memset:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _UART_Init *****************
  4086 ;; Defined at:
  4087 ;;		line 56 in file "UART.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;Total ram usage:        0 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_UART_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text8
  4116   004424                     __ptext8:
  4117                           	callstack 0
  4118   004424                     _UART_Init:
  4119                           	callstack 28
  4120   004424                     
  4121                           ;UART.c: 58:     ANSELC = 0x00;
  4122   004424  0E00               	movlw	0
  4123   004426  010F               	movlb	15	; () banked
  4124   004428  6F3A               	movwf	58,b	;volatile
  4125   00442A                     
  4126                           ; BSR set to: 15
  4127                           ;UART.c: 60:     TRISCbits.TRISC6 = 1;
  4128   00442A  8C94               	bsf	148,6,c	;volatile
  4129   00442C                     
  4130                           ; BSR set to: 15
  4131                           ;UART.c: 61:     TRISCbits.TRISC7 = 1;
  4132   00442C  8E94               	bsf	148,7,c	;volatile
  4133                           
  4134                           ;UART.c: 63:     SPBRG1 = 25;
  4135   00442E  0E19               	movlw	25
  4136   004430  6EAF               	movwf	175,c	;volatile
  4137   004432                     
  4138                           ; BSR set to: 15
  4139                           ;UART.c: 65:     TXSTA1bits.SYNC = 0;
  4140   004432  98AC               	bcf	172,4,c	;volatile
  4141   004434                     
  4142                           ; BSR set to: 15
  4143                           ;UART.c: 66:     TXSTA1bits.TXEN = 1;
  4144   004434  8AAC               	bsf	172,5,c	;volatile
  4145   004436                     
  4146                           ; BSR set to: 15
  4147                           ;UART.c: 67:     RCSTA1bits.SPEN = 1;
  4148   004436  8EAB               	bsf	171,7,c	;volatile
  4149   004438                     
  4150                           ; BSR set to: 15
  4151                           ;UART.c: 68:     RCSTA1bits.CREN = 1;
  4152   004438  88AB               	bsf	171,4,c	;volatile
  4153   00443A                     
  4154                           ; BSR set to: 15
  4155   00443A  0012               	return		;funcret
  4156   00443C                     __end_of_UART_Init:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _PWM_main *****************
  4160 ;; Defined at:
  4161 ;;		line 10 in file "PWM.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  txt            17  106[BANK0 ] unsigned char [17]
  4166 ;;  jas             2  125[BANK0 ] int 
  4167 ;;  duty            2  123[BANK0 ] int 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:       21 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 9
  4184 ;; This function calls:
  4185 ;;		_LCD_ShowString
  4186 ;;		_PWM_Init
  4187 ;;		_sprintf
  4188 ;; This function is called by:
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text9
  4194   002FD8                     __ptext9:
  4195                           	callstack 0
  4196   002FD8                     _PWM_main:
  4197                           	callstack 21
  4198   002FD8                     
  4199                           ;PWM.c: 12:     PWM_Init();
  4200   002FD8  EC0D  F021         	call	_PWM_Init	;wreg free
  4201   002FDC                     
  4202                           ;PWM.c: 14:     char txt[17];;PWM.c: 15:     int jas = 0;
  4203   002FDC  0E00               	movlw	0
  4204   002FDE  0100               	movlb	0	; () banked
  4205   002FE0  6FDE               	movwf	(PWM_main@jas+1)& (0+255),b
  4206   002FE2  0E00               	movlw	0
  4207   002FE4  6FDD               	movwf	PWM_main@jas& (0+255),b
  4208   002FE6                     
  4209                           ; BSR set to: 0
  4210                           ;PWM.c: 16:     int duty = 199;
  4211   002FE6  0E00               	movlw	0
  4212   002FE8  6FDC               	movwf	(PWM_main@duty+1)& (0+255),b
  4213   002FEA  0EC7               	movlw	199
  4214   002FEC  6FDB               	movwf	PWM_main@duty& (0+255),b
  4215   002FEE                     
  4216                           ; BSR set to: 0
  4217                           ;PWM.c: 18:     LCD_ShowString(1,"BTN2 prepina jas   ");
  4218   002FEE  0EEC               	movlw	low STR_28
  4219   002FF0  6E03               	movwf	LCD_ShowString@textData^0,c
  4220   002FF2  0EFD               	movlw	high STR_28
  4221   002FF4  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  4222   002FF6  0E01               	movlw	1
  4223   002FF8  ECF2  F01C         	call	_LCD_ShowString
  4224   002FFC                     
  4225                           ;PWM.c: 19:     sprintf(txt,"Jas:  %d perc   ", jas);
  4226   002FFC  0ECA               	movlw	low PWM_main@txt
  4227   002FFE  0100               	movlb	0	; () banked
  4228   003000  6FB4               	movwf	sprintf@s& (0+255),b
  4229   003002  0E00               	movlw	high PWM_main@txt
  4230   003004  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  4231   003006  0EB0               	movlw	low STR_29
  4232   003008  6FB6               	movwf	sprintf@fmt& (0+255),b
  4233   00300A  0EFF               	movlw	high STR_29
  4234   00300C  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  4235   00300E  0E00               	movlw	0
  4236   003010  6FB9               	movwf	(?_sprintf+5)& (0+255),b
  4237   003012  0E00               	movlw	0
  4238   003014  6FB8               	movwf	(?_sprintf+4)& (0+255),b
  4239   003016  EC53  F020         	call	_sprintf	;wreg free
  4240   00301A                     
  4241                           ;PWM.c: 20:     LCD_ShowString(2,txt);
  4242   00301A  0ECA               	movlw	low PWM_main@txt
  4243   00301C  6E03               	movwf	LCD_ShowString@textData^0,c
  4244   00301E  0E00               	movlw	high PWM_main@txt
  4245   003020  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  4246   003022  0E02               	movlw	2
  4247   003024  ECF2  F01C         	call	_LCD_ShowString
  4248   003028                     l6429:
  4249                           
  4250                           ;PWM.c: 24:         if(buttons.btn2_state){
  4251   003028  0100               	movlb	0	; () banked
  4252   00302A  51F5               	movf	(_buttons+5)& (0+255),w,b	;volatile
  4253   00302C  B4D8               	btfsc	status,2,c
  4254   00302E  EF1B  F018         	goto	u7191
  4255   003032  EF1D  F018         	goto	u7190
  4256   003036                     u7191:
  4257   003036  EF63  F018         	goto	l6449
  4258   00303A                     u7190:
  4259   00303A                     
  4260                           ; BSR set to: 0
  4261                           ;PWM.c: 25:             buttons.btn2_state = 0;
  4262   00303A  0E00               	movlw	0
  4263   00303C  6FF5               	movwf	(_buttons+5)& (0+255),b	;volatile
  4264   00303E                     
  4265                           ; BSR set to: 0
  4266                           ;PWM.c: 26:             jas = jas + 20;
  4267   00303E  0E14               	movlw	20
  4268   003040  25DD               	addwf	PWM_main@jas& (0+255),w,b
  4269   003042  6FDD               	movwf	PWM_main@jas& (0+255),b
  4270   003044  0E00               	movlw	0
  4271   003046  21DE               	addwfc	(PWM_main@jas+1)& (0+255),w,b
  4272   003048  6FDE               	movwf	(PWM_main@jas+1)& (0+255),b
  4273   00304A                     
  4274                           ; BSR set to: 0
  4275                           ;PWM.c: 27:             duty = duty - 39;
  4276   00304A  0ED9               	movlw	217
  4277   00304C  25DB               	addwf	PWM_main@duty& (0+255),w,b
  4278   00304E  6FDB               	movwf	PWM_main@duty& (0+255),b
  4279   003050  0EFF               	movlw	255
  4280   003052  21DC               	addwfc	(PWM_main@duty+1)& (0+255),w,b
  4281   003054  6FDC               	movwf	(PWM_main@duty+1)& (0+255),b
  4282   003056                     
  4283                           ; BSR set to: 0
  4284                           ;PWM.c: 28:             if(jas > 100){
  4285   003056  BFDE               	btfsc	(PWM_main@jas+1)& (0+255),7,b
  4286   003058  EF37  F018         	goto	u7201
  4287   00305C  51DE               	movf	(PWM_main@jas+1)& (0+255),w,b
  4288   00305E  E109               	bnz	u7200
  4289   003060  0E65               	movlw	101
  4290   003062  5DDD               	subwf	PWM_main@jas& (0+255),w,b
  4291   003064  A0D8               	btfss	status,0,c
  4292   003066  EF37  F018         	goto	u7201
  4293   00306A  EF39  F018         	goto	u7200
  4294   00306E                     u7201:
  4295   00306E  EF3D  F018         	goto	l6441
  4296   003072                     u7200:
  4297   003072                     
  4298                           ; BSR set to: 0
  4299                           ;PWM.c: 29:                 jas = 0;
  4300   003072  0E00               	movlw	0
  4301   003074  6FDE               	movwf	(PWM_main@jas+1)& (0+255),b
  4302   003076  0E00               	movlw	0
  4303   003078  6FDD               	movwf	PWM_main@jas& (0+255),b
  4304   00307A                     l6441:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;PWM.c: 32:             if(duty < 0){
  4308   00307A  BFDC               	btfsc	(PWM_main@duty+1)& (0+255),7,b
  4309   00307C  EF44  F018         	goto	u7210
  4310   003080  EF42  F018         	goto	u7211
  4311   003084                     u7211:
  4312   003084  EF4C  F018         	goto	l431
  4313   003088                     u7210:
  4314   003088                     
  4315                           ; BSR set to: 0
  4316                           ;PWM.c: 33:                 CCPR1L = 199;
  4317   003088  0EC7               	movlw	199
  4318   00308A  6EBE               	movwf	190,c	;volatile
  4319                           
  4320                           ;PWM.c: 34:                 duty = 199;
  4321   00308C  0E00               	movlw	0
  4322   00308E  6FDC               	movwf	(PWM_main@duty+1)& (0+255),b
  4323   003090  0EC7               	movlw	199
  4324   003092  6FDB               	movwf	PWM_main@duty& (0+255),b
  4325                           
  4326                           ;PWM.c: 35:             }
  4327   003094  EF4E  F018         	goto	l6445
  4328   003098                     l431:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;PWM.c: 37:                 CCPR1L = duty;
  4332   003098  C0DB  FFBE         	movff	PWM_main@duty,4030	;volatile
  4333   00309C                     l6445:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;PWM.c: 39:             sprintf(txt,"Jas:  %d perc   ", jas);
  4337   00309C  0ECA               	movlw	low PWM_main@txt
  4338   00309E  6FB4               	movwf	sprintf@s& (0+255),b
  4339   0030A0  0E00               	movlw	high PWM_main@txt
  4340   0030A2  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  4341   0030A4  0EB0               	movlw	low STR_29
  4342   0030A6  6FB6               	movwf	sprintf@fmt& (0+255),b
  4343   0030A8  0EFF               	movlw	high STR_29
  4344   0030AA  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  4345   0030AC  C0DD  F0B8         	movff	PWM_main@jas,?_sprintf+4
  4346   0030B0  C0DE  F0B9         	movff	PWM_main@jas+1,?_sprintf+5
  4347   0030B4  EC53  F020         	call	_sprintf	;wreg free
  4348   0030B8                     
  4349                           ;PWM.c: 40:             LCD_ShowString(2,txt);
  4350   0030B8  0ECA               	movlw	low PWM_main@txt
  4351   0030BA  6E03               	movwf	LCD_ShowString@textData^0,c
  4352   0030BC  0E00               	movlw	high PWM_main@txt
  4353   0030BE  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  4354   0030C0  0E02               	movlw	2
  4355   0030C2  ECF2  F01C         	call	_LCD_ShowString
  4356   0030C6                     l6449:
  4357                           
  4358                           ;PWM.c: 44:         if(buttons.btn4_state){
  4359   0030C6  0100               	movlb	0	; () banked
  4360   0030C8  51F7               	movf	(_buttons+7)& (0+255),w,b	;volatile
  4361   0030CA  B4D8               	btfsc	status,2,c
  4362   0030CC  EF6A  F018         	goto	u7221
  4363   0030D0  EF6C  F018         	goto	u7220
  4364   0030D4                     u7221:
  4365   0030D4  EF14  F018         	goto	l6429
  4366   0030D8                     u7220:
  4367   0030D8                     
  4368                           ; BSR set to: 0
  4369                           ;PWM.c: 45:             buttons.btn4_state = 0;
  4370   0030D8  0E00               	movlw	0
  4371   0030DA  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
  4372   0030DC                     
  4373                           ; BSR set to: 0
  4374                           ;PWM.c: 46:             TRISDbits.TRISD5 = 0;
  4375   0030DC  9A95               	bcf	149,5,c	;volatile
  4376   0030DE                     
  4377                           ; BSR set to: 0
  4378                           ;PWM.c: 47:             PSTR1CONbits.STR1B = 0;
  4379   0030DE  92B9               	bcf	185,1,c	;volatile
  4380   0030E0                     
  4381                           ; BSR set to: 0
  4382                           ;PWM.c: 48:             TMR4ON = 0;
  4383   0030E0  010F               	movlb	15	; () banked
  4384   0030E2  9551               	bcf	81,2,b	;volatile
  4385   0030E4                     
  4386                           ; BSR set to: 15
  4387   0030E4  0012               	return		;funcret
  4388   0030E6                     __end_of_PWM_main:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _PWM_Init *****************
  4392 ;; Defined at:
  4393 ;;		line 54 in file "PWM.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_PWM_main
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text10
  4422   00421A                     __ptext10:
  4423                           	callstack 0
  4424   00421A                     _PWM_Init:
  4425                           	callstack 28
  4426   00421A                     
  4427                           ;PWM.c: 56:     TRISDbits.TRISD5 = 1;
  4428   00421A  8A95               	bsf	149,5,c	;volatile
  4429                           
  4430                           ;PWM.c: 57:     PSTR1CONbits.STR1A = 0;
  4431   00421C  90B9               	bcf	185,0,c	;volatile
  4432                           
  4433                           ;PWM.c: 58:     PSTR1CONbits.STR1B = 1;
  4434   00421E  82B9               	bsf	185,1,c	;volatile
  4435   004220                     
  4436                           ;PWM.c: 60:     CCPTMRS0bits.C1TSEL = 0b01;
  4437   004220  010F               	movlb	15	; () banked
  4438   004222  5149               	movf	73,w,b	;volatile
  4439   004224  0BFC               	andlw	-4
  4440   004226  0901               	iorlw	1
  4441   004228  6F49               	movwf	73,b	;volatile
  4442                           
  4443                           ;PWM.c: 62:     PR4 = 199;
  4444   00422A  0EC7               	movlw	199
  4445   00422C  6F52               	movwf	82,b	;volatile
  4446                           
  4447                           ;PWM.c: 64:     CCP1CONbits.CCP1M = 0b1100;
  4448   00422E  50BD               	movf	189,w,c	;volatile
  4449   004230  0BF0               	andlw	-16
  4450   004232  090C               	iorlw	12
  4451   004234  6EBD               	movwf	189,c	;volatile
  4452                           
  4453                           ;PWM.c: 65:     CCP1CONbits.P1M = 0b00;
  4454   004236  0E3F               	movlw	-193
  4455   004238  16BD               	andwf	189,f,c	;volatile
  4456                           
  4457                           ;PWM.c: 67:     CCPR1L = 199;
  4458   00423A  0EC7               	movlw	199
  4459   00423C  6EBE               	movwf	190,c	;volatile
  4460                           
  4461                           ;PWM.c: 69:     T4CONbits.T4CKPS = 0b01;
  4462   00423E  5151               	movf	81,w,b	;volatile
  4463   004240  0BFC               	andlw	-4
  4464   004242  0901               	iorlw	1
  4465   004244  6F51               	movwf	81,b	;volatile
  4466   004246                     
  4467                           ; BSR set to: 15
  4468                           ;PWM.c: 70:     TMR4IF = 0;
  4469   004246  907E               	bcf	3966,0,c	;volatile
  4470   004248                     
  4471                           ; BSR set to: 15
  4472                           ;PWM.c: 71:     TMR4ON = 1;
  4473   004248  8551               	bsf	81,2,b	;volatile
  4474   00424A                     l439:
  4475   00424A  A07E               	btfss	3966,0,c	;volatile
  4476   00424C  EF2A  F021         	goto	u5311
  4477   004250  EF2C  F021         	goto	u5310
  4478   004254                     u5311:
  4479   004254  EF25  F021         	goto	l439
  4480   004258                     u5310:
  4481   004258                     
  4482                           ;PWM.c: 75:     TRISDbits.TRISD5 = 0;
  4483   004258  9A95               	bcf	149,5,c	;volatile
  4484   00425A  0012               	return		;funcret
  4485   00425C                     __end_of_PWM_Init:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function _LCD_Init *****************
  4489 ;; Defined at:
  4490 ;;		line 6 in file "lcd.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:        1 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; Hardware stack levels required when called: 2
  4511 ;; This function calls:
  4512 ;;		_LCD_Send
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text11
  4519   0035FC                     __ptext11:
  4520                           	callstack 0
  4521   0035FC                     _LCD_Init:
  4522                           	callstack 28
  4523   0035FC                     
  4524                           ;lcd.c: 8:     ANSELDbits.ANSD0 = 0;
  4525   0035FC  010F               	movlb	15	; () banked
  4526   0035FE  913B               	bcf	59,0,b	;volatile
  4527                           
  4528                           ;lcd.c: 9:     ANSELDbits.ANSD1 = 0;
  4529   003600  933B               	bcf	59,1,b	;volatile
  4530                           
  4531                           ;lcd.c: 11:     TRISDbits.TRISD0 = 1;
  4532   003602  8095               	bsf	149,0,c	;volatile
  4533                           
  4534                           ;lcd.c: 12:     TRISDbits.TRISD1 = 1;
  4535   003604  8295               	bsf	149,1,c	;volatile
  4536                           
  4537                           ;lcd.c: 13:     TRISAbits.TRISA0 = 0;
  4538   003606  9092               	bcf	146,0,c	;volatile
  4539                           
  4540                           ;lcd.c: 14:     LATAbits.LATA0 = 1;
  4541   003608  8089               	bsf	137,0,c	;volatile
  4542   00360A                     
  4543                           ; BSR set to: 15
  4544                           ;lcd.c: 17:     SSP2CON1bits.SSPM = 0b1000;
  4545   00360A  506C               	movf	108,w,c	;volatile
  4546   00360C  0BF0               	andlw	-16
  4547   00360E  0908               	iorlw	8
  4548   003610  6E6C               	movwf	108,c	;volatile
  4549                           
  4550                           ;lcd.c: 18:     SSP2ADD = 19;
  4551   003612  0E13               	movlw	19
  4552   003614  6E6E               	movwf	110,c	;volatile
  4553   003616                     
  4554                           ; BSR set to: 15
  4555                           ;lcd.c: 19:     SSP2CON1bits.SSPEN = 1;
  4556   003616  8A6C               	bsf	108,5,c	;volatile
  4557   003618                     
  4558                           ; BSR set to: 15
  4559                           ;lcd.c: 21:     _delay((unsigned long)((5)*(32E6/4000.0)));
  4560   003618  0E34               	movlw	52
  4561   00361A  6E03               	movwf	??_LCD_Init^0,c
  4562   00361C  0EF2               	movlw	242
  4563   00361E                     u7637:
  4564   00361E  2EE8               	decfsz	wreg,f,c
  4565   003620  D7FE               	bra	u7637
  4566   003622  2E03               	decfsz	??_LCD_Init^0,f,c
  4567   003624  D7FC               	bra	u7637
  4568   003626                     
  4569                           ;lcd.c: 23:     SSP2CON2bits.SEN = 1;
  4570   003626  806B               	bsf	107,0,c	;volatile
  4571   003628                     l358:
  4572   003628  B06B               	btfsc	107,0,c	;volatile
  4573   00362A  EF19  F01B         	goto	u5581
  4574   00362E  EF1B  F01B         	goto	u5580
  4575   003632                     u5581:
  4576   003632  EF14  F01B         	goto	l358
  4577   003636                     u5580:
  4578   003636                     
  4579                           ;lcd.c: 25:     SSP2IF = 0;
  4580   003636  9EA4               	bcf	4004,7,c	;volatile
  4581   003638                     
  4582                           ;lcd.c: 30:     LCD_Send(0x7C);
  4583   003638  0E7C               	movlw	124
  4584   00363A  ECFF  F021         	call	_LCD_Send
  4585                           
  4586                           ;lcd.c: 31:     LCD_Send(0x80);
  4587   00363E  0E80               	movlw	128
  4588   003640  ECFF  F021         	call	_LCD_Send
  4589                           
  4590                           ;lcd.c: 32:     LCD_Send(0x38);
  4591   003644  0E38               	movlw	56
  4592   003646  ECFF  F021         	call	_LCD_Send
  4593                           
  4594                           ;lcd.c: 33:     LCD_Send(0x80);
  4595   00364A  0E80               	movlw	128
  4596   00364C  ECFF  F021         	call	_LCD_Send
  4597                           
  4598                           ;lcd.c: 34:     LCD_Send(0x39);
  4599   003650  0E39               	movlw	57
  4600   003652  ECFF  F021         	call	_LCD_Send
  4601                           
  4602                           ;lcd.c: 35:     LCD_Send(0x80);
  4603   003656  0E80               	movlw	128
  4604   003658  ECFF  F021         	call	_LCD_Send
  4605                           
  4606                           ;lcd.c: 36:     LCD_Send(0x17);
  4607   00365C  0E17               	movlw	23
  4608   00365E  ECFF  F021         	call	_LCD_Send
  4609                           
  4610                           ;lcd.c: 37:     LCD_Send(0x80);
  4611   003662  0E80               	movlw	128
  4612   003664  ECFF  F021         	call	_LCD_Send
  4613                           
  4614                           ;lcd.c: 38:     LCD_Send(0x7A);
  4615   003668  0E7A               	movlw	122
  4616   00366A  ECFF  F021         	call	_LCD_Send
  4617                           
  4618                           ;lcd.c: 39:     LCD_Send(0x80);
  4619   00366E  0E80               	movlw	128
  4620   003670  ECFF  F021         	call	_LCD_Send
  4621                           
  4622                           ;lcd.c: 40:     LCD_Send(0x5E);
  4623   003674  0E5E               	movlw	94
  4624   003676  ECFF  F021         	call	_LCD_Send
  4625                           
  4626                           ;lcd.c: 41:     LCD_Send(0x80);
  4627   00367A  0E80               	movlw	128
  4628   00367C  ECFF  F021         	call	_LCD_Send
  4629                           
  4630                           ;lcd.c: 42:     LCD_Send(0x6B);
  4631   003680  0E6B               	movlw	107
  4632   003682  ECFF  F021         	call	_LCD_Send
  4633                           
  4634                           ;lcd.c: 43:     LCD_Send(0x80);
  4635   003686  0E80               	movlw	128
  4636   003688  ECFF  F021         	call	_LCD_Send
  4637                           
  4638                           ;lcd.c: 44:     LCD_Send(0x0C);
  4639   00368C  0E0C               	movlw	12
  4640   00368E  ECFF  F021         	call	_LCD_Send
  4641                           
  4642                           ;lcd.c: 45:     LCD_Send(0x80);
  4643   003692  0E80               	movlw	128
  4644   003694  ECFF  F021         	call	_LCD_Send
  4645                           
  4646                           ;lcd.c: 46:     LCD_Send(0x01);
  4647   003698  0E01               	movlw	1
  4648   00369A  ECFF  F021         	call	_LCD_Send
  4649                           
  4650                           ;lcd.c: 47:     LCD_Send(0x80);
  4651   00369E  0E80               	movlw	128
  4652   0036A0  ECFF  F021         	call	_LCD_Send
  4653                           
  4654                           ;lcd.c: 48:     LCD_Send(0x06);
  4655   0036A4  0E06               	movlw	6
  4656   0036A6  ECFF  F021         	call	_LCD_Send
  4657                           
  4658                           ;lcd.c: 49:     LCD_Send(0x80);
  4659   0036AA  0E80               	movlw	128
  4660   0036AC  ECFF  F021         	call	_LCD_Send
  4661                           
  4662                           ;lcd.c: 50:     LCD_Send(0x02);
  4663   0036B0  0E02               	movlw	2
  4664   0036B2  ECFF  F021         	call	_LCD_Send
  4665   0036B6                     
  4666                           ;lcd.c: 52:     SSP2CON2bits.PEN = 1;
  4667   0036B6  846B               	bsf	107,2,c	;volatile
  4668   0036B8                     l361:
  4669   0036B8  B46B               	btfsc	107,2,c	;volatile
  4670   0036BA  EF61  F01B         	goto	u5591
  4671   0036BE  EF63  F01B         	goto	u5590
  4672   0036C2                     u5591:
  4673   0036C2  EF5C  F01B         	goto	l361
  4674   0036C6                     u5590:
  4675   0036C6                     
  4676                           ;lcd.c: 55:     _delay((unsigned long)((5)*(32E6/4000.0)));
  4677   0036C6  0E34               	movlw	52
  4678   0036C8  6E03               	movwf	??_LCD_Init^0,c
  4679   0036CA  0EF2               	movlw	242
  4680   0036CC                     u7647:
  4681   0036CC  2EE8               	decfsz	wreg,f,c
  4682   0036CE  D7FE               	bra	u7647
  4683   0036D0  2E03               	decfsz	??_LCD_Init^0,f,c
  4684   0036D2  D7FC               	bra	u7647
  4685   0036D4  0012               	return		;funcret
  4686   0036D6                     __end_of_LCD_Init:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _Init *****************
  4690 ;; Defined at:
  4691 ;;		line 143 in file "main.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 1
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text12
  4720   004384                     __ptext12:
  4721                           	callstack 0
  4722   004384                     _Init:
  4723                           	callstack 29
  4724   004384                     
  4725                           ;main.c: 145:     TRISD = 0b10000011;
  4726   004384  0E83               	movlw	131
  4727   004386  6E95               	movwf	149,c	;volatile
  4728   004388                     
  4729                           ;main.c: 146:     TRISCbits.TRISC4 = 0;
  4730   004388  9894               	bcf	148,4,c	;volatile
  4731                           
  4732                           ;main.c: 148:     ANSELA = 0x00;
  4733   00438A  0E00               	movlw	0
  4734   00438C  010F               	movlb	15	; () banked
  4735   00438E  6F38               	movwf	56,b	;volatile
  4736   004390                     
  4737                           ; BSR set to: 15
  4738                           ;main.c: 150:     TRISCbits.TRISC0 = 1;
  4739   004390  8094               	bsf	148,0,c	;volatile
  4740   004392                     
  4741                           ; BSR set to: 15
  4742                           ;main.c: 151:     TRISAbits.TRISA4 = 1;
  4743   004392  8892               	bsf	146,4,c	;volatile
  4744   004394                     
  4745                           ; BSR set to: 15
  4746                           ;main.c: 152:     TRISAbits.TRISA3 = 1;
  4747   004394  8692               	bsf	146,3,c	;volatile
  4748   004396                     
  4749                           ; BSR set to: 15
  4750                           ;main.c: 153:     TRISAbits.TRISA2 = 1;
  4751   004396  8492               	bsf	146,2,c	;volatile
  4752                           
  4753                           ;main.c: 156:     T2CONbits.T2CKPS = 0b11;
  4754   004398  0E03               	movlw	3
  4755   00439A  12BA               	iorwf	186,f,c	;volatile
  4756                           
  4757                           ;main.c: 157:     T2CONbits.T2OUTPS = 0b1111;
  4758   00439C  0E78               	movlw	120
  4759   00439E  12BA               	iorwf	186,f,c	;volatile
  4760                           
  4761                           ;main.c: 158:     PR2 = 250;
  4762   0043A0  0EFA               	movlw	250
  4763   0043A2  6EBB               	movwf	187,c	;volatile
  4764   0043A4                     
  4765                           ; BSR set to: 15
  4766                           ;main.c: 159:     TMR2IF = 0;
  4767   0043A4  929E               	bcf	3998,1,c	;volatile
  4768   0043A6                     
  4769                           ; BSR set to: 15
  4770                           ;main.c: 160:     TMR2IE = 1;
  4771   0043A6  829D               	bsf	3997,1,c	;volatile
  4772   0043A8                     
  4773                           ; BSR set to: 15
  4774                           ;main.c: 161:     PEIE = 1;
  4775   0043A8  8CF2               	bsf	4082,6,c	;volatile
  4776   0043AA                     
  4777                           ; BSR set to: 15
  4778                           ;main.c: 162:     TMR2ON = 1;
  4779   0043AA  84BA               	bsf	4026,2,c	;volatile
  4780   0043AC                     
  4781                           ; BSR set to: 15
  4782                           ;main.c: 163:     GIE = 1;
  4783   0043AC  8EF2               	bsf	4082,7,c	;volatile
  4784   0043AE                     
  4785                           ; BSR set to: 15
  4786   0043AE  0012               	return		;funcret
  4787   0043B0                     __end_of_Init:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _GPIO_main *****************
  4791 ;; Defined at:
  4792 ;;		line 9 in file "GPIO.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  in              1    0        unsigned char 
  4797 ;;  i               2   10[COMRAM] int 
  4798 ;;  ledky           1   12[COMRAM] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;Total ram usage:        5 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 3
  4815 ;; This function calls:
  4816 ;;		_LCD_ShowString
  4817 ;;		_driveLED
  4818 ;; This function is called by:
  4819 ;;		_main
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text13
  4824   00392A                     __ptext13:
  4825                           	callstack 0
  4826   00392A                     _GPIO_main:
  4827                           	callstack 27
  4828   00392A                     
  4829                           ;GPIO.c: 11:     LCD_ShowString(1,"Rozsvecovani LED ");
  4830   00392A  0E44               	movlw	low STR_26
  4831   00392C  6E03               	movwf	LCD_ShowString@textData^0,c
  4832   00392E  0EFF               	movlw	high STR_26
  4833   003930  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  4834   003932  0E01               	movlw	1
  4835   003934  ECF2  F01C         	call	_LCD_ShowString
  4836                           
  4837                           ;GPIO.c: 12:     LCD_ShowString(2,"Stiskni BTN2     ");
  4838   003938  0E32               	movlw	low STR_27
  4839   00393A  6E03               	movwf	LCD_ShowString@textData^0,c
  4840   00393C  0EFF               	movlw	high STR_27
  4841   00393E  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  4842   003940  0E02               	movlw	2
  4843   003942  ECF2  F01C         	call	_LCD_ShowString
  4844   003946                     
  4845                           ;GPIO.c: 14:     char ledky = 0b111111;
  4846   003946  0E3F               	movlw	63
  4847   003948  6E0D               	movwf	GPIO_main@ledky^0,c
  4848   00394A                     
  4849                           ;GPIO.c: 15:     driveLED(ledky);
  4850   00394A  0E3F               	movlw	63
  4851   00394C  ECEA  F01E         	call	_driveLED
  4852   003950                     
  4853                           ;GPIO.c: 16:     int i = 0;
  4854   003950  0E00               	movlw	0
  4855   003952  6E0C               	movwf	(GPIO_main@i+1)^0,c
  4856   003954  0E00               	movlw	0
  4857   003956  6E0B               	movwf	GPIO_main@i^0,c
  4858   003958                     l5179:
  4859                           
  4860                           ;GPIO.c: 20:         if(buttons.btn2_state){
  4861   003958  0100               	movlb	0	; () banked
  4862   00395A  51F5               	movf	(_buttons+5)& (0+255),w,b	;volatile
  4863   00395C  B4D8               	btfsc	status,2,c
  4864   00395E  EFB3  F01C         	goto	u5601
  4865   003962  EFB5  F01C         	goto	u5600
  4866   003966                     u5601:
  4867   003966  EFE4  F01C         	goto	l5195
  4868   00396A                     u5600:
  4869   00396A                     
  4870                           ; BSR set to: 0
  4871                           ;GPIO.c: 21:             if(i>5){
  4872   00396A  BE0C               	btfsc	(GPIO_main@i+1)^0,7,c
  4873   00396C  EFC1  F01C         	goto	u5611
  4874   003970  500C               	movf	(GPIO_main@i+1)^0,w,c
  4875   003972  E109               	bnz	u5610
  4876   003974  0E06               	movlw	6
  4877   003976  5C0B               	subwf	GPIO_main@i^0,w,c
  4878   003978  A0D8               	btfss	status,0,c
  4879   00397A  EFC1  F01C         	goto	u5611
  4880   00397E  EFC3  F01C         	goto	u5610
  4881   003982                     u5611:
  4882   003982  EFCE  F01C         	goto	l5187
  4883   003986                     u5610:
  4884   003986                     
  4885                           ; BSR set to: 0
  4886                           ;GPIO.c: 22:                 i = 0;
  4887   003986  0E00               	movlw	0
  4888   003988  6E0C               	movwf	(GPIO_main@i+1)^0,c
  4889   00398A  0E00               	movlw	0
  4890   00398C  6E0B               	movwf	GPIO_main@i^0,c
  4891                           
  4892                           ;GPIO.c: 23:                 ledky = 0b111111;
  4893   00398E  0E3F               	movlw	63
  4894   003990  6E0D               	movwf	GPIO_main@ledky^0,c
  4895   003992                     
  4896                           ; BSR set to: 0
  4897                           ;GPIO.c: 24:                 driveLED(ledky);
  4898   003992  0E3F               	movlw	63
  4899   003994  ECEA  F01E         	call	_driveLED
  4900                           
  4901                           ;GPIO.c: 25:             }
  4902   003998  EFE1  F01C         	goto	l5193
  4903   00399C                     l5187:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;GPIO.c: 27:                 ledky ^= 1<<i;
  4907   00399C  C00B  F009         	movff	GPIO_main@i,??_GPIO_main
  4908   0039A0  0E01               	movlw	1
  4909   0039A2  6E0A               	movwf	(??_GPIO_main+1)^0,c
  4910   0039A4  2A09               	incf	??_GPIO_main^0,f,c
  4911   0039A6  EFD7  F01C         	goto	u5624
  4912   0039AA                     u5625:
  4913   0039AA  90D8               	bcf	status,0,c
  4914   0039AC  360A               	rlcf	(??_GPIO_main+1)^0,f,c
  4915   0039AE                     u5624:
  4916   0039AE  2E09               	decfsz	??_GPIO_main^0,f,c
  4917   0039B0  EFD5  F01C         	goto	u5625
  4918   0039B4  500A               	movf	(??_GPIO_main+1)^0,w,c
  4919   0039B6  1A0D               	xorwf	GPIO_main@ledky^0,f,c
  4920   0039B8                     
  4921                           ;GPIO.c: 28:                 driveLED(ledky);
  4922   0039B8  500D               	movf	GPIO_main@ledky^0,w,c
  4923   0039BA  ECEA  F01E         	call	_driveLED
  4924   0039BE                     
  4925                           ;GPIO.c: 29:                 i++;
  4926   0039BE  4A0B               	infsnz	GPIO_main@i^0,f,c
  4927   0039C0  2A0C               	incf	(GPIO_main@i+1)^0,f,c
  4928   0039C2                     l5193:
  4929                           
  4930                           ;GPIO.c: 31:             buttons.btn2_state = 0;
  4931   0039C2  0E00               	movlw	0
  4932   0039C4  0100               	movlb	0	; () banked
  4933   0039C6  6FF5               	movwf	(_buttons+5)& (0+255),b	;volatile
  4934   0039C8                     l5195:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;GPIO.c: 34:         if(buttons.btn4_state){
  4938   0039C8  51F7               	movf	(_buttons+7)& (0+255),w,b	;volatile
  4939   0039CA  B4D8               	btfsc	status,2,c
  4940   0039CC  EFEA  F01C         	goto	u5631
  4941   0039D0  EFEC  F01C         	goto	u5630
  4942   0039D4                     u5631:
  4943   0039D4  EFAC  F01C         	goto	l5179
  4944   0039D8                     u5630:
  4945   0039D8                     
  4946                           ; BSR set to: 0
  4947                           ;GPIO.c: 35:             buttons.btn4_state = 0;
  4948   0039D8  0E00               	movlw	0
  4949   0039DA  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
  4950   0039DC                     
  4951                           ; BSR set to: 0
  4952                           ;GPIO.c: 37:             driveLED(in);
  4953   0039DC  0E3F               	movlw	63
  4954   0039DE  ECEA  F01E         	call	_driveLED
  4955   0039E2  0012               	return		;funcret
  4956   0039E4                     __end_of_GPIO_main:
  4957                           	callstack 0
  4958                           
  4959 ;; *************** function _driveLED *****************
  4960 ;; Defined at:
  4961 ;;		line 45 in file "GPIO.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  in              1    wreg     unsigned char 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  in              1    1[COMRAM] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;Total ram usage:        1 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_main
  4986 ;;		_GPIO_main
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text14
  4991   003DD4                     __ptext14:
  4992                           	callstack 0
  4993   003DD4                     _driveLED:
  4994                           	callstack 29
  4995                           
  4996                           ;incstack = 0
  4997                           ;driveLED@in stored from wreg
  4998   003DD4  6E02               	movwf	driveLED@in^0,c
  4999   003DD6                     
  5000                           ;GPIO.c: 46:     LATD2 = in & 1;
  5001   003DD6  B002               	btfsc	driveLED@in^0,0,c
  5002   003DD8  EFF0  F01E         	goto	u5101
  5003   003DDC  EFF3  F01E         	goto	u5100
  5004   003DE0                     u5101:
  5005   003DE0  848C               	bsf	3980,2,c	;volatile
  5006   003DE2  EFF4  F01E         	goto	u5115
  5007   003DE6                     u5100:
  5008   003DE6  948C               	bcf	3980,2,c	;volatile
  5009   003DE8                     u5115:
  5010                           
  5011                           ;GPIO.c: 47:     LATD3 = in & 2 ? 1 : 0;
  5012   003DE8  B202               	btfsc	driveLED@in^0,1,c
  5013   003DEA  EFF9  F01E         	goto	u5121
  5014   003DEE  EFFC  F01E         	goto	u5120
  5015   003DF2                     u5121:
  5016   003DF2  868C               	bsf	3980,3,c	;volatile
  5017   003DF4  EFFD  F01E         	goto	u5135
  5018   003DF8                     u5120:
  5019   003DF8  968C               	bcf	3980,3,c	;volatile
  5020   003DFA                     u5135:
  5021                           
  5022                           ;GPIO.c: 48:     LATC4 = in & 4 ? 1 : 0;
  5023   003DFA  B402               	btfsc	driveLED@in^0,2,c
  5024   003DFC  EF02  F01F         	goto	u5141
  5025   003E00  EF05  F01F         	goto	u5140
  5026   003E04                     u5141:
  5027   003E04  888B               	bsf	3979,4,c	;volatile
  5028   003E06  EF06  F01F         	goto	u5155
  5029   003E0A                     u5140:
  5030   003E0A  988B               	bcf	3979,4,c	;volatile
  5031   003E0C                     u5155:
  5032                           
  5033                           ;GPIO.c: 49:     LATD4 = in & 8 ? 1 : 0;
  5034   003E0C  B602               	btfsc	driveLED@in^0,3,c
  5035   003E0E  EF0B  F01F         	goto	u5161
  5036   003E12  EF0E  F01F         	goto	u5160
  5037   003E16                     u5161:
  5038   003E16  888C               	bsf	3980,4,c	;volatile
  5039   003E18  EF0F  F01F         	goto	u5175
  5040   003E1C                     u5160:
  5041   003E1C  988C               	bcf	3980,4,c	;volatile
  5042   003E1E                     u5175:
  5043                           
  5044                           ;GPIO.c: 50:     LATD5 = in & 16 ? 1 : 0;
  5045   003E1E  B802               	btfsc	driveLED@in^0,4,c
  5046   003E20  EF14  F01F         	goto	u5181
  5047   003E24  EF17  F01F         	goto	u5180
  5048   003E28                     u5181:
  5049   003E28  8A8C               	bsf	3980,5,c	;volatile
  5050   003E2A  EF18  F01F         	goto	u5195
  5051   003E2E                     u5180:
  5052   003E2E  9A8C               	bcf	3980,5,c	;volatile
  5053   003E30                     u5195:
  5054                           
  5055                           ;GPIO.c: 51:     LATD6 = in & 32 ? 1 : 0;
  5056   003E30  BA02               	btfsc	driveLED@in^0,5,c
  5057   003E32  EF1D  F01F         	goto	u5201
  5058   003E36  EF20  F01F         	goto	u5200
  5059   003E3A                     u5201:
  5060   003E3A  8C8C               	bsf	3980,6,c	;volatile
  5061   003E3C  EF21  F01F         	goto	u5215
  5062   003E40                     u5200:
  5063   003E40  9C8C               	bcf	3980,6,c	;volatile
  5064   003E42                     u5215:
  5065   003E42  0012               	return		;funcret
  5066   003E44                     __end_of_driveLED:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _GAME_main *****************
  5070 ;; Defined at:
  5071 ;;		line 11 in file "GAME.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  txt_g          17  106[BANK0 ] unsigned char [17]
  5076 ;;  cas             2  127[BANK0 ] int 
  5077 ;;  tmr_c           2  125[BANK0 ] int 
  5078 ;;  vysledek        2  123[BANK0 ] int 
  5079 ;;  game_end        1  129[BANK0 ] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:       24 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 9
  5096 ;; This function calls:
  5097 ;;		_GAME_Init
  5098 ;;		_LCD_ShowString
  5099 ;;		___wmul
  5100 ;;		_rand
  5101 ;;		_sprintf
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text15
  5108   002CEA                     __ptext15:
  5109                           	callstack 0
  5110   002CEA                     _GAME_main:
  5111                           	callstack 21
  5112   002CEA                     
  5113                           ;GAME.c: 13:     GAME_Init();
  5114   002CEA  EC29  F022         	call	_GAME_Init	;wreg free
  5115   002CEE                     
  5116                           ;GAME.c: 15:     int vysledek;;GAME.c: 16:     int cas;;GAME.c: 17:     char game_end = 
      +                          1;
  5117   002CEE  0E01               	movlw	1
  5118   002CF0  0100               	movlb	0	; () banked
  5119   002CF2  6FE1               	movwf	GAME_main@game_end& (0+255),b
  5120   002CF4                     
  5121                           ; BSR set to: 0
  5122                           ;GAME.c: 18:     int tmr_c;;GAME.c: 20:     char txt_g[17];;GAME.c: 22:     LCD_ShowStri
      +                          ng(1,"  Hadani casu    ");
  5123   002CF4  0E68               	movlw	low STR_20
  5124   002CF6  6E03               	movwf	LCD_ShowString@textData^0,c
  5125   002CF8  0EFF               	movlw	high STR_20
  5126   002CFA  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5127   002CFC  0E01               	movlw	1
  5128   002CFE  ECF2  F01C         	call	_LCD_ShowString
  5129   002D02                     
  5130                           ;GAME.c: 23:     LCD_ShowString(2,"  Stiskni BTN1   ");
  5131   002D02  0E7A               	movlw	low STR_21
  5132   002D04  6E03               	movwf	LCD_ShowString@textData^0,c
  5133   002D06  0EFF               	movlw	high STR_21
  5134   002D08  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5135   002D0A  0E02               	movlw	2
  5136   002D0C  ECF2  F01C         	call	_LCD_ShowString
  5137   002D10                     l6577:
  5138                           
  5139                           ;GAME.c: 27:         if(buttons.btn1_state && game_end){
  5140   002D10  0100               	movlb	0	; () banked
  5141   002D12  51F4               	movf	(_buttons+4)& (0+255),w,b	;volatile
  5142   002D14  B4D8               	btfsc	status,2,c
  5143   002D16  EF8F  F016         	goto	u7351
  5144   002D1A  EF91  F016         	goto	u7350
  5145   002D1E                     u7351:
  5146   002D1E  EFCC  F016         	goto	l6597
  5147   002D22                     u7350:
  5148   002D22                     
  5149                           ; BSR set to: 0
  5150   002D22  51E1               	movf	GAME_main@game_end& (0+255),w,b
  5151   002D24  B4D8               	btfsc	status,2,c
  5152   002D26  EF97  F016         	goto	u7361
  5153   002D2A  EF99  F016         	goto	u7360
  5154   002D2E                     u7361:
  5155   002D2E  EFCC  F016         	goto	l6597
  5156   002D32                     u7360:
  5157   002D32                     
  5158                           ; BSR set to: 0
  5159                           ;GAME.c: 28:             game_end = 0;
  5160   002D32  0E00               	movlw	0
  5161   002D34  6FE1               	movwf	GAME_main@game_end& (0+255),b
  5162   002D36                     
  5163                           ; BSR set to: 0
  5164                           ;GAME.c: 29:             cas = (rand() % 8) + 3;
  5165   002D36  EC22  F01F         	call	_rand	;wreg free
  5166   002D3A  0E07               	movlw	7
  5167   002D3C  160E               	andwf	?_rand^0,f,c
  5168   002D3E  0E00               	movlw	0
  5169   002D40  160F               	andwf	(?_rand+1)^0,f,c
  5170   002D42  0E03               	movlw	3
  5171   002D44  240E               	addwf	?_rand^0,w,c
  5172   002D46  0100               	movlb	0	; () banked
  5173   002D48  6FDF               	movwf	GAME_main@cas& (0+255),b
  5174   002D4A  0E00               	movlw	0
  5175   002D4C  200F               	addwfc	(?_rand+1)^0,w,c
  5176   002D4E  6FE0               	movwf	(GAME_main@cas+1)& (0+255),b
  5177   002D50                     
  5178                           ; BSR set to: 0
  5179                           ;GAME.c: 30:             sprintf(txt_g,"       %d s         ", cas);
  5180   002D50  0ECA               	movlw	low GAME_main@txt_g
  5181   002D52  6FB4               	movwf	sprintf@s& (0+255),b
  5182   002D54  0E00               	movlw	high GAME_main@txt_g
  5183   002D56  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  5184   002D58  0EC2               	movlw	low STR_22
  5185   002D5A  6FB6               	movwf	sprintf@fmt& (0+255),b
  5186   002D5C  0EFD               	movlw	high STR_22
  5187   002D5E  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  5188   002D60  C0DF  F0B8         	movff	GAME_main@cas,?_sprintf+4
  5189   002D64  C0E0  F0B9         	movff	GAME_main@cas+1,?_sprintf+5
  5190   002D68  EC53  F020         	call	_sprintf	;wreg free
  5191   002D6C                     
  5192                           ;GAME.c: 31:             LCD_ShowString(1,"Zmackni BTN1 po:  ");
  5193   002D6C  0E63               	movlw	low STR_23
  5194   002D6E  6E03               	movwf	LCD_ShowString@textData^0,c
  5195   002D70  0EFE               	movlw	high STR_23
  5196   002D72  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5197   002D74  0E01               	movlw	1
  5198   002D76  ECF2  F01C         	call	_LCD_ShowString
  5199   002D7A                     
  5200                           ;GAME.c: 32:             LCD_ShowString(2,txt_g);
  5201   002D7A  0ECA               	movlw	low GAME_main@txt_g
  5202   002D7C  6E03               	movwf	LCD_ShowString@textData^0,c
  5203   002D7E  0E00               	movlw	high GAME_main@txt_g
  5204   002D80  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5205   002D82  0E02               	movlw	2
  5206   002D84  ECF2  F01C         	call	_LCD_ShowString
  5207   002D88                     
  5208                           ;GAME.c: 33:             TMR1ON = 1;
  5209   002D88  80CD               	bsf	4045,0,c	;volatile
  5210   002D8A                     
  5211                           ;GAME.c: 34:             tmr_c = 0;
  5212   002D8A  0E00               	movlw	0
  5213   002D8C  0100               	movlb	0	; () banked
  5214   002D8E  6FDE               	movwf	(GAME_main@tmr_c+1)& (0+255),b
  5215   002D90  0E00               	movlw	0
  5216   002D92  6FDD               	movwf	GAME_main@tmr_c& (0+255),b
  5217   002D94                     
  5218                           ; BSR set to: 0
  5219                           ;GAME.c: 35:             buttons.btn1_state = 0;
  5220   002D94  0E00               	movlw	0
  5221   002D96  6FF4               	movwf	(_buttons+4)& (0+255),b	;volatile
  5222   002D98                     l6597:
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;GAME.c: 38:         if(buttons.btn1_state && !game_end){
  5226   002D98  51F4               	movf	(_buttons+4)& (0+255),w,b	;volatile
  5227   002D9A  B4D8               	btfsc	status,2,c
  5228   002D9C  EFD2  F016         	goto	u7371
  5229   002DA0  EFD4  F016         	goto	u7370
  5230   002DA4                     u7371:
  5231   002DA4  EF13  F017         	goto	l6617
  5232   002DA8                     u7370:
  5233   002DA8                     
  5234                           ; BSR set to: 0
  5235   002DA8  51E1               	movf	GAME_main@game_end& (0+255),w,b
  5236   002DAA  A4D8               	btfss	status,2,c
  5237   002DAC  EFDA  F016         	goto	u7381
  5238   002DB0  EFDC  F016         	goto	u7380
  5239   002DB4                     u7381:
  5240   002DB4  EF13  F017         	goto	l6617
  5241   002DB8                     u7380:
  5242   002DB8                     
  5243                           ; BSR set to: 0
  5244                           ;GAME.c: 39:             TMR1ON = 0;
  5245   002DB8  90CD               	bcf	4045,0,c	;volatile
  5246   002DBA                     
  5247                           ; BSR set to: 0
  5248                           ;GAME.c: 40:             TMR1 = 0;
  5249   002DBA  0E00               	movlw	0
  5250   002DBC  6ECF               	movwf	207,c	;volatile
  5251   002DBE  0E00               	movlw	0
  5252   002DC0  6ECE               	movwf	206,c	;volatile
  5253   002DC2                     
  5254                           ; BSR set to: 0
  5255                           ;GAME.c: 41:             vysledek = (cas*1000) - tmr_c;
  5256   002DC2  C0DF  F002         	movff	GAME_main@cas,___wmul@multiplier
  5257   002DC6  C0E0  F003         	movff	GAME_main@cas+1,___wmul@multiplier+1
  5258   002DCA  0E03               	movlw	3
  5259   002DCC  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5260   002DCE  0EE8               	movlw	232
  5261   002DD0  6E04               	movwf	___wmul@multiplicand^0,c
  5262   002DD2  ECEC  F021         	call	___wmul	;wreg free
  5263   002DD6  0100               	movlb	0	; () banked
  5264   002DD8  51DD               	movf	GAME_main@tmr_c& (0+255),w,b
  5265   002DDA  5C02               	subwf	?___wmul^0,w,c
  5266   002DDC  6FDB               	movwf	GAME_main@vysledek& (0+255),b
  5267   002DDE  51DE               	movf	(GAME_main@tmr_c+1)& (0+255),w,b
  5268   002DE0  5803               	subwfb	(?___wmul+1)^0,w,c
  5269   002DE2  6FDC               	movwf	(GAME_main@vysledek+1)& (0+255),b
  5270   002DE4                     
  5271                           ; BSR set to: 0
  5272                           ;GAME.c: 42:             sprintf(txt_g,"Rozdil: %d ms", vysledek);
  5273   002DE4  0ECA               	movlw	low GAME_main@txt_g
  5274   002DE6  6FB4               	movwf	sprintf@s& (0+255),b
  5275   002DE8  0E00               	movlw	high GAME_main@txt_g
  5276   002DEA  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  5277   002DEC  0EE3               	movlw	low STR_24
  5278   002DEE  6FB6               	movwf	sprintf@fmt& (0+255),b
  5279   002DF0  0EFF               	movlw	high STR_24
  5280   002DF2  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  5281   002DF4  C0DB  F0B8         	movff	GAME_main@vysledek,?_sprintf+4
  5282   002DF8  C0DC  F0B9         	movff	GAME_main@vysledek+1,?_sprintf+5
  5283   002DFC  EC53  F020         	call	_sprintf	;wreg free
  5284   002E00                     
  5285                           ;GAME.c: 43:             LCD_ShowString(2,"Nova hra BTN1    ");
  5286   002E00  0E56               	movlw	low STR_25
  5287   002E02  6E03               	movwf	LCD_ShowString@textData^0,c
  5288   002E04  0EFF               	movlw	high STR_25
  5289   002E06  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5290   002E08  0E02               	movlw	2
  5291   002E0A  ECF2  F01C         	call	_LCD_ShowString
  5292   002E0E                     
  5293                           ;GAME.c: 44:             LCD_ShowString(1,txt_g);
  5294   002E0E  0ECA               	movlw	low GAME_main@txt_g
  5295   002E10  6E03               	movwf	LCD_ShowString@textData^0,c
  5296   002E12  0E00               	movlw	high GAME_main@txt_g
  5297   002E14  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5298   002E16  0E01               	movlw	1
  5299   002E18  ECF2  F01C         	call	_LCD_ShowString
  5300   002E1C                     
  5301                           ;GAME.c: 45:             game_end = 1;
  5302   002E1C  0E01               	movlw	1
  5303   002E1E  0100               	movlb	0	; () banked
  5304   002E20  6FE1               	movwf	GAME_main@game_end& (0+255),b
  5305   002E22                     
  5306                           ; BSR set to: 0
  5307                           ;GAME.c: 46:             buttons.btn1_state = 0;
  5308   002E22  0E00               	movlw	0
  5309   002E24  6FF4               	movwf	(_buttons+4)& (0+255),b	;volatile
  5310   002E26                     l6617:
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;GAME.c: 48:         if(TMR1 >= 1000){
  5314   002E26  0EE8               	movlw	232
  5315   002E28  5CCE               	subwf	206,w,c	;volatile
  5316   002E2A  0E03               	movlw	3
  5317   002E2C  58CF               	subwfb	207,w,c	;volatile
  5318   002E2E  A0D8               	btfss	status,0,c
  5319   002E30  EF1C  F017         	goto	u7391
  5320   002E34  EF1E  F017         	goto	u7390
  5321   002E38                     u7391:
  5322   002E38  EF26  F017         	goto	l6625
  5323   002E3C                     u7390:
  5324   002E3C                     
  5325                           ; BSR set to: 0
  5326                           ;GAME.c: 49:             TMR1 = 0;
  5327   002E3C  0E00               	movlw	0
  5328   002E3E  6ECF               	movwf	207,c	;volatile
  5329   002E40  0E00               	movlw	0
  5330   002E42  6ECE               	movwf	206,c	;volatile
  5331   002E44                     
  5332                           ; BSR set to: 0
  5333                           ;GAME.c: 50:             tmr_c++;
  5334   002E44  4BDD               	infsnz	GAME_main@tmr_c& (0+255),f,b
  5335   002E46  2BDE               	incf	(GAME_main@tmr_c+1)& (0+255),f,b
  5336   002E48                     
  5337                           ; BSR set to: 0
  5338                           ;GAME.c: 51:             game_end = 0;
  5339   002E48  0E00               	movlw	0
  5340   002E4A  6FE1               	movwf	GAME_main@game_end& (0+255),b
  5341   002E4C                     l6625:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;GAME.c: 55:         if(buttons.btn4_state){
  5345   002E4C  51F7               	movf	(_buttons+7)& (0+255),w,b	;volatile
  5346   002E4E  B4D8               	btfsc	status,2,c
  5347   002E50  EF2C  F017         	goto	u7401
  5348   002E54  EF2E  F017         	goto	u7400
  5349   002E58                     u7401:
  5350   002E58  EF88  F016         	goto	l6577
  5351   002E5C                     u7400:
  5352   002E5C                     
  5353                           ; BSR set to: 0
  5354                           ;GAME.c: 56:             buttons.btn4_state = 0;
  5355   002E5C  0E00               	movlw	0
  5356   002E5E  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
  5357   002E60                     
  5358                           ; BSR set to: 0
  5359   002E60  0012               	return		;funcret
  5360   002E62                     __end_of_GAME_main:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function _rand *****************
  5364 ;; Defined at:
  5365 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\rand.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2   13[COMRAM] int 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;Total ram usage:        6 bytes
  5384 ;; Hardware stack levels used: 1
  5385 ;; Hardware stack levels required when called: 2
  5386 ;; This function calls:
  5387 ;;		___lmul
  5388 ;; This function is called by:
  5389 ;;		_GAME_main
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text16
  5394   003E44                     __ptext16:
  5395                           	callstack 0
  5396   003E44                     _rand:
  5397                           	callstack 27
  5398   003E44  C1C3  F002         	movff	_seed,___lmul@multiplier
  5399   003E48  C1C4  F003         	movff	_seed+1,___lmul@multiplier+1
  5400   003E4C  C1C5  F004         	movff	_seed+2,___lmul@multiplier+2
  5401   003E50  C1C6  F005         	movff	_seed+3,___lmul@multiplier+3
  5402   003E54  0E2D               	movlw	45
  5403   003E56  6E06               	movwf	___lmul@multiplicand^0,c
  5404   003E58  0E7F               	movlw	127
  5405   003E5A  6E07               	movwf	(___lmul@multiplicand+1)^0,c
  5406   003E5C  0E95               	movlw	149
  5407   003E5E  6E08               	movwf	(___lmul@multiplicand+2)^0,c
  5408   003E60  0E4C               	movlw	76
  5409   003E62  6E09               	movwf	(___lmul@multiplicand+3)^0,c
  5410   003E64  EC8F  F01F         	call	___lmul	;wreg free
  5411   003E68  0E01               	movlw	1
  5412   003E6A  2402               	addwf	?___lmul^0,w,c
  5413   003E6C  0101               	movlb	1	; () banked
  5414   003E6E  6FC3               	movwf	_seed& (0+255),b
  5415   003E70  0E00               	movlw	0
  5416   003E72  2003               	addwfc	(?___lmul+1)^0,w,c
  5417   003E74  6FC4               	movwf	(_seed+1)& (0+255),b
  5418   003E76  0E00               	movlw	0
  5419   003E78  2004               	addwfc	(?___lmul+2)^0,w,c
  5420   003E7A  6FC5               	movwf	(_seed+2)& (0+255),b
  5421   003E7C  0E00               	movlw	0
  5422   003E7E  2005               	addwfc	(?___lmul+3)^0,w,c
  5423   003E80  6FC6               	movwf	(_seed+3)& (0+255),b
  5424   003E82                     
  5425                           ; BSR set to: 1
  5426   003E82  C1C3  F010         	movff	_seed,??_rand
  5427   003E86  C1C4  F011         	movff	_seed+1,??_rand+1
  5428   003E8A  C1C5  F012         	movff	_seed+2,??_rand+2
  5429   003E8E  C1C6  F013         	movff	_seed+3,??_rand+3
  5430   003E92  0E12               	movlw	18
  5431   003E94  EF51  F01F         	goto	u5300
  5432   003E98                     u5305:
  5433   003E98  90D8               	bcf	status,0,c
  5434   003E9A  3213               	rrcf	(??_rand+3)^0,f,c
  5435   003E9C  3212               	rrcf	(??_rand+2)^0,f,c
  5436   003E9E  3211               	rrcf	(??_rand+1)^0,f,c
  5437   003EA0  3210               	rrcf	??_rand^0,f,c
  5438   003EA2                     u5300:
  5439   003EA2  2EE8               	decfsz	wreg,f,c
  5440   003EA4  EF4C  F01F         	goto	u5305
  5441   003EA8  C010  F00E         	movff	??_rand,?_rand
  5442   003EAC  C011  F00F         	movff	??_rand+1,?_rand+1
  5443   003EB0                     
  5444                           ; BSR set to: 1
  5445   003EB0  0012               	return		;funcret
  5446   003EB2                     __end_of_rand:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function ___lmul *****************
  5450 ;; Defined at:
  5451 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  multiplier      4    1[COMRAM] unsigned long 
  5454 ;;  multiplicand    4    5[COMRAM] unsigned long 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  product         4    9[COMRAM] unsigned long 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  4    1[COMRAM] unsigned long 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5466 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;Total ram usage:       12 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_rand
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text17
  5481   003F1E                     __ptext17:
  5482                           	callstack 0
  5483   003F1E                     ___lmul:
  5484                           	callstack 27
  5485   003F1E  0E00               	movlw	0
  5486   003F20  6E0A               	movwf	___lmul@product^0,c
  5487   003F22  0E00               	movlw	0
  5488   003F24  6E0B               	movwf	(___lmul@product+1)^0,c
  5489   003F26  0E00               	movlw	0
  5490   003F28  6E0C               	movwf	(___lmul@product+2)^0,c
  5491   003F2A  0E00               	movlw	0
  5492   003F2C  6E0D               	movwf	(___lmul@product+3)^0,c
  5493   003F2E                     l4799:
  5494   003F2E  A002               	btfss	___lmul@multiplier^0,0,c
  5495   003F30  EF9C  F01F         	goto	u5071
  5496   003F34  EF9E  F01F         	goto	u5070
  5497   003F38                     u5071:
  5498   003F38  EFA6  F01F         	goto	l4803
  5499   003F3C                     u5070:
  5500   003F3C  5006               	movf	___lmul@multiplicand^0,w,c
  5501   003F3E  260A               	addwf	___lmul@product^0,f,c
  5502   003F40  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  5503   003F42  220B               	addwfc	(___lmul@product+1)^0,f,c
  5504   003F44  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  5505   003F46  220C               	addwfc	(___lmul@product+2)^0,f,c
  5506   003F48  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  5507   003F4A  220D               	addwfc	(___lmul@product+3)^0,f,c
  5508   003F4C                     l4803:
  5509   003F4C  90D8               	bcf	status,0,c
  5510   003F4E  3606               	rlcf	___lmul@multiplicand^0,f,c
  5511   003F50  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5512   003F52  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5513   003F54  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5514   003F56  90D8               	bcf	status,0,c
  5515   003F58  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  5516   003F5A  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  5517   003F5C  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  5518   003F5E  3202               	rrcf	___lmul@multiplier^0,f,c
  5519   003F60  5002               	movf	___lmul@multiplier^0,w,c
  5520   003F62  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  5521   003F64  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  5522   003F66  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  5523   003F68  A4D8               	btfss	status,2,c
  5524   003F6A  EFB9  F01F         	goto	u5081
  5525   003F6E  EFBB  F01F         	goto	u5080
  5526   003F72                     u5081:
  5527   003F72  EF97  F01F         	goto	l4799
  5528   003F76                     u5080:
  5529   003F76  C00A  F002         	movff	___lmul@product,?___lmul
  5530   003F7A  C00B  F003         	movff	___lmul@product+1,?___lmul+1
  5531   003F7E  C00C  F004         	movff	___lmul@product+2,?___lmul+2
  5532   003F82  C00D  F005         	movff	___lmul@product+3,?___lmul+3
  5533   003F86  0012               	return		;funcret
  5534   003F88                     __end_of___lmul:
  5535                           	callstack 0
  5536                           
  5537 ;; *************** function _GAME_Init *****************
  5538 ;; Defined at:
  5539 ;;		line 62 in file "GAME.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;Total ram usage:        0 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; Hardware stack levels required when called: 1
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_GAME_main
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           	psect	text18
  5568   004452                     __ptext18:
  5569                           	callstack 0
  5570   004452                     _GAME_Init:
  5571                           	callstack 28
  5572   004452                     
  5573                           ;GAME.c: 64:     T1CONbits.TMR1CS = 0b00;
  5574   004452  0E3F               	movlw	-193
  5575   004454  16CD               	andwf	205,f,c	;volatile
  5576                           
  5577                           ;GAME.c: 65:     T1CONbits.T1CKPS = 0b11;
  5578   004456  0E30               	movlw	48
  5579   004458  12CD               	iorwf	205,f,c	;volatile
  5580   00445A                     
  5581                           ;GAME.c: 66:     TMR1ON = 0;
  5582   00445A  90CD               	bcf	4045,0,c	;volatile
  5583                           
  5584                           ;GAME.c: 68:     TMR1 = 0;
  5585   00445C  0E00               	movlw	0
  5586   00445E  6ECF               	movwf	207,c	;volatile
  5587   004460  0E00               	movlw	0
  5588   004462  6ECE               	movwf	206,c	;volatile
  5589   004464  0012               	return		;funcret
  5590   004466                     __end_of_GAME_Init:
  5591                           	callstack 0
  5592                           
  5593 ;; *************** function _DAC_main *****************
  5594 ;; Defined at:
  5595 ;;		line 18 in file "DAC.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  freq            2   99[BANK0 ] int 
  5600 ;;  A               2   97[BANK0 ] int 
  5601 ;;  data_pot2       2   95[BANK0 ] unsigned short 
  5602 ;;  data_pot1       2   93[BANK0 ] unsigned short 
  5603 ;;  i               1  102[BANK0 ] unsigned char 
  5604 ;;  dir             1  101[BANK0 ] unsigned char 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      void 
  5607 ;; Registers used:
  5608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;Total ram usage:       13 bytes
  5619 ;; Hardware stack levels used: 1
  5620 ;; Hardware stack levels required when called: 9
  5621 ;; This function calls:
  5622 ;;		_DAC_Init
  5623 ;;		_DAC_Write
  5624 ;;		_LCD_ShowString
  5625 ;;		___fladd
  5626 ;;		___fldiv
  5627 ;;		___flmul
  5628 ;;		___fltol
  5629 ;;		___xxtofl
  5630 ;;		_printf
  5631 ;; This function is called by:
  5632 ;;		_main
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text19
  5637   001E86                     __ptext19:
  5638                           	callstack 0
  5639   001E86                     _DAC_main:
  5640                           	callstack 21
  5641   001E86                     
  5642                           ;DAC.c: 20:     DAC_Init();
  5643   001E86  ECC4  F01F         	call	_DAC_Init	;wreg free
  5644   001E8A                     
  5645                           ;DAC.c: 21:     LCD_ShowString(1,"  Trojuhelnik   ");
  5646   001E8A  0EC1               	movlw	low STR_17
  5647   001E8C  6E03               	movwf	LCD_ShowString@textData^0,c
  5648   001E8E  0EFF               	movlw	high STR_17
  5649   001E90  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5650   001E92  0E01               	movlw	1
  5651   001E94  ECF2  F01C         	call	_LCD_ShowString
  5652   001E98                     
  5653                           ;DAC.c: 22:     LCD_ShowString(2,"POT1:Amp,POT2:Hz");
  5654   001E98  0ED2               	movlw	low STR_18
  5655   001E9A  6E03               	movwf	LCD_ShowString@textData^0,c
  5656   001E9C  0EFF               	movlw	high STR_18
  5657   001E9E  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  5658   001EA0  0E02               	movlw	2
  5659   001EA2  ECF2  F01C         	call	_LCD_ShowString
  5660   001EA6                     
  5661                           ;DAC.c: 24:     char i = 0;
  5662   001EA6  0E00               	movlw	0
  5663   001EA8  0100               	movlb	0	; () banked
  5664   001EAA  6FC6               	movwf	DAC_main@i& (0+255),b
  5665   001EAC                     
  5666                           ; BSR set to: 0
  5667                           ;DAC.c: 25:     char dir = 1;
  5668   001EAC  0E01               	movlw	1
  5669   001EAE  6FC5               	movwf	DAC_main@dir& (0+255),b
  5670   001EB0                     
  5671                           ; BSR set to: 0
  5672                           ;DAC.c: 26:     uint16_t data_pot1;;DAC.c: 27:     uint16_t data_pot2;;DAC.c: 28:     in
      +                          t A = 255;
  5673   001EB0  0E00               	movlw	0
  5674   001EB2  6FC2               	movwf	(DAC_main@A+1)& (0+255),b
  5675   001EB4  69C1               	setf	DAC_main@A& (0+255),b
  5676   001EB6                     
  5677                           ; BSR set to: 0
  5678                           ;DAC.c: 29:     int freq = 1;
  5679   001EB6  0E00               	movlw	0
  5680   001EB8  6FC4               	movwf	(DAC_main@freq+1)& (0+255),b
  5681   001EBA  0E01               	movlw	1
  5682   001EBC  6FC3               	movwf	DAC_main@freq& (0+255),b
  5683   001EBE                     l6513:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;DAC.c: 34:         if(TMR1 >= freq){
  5687   001EBE  51C3               	movf	DAC_main@freq& (0+255),w,b
  5688   001EC0  5CCE               	subwf	206,w,c	;volatile
  5689   001EC2  51C4               	movf	(DAC_main@freq+1)& (0+255),w,b
  5690   001EC4  58CF               	subwfb	207,w,c	;volatile
  5691   001EC6  A0D8               	btfss	status,0,c
  5692   001EC8  EF68  F00F         	goto	u7261
  5693   001ECC  EF6A  F00F         	goto	u7260
  5694   001ED0                     u7261:
  5695   001ED0  EFC4  F00F         	goto	l6537
  5696   001ED4                     u7260:
  5697   001ED4                     
  5698                           ; BSR set to: 0
  5699                           ;DAC.c: 35:             TMR1 = 0;
  5700   001ED4  0E00               	movlw	0
  5701   001ED6  6ECF               	movwf	207,c	;volatile
  5702   001ED8  0E00               	movlw	0
  5703   001EDA  6ECE               	movwf	206,c	;volatile
  5704                           
  5705                           ;DAC.c: 37:             ADCON0bits.CHS = 12;
  5706   001EDC  50C2               	movf	194,w,c	;volatile
  5707   001EDE  0B83               	andlw	-125
  5708   001EE0  0930               	iorlw	48
  5709   001EE2  6EC2               	movwf	194,c	;volatile
  5710   001EE4                     
  5711                           ; BSR set to: 0
  5712                           ;DAC.c: 38:             DAC_Write(i);
  5713   001EE4  51C6               	movf	DAC_main@i& (0+255),w,b
  5714   001EE6  EC2E  F021         	call	_DAC_Write
  5715   001EEA                     
  5716                           ;DAC.c: 39:             if(i >= A) dir = 0;
  5717   001EEA  0100               	movlb	0	; () banked
  5718   001EEC  51C6               	movf	DAC_main@i& (0+255),w,b
  5719   001EEE  6FBA               	movwf	??_DAC_main& (0+255),b
  5720   001EF0  6BBB               	clrf	(??_DAC_main+1)& (0+255),b
  5721   001EF2  51C1               	movf	DAC_main@A& (0+255),w,b
  5722   001EF4  5DBA               	subwf	??_DAC_main& (0+255),w,b
  5723   001EF6  51BB               	movf	(??_DAC_main+1)& (0+255),w,b
  5724   001EF8  0A80               	xorlw	128
  5725   001EFA  6FBC               	movwf	(??_DAC_main+2)& (0+255),b
  5726   001EFC  51C2               	movf	(DAC_main@A+1)& (0+255),w,b
  5727   001EFE  0A80               	xorlw	128
  5728   001F00  59BC               	subwfb	(??_DAC_main+2)& (0+255),w,b
  5729   001F02  A0D8               	btfss	status,0,c
  5730   001F04  EF86  F00F         	goto	u7271
  5731   001F08  EF88  F00F         	goto	u7270
  5732   001F0C                     u7271:
  5733   001F0C  EF8C  F00F         	goto	l6523
  5734   001F10                     u7270:
  5735   001F10                     
  5736                           ; BSR set to: 0
  5737   001F10  0E00               	movlw	0
  5738   001F12  6FC5               	movwf	DAC_main@dir& (0+255),b
  5739   001F14  EF96  F00F         	goto	l192
  5740   001F18                     l6523:
  5741                           
  5742                           ; BSR set to: 0
  5743   001F18  51C6               	movf	DAC_main@i& (0+255),w,b
  5744   001F1A  A4D8               	btfss	status,2,c
  5745   001F1C  EF92  F00F         	goto	u7281
  5746   001F20  EF94  F00F         	goto	u7280
  5747   001F24                     u7281:
  5748   001F24  EF96  F00F         	goto	l192
  5749   001F28                     u7280:
  5750   001F28                     
  5751                           ; BSR set to: 0
  5752   001F28  0E01               	movlw	1
  5753   001F2A  6FC5               	movwf	DAC_main@dir& (0+255),b
  5754   001F2C                     l192:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;DAC.c: 41:             if(dir) i++;
  5758   001F2C  51C5               	movf	DAC_main@dir& (0+255),w,b
  5759   001F2E  B4D8               	btfsc	status,2,c
  5760   001F30  EF9C  F00F         	goto	u7291
  5761   001F34  EF9E  F00F         	goto	u7290
  5762   001F38                     u7291:
  5763   001F38  EFA1  F00F         	goto	l6529
  5764   001F3C                     u7290:
  5765   001F3C                     
  5766                           ; BSR set to: 0
  5767   001F3C  2BC6               	incf	DAC_main@i& (0+255),f,b
  5768   001F3E  EFAA  F00F         	goto	l6533
  5769   001F42                     l6529:
  5770                           
  5771                           ; BSR set to: 0
  5772   001F42  51C5               	movf	DAC_main@dir& (0+255),w,b
  5773   001F44  A4D8               	btfss	status,2,c
  5774   001F46  EFA7  F00F         	goto	u7301
  5775   001F4A  EFA9  F00F         	goto	u7300
  5776   001F4E                     u7301:
  5777   001F4E  EFAA  F00F         	goto	l6533
  5778   001F52                     u7300:
  5779   001F52                     
  5780                           ; BSR set to: 0
  5781   001F52  07C6               	decf	DAC_main@i& (0+255),f,b
  5782   001F54                     l6533:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;DAC.c: 43:             GODONE = 1;
  5786   001F54  82C2               	bsf	4034,1,c	;volatile
  5787   001F56                     l197:
  5788   001F56  B2C2               	btfsc	4034,1,c	;volatile
  5789   001F58  EFB0  F00F         	goto	u7311
  5790   001F5C  EFB2  F00F         	goto	u7310
  5791   001F60                     u7311:
  5792   001F60  EFAB  F00F         	goto	l197
  5793   001F64                     u7310:
  5794   001F64                     
  5795                           ;DAC.c: 45:             printf("%d, \r",((ADRESH<<8)|ADRESL));
  5796   001F64  0EF1               	movlw	low STR_19
  5797   001F66  0100               	movlb	0	; () banked
  5798   001F68  6FB4               	movwf	printf@fmt& (0+255),b
  5799   001F6A  0EFF               	movlw	high STR_19
  5800   001F6C  6FB5               	movwf	(printf@fmt+1)& (0+255),b
  5801   001F6E  50C3               	movf	195,w,c	;volatile
  5802   001F70  CFC4 F0BA          	movff	4036,??_DAC_main	;volatile
  5803   001F74  6BBB               	clrf	(??_DAC_main+1)& (0+255),b
  5804   001F76  C0BA  F0BB         	movff	??_DAC_main,??_DAC_main+1
  5805   001F7A  6BBA               	clrf	??_DAC_main& (0+255),b
  5806   001F7C  11BA               	iorwf	??_DAC_main& (0+255),w,b
  5807   001F7E  6FB6               	movwf	(?_printf+2)& (0+255),b
  5808   001F80  51BB               	movf	(??_DAC_main+1)& (0+255),w,b
  5809   001F82  6FB7               	movwf	(?_printf+3)& (0+255),b
  5810   001F84  ECD8  F021         	call	_printf	;wreg free
  5811   001F88                     l6537:
  5812                           
  5813                           ;DAC.c: 48:         ADCON0bits.CHS = 4;
  5814   001F88  50C2               	movf	194,w,c	;volatile
  5815   001F8A  0B83               	andlw	-125
  5816   001F8C  0910               	iorlw	16
  5817   001F8E  6EC2               	movwf	194,c	;volatile
  5818   001F90                     
  5819                           ;DAC.c: 49:         GODONE = 1;
  5820   001F90  82C2               	bsf	4034,1,c	;volatile
  5821   001F92                     l200:
  5822   001F92  B2C2               	btfsc	4034,1,c	;volatile
  5823   001F94  EFCE  F00F         	goto	u7321
  5824   001F98  EFD0  F00F         	goto	u7320
  5825   001F9C                     u7321:
  5826   001F9C  EFC9  F00F         	goto	l200
  5827   001FA0                     u7320:
  5828   001FA0                     
  5829                           ;DAC.c: 51:         data_pot1 = (uint16_t)(ADRESH<<8) | ADRESL;
  5830   001FA0  50C4               	movf	196,w,c	;volatile
  5831   001FA2  0100               	movlb	0	; () banked
  5832   001FA4  6FBA               	movwf	??_DAC_main& (0+255),b
  5833   001FA6  50C3               	movf	195,w,c	;volatile
  5834   001FA8  6FBD               	movwf	DAC_main@data_pot1& (0+255),b
  5835   001FAA  C0BA  F0BE         	movff	??_DAC_main,DAC_main@data_pot1+1
  5836   001FAE                     
  5837                           ; BSR set to: 0
  5838                           ;DAC.c: 52:         A = (data_pot1/(float)1023)*(255-50)+50;
  5839   001FAE  0E00               	movlw	0
  5840   001FB0  6E46               	movwf	___fladd@a^0,c
  5841   001FB2  0E00               	movlw	0
  5842   001FB4  6E47               	movwf	(___fladd@a+1)^0,c
  5843   001FB6  0E48               	movlw	72
  5844   001FB8  6E48               	movwf	(___fladd@a+2)^0,c
  5845   001FBA  0E42               	movlw	66
  5846   001FBC  6E49               	movwf	(___fladd@a+3)^0,c
  5847   001FBE  0E00               	movlw	0
  5848   001FC0  6E2D               	movwf	___flmul@a^0,c
  5849   001FC2  0E00               	movlw	0
  5850   001FC4  6E2E               	movwf	(___flmul@a+1)^0,c
  5851   001FC6  0E4D               	movlw	77
  5852   001FC8  6E2F               	movwf	(___flmul@a+2)^0,c
  5853   001FCA  0E43               	movlw	67
  5854   001FCC  6E30               	movwf	(___flmul@a+3)^0,c
  5855   001FCE  0E00               	movlw	0
  5856   001FD0  6E14               	movwf	___fldiv@a^0,c
  5857   001FD2  0EC0               	movlw	192
  5858   001FD4  6E15               	movwf	(___fldiv@a+1)^0,c
  5859   001FD6  0E7F               	movlw	127
  5860   001FD8  6E16               	movwf	(___fldiv@a+2)^0,c
  5861   001FDA  0E44               	movlw	68
  5862   001FDC  6E17               	movwf	(___fldiv@a+3)^0,c
  5863   001FDE  C0BD  F002         	movff	DAC_main@data_pot1,___xxtofl@val
  5864   001FE2  C0BE  F003         	movff	DAC_main@data_pot1+1,___xxtofl@val+1
  5865   001FE6  6A04               	clrf	(___xxtofl@val+2)^0,c
  5866   001FE8  6A05               	clrf	(___xxtofl@val+3)^0,c
  5867   001FEA  0E00               	movlw	0
  5868   001FEC  ECD1  F014         	call	___xxtofl
  5869   001FF0  C002  F010         	movff	?___xxtofl,___fldiv@b
  5870   001FF4  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  5871   001FF8  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  5872   001FFC  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  5873   002000  EC6F  F00A         	call	___fldiv	;wreg free
  5874   002004  C010  F029         	movff	?___fldiv,___flmul@b
  5875   002008  C011  F02A         	movff	?___fldiv+1,___flmul@b+1
  5876   00200C  C012  F02B         	movff	?___fldiv+2,___flmul@b+2
  5877   002010  C013  F02C         	movff	?___fldiv+3,___flmul@b+3
  5878   002014  EC5A  F008         	call	___flmul	;wreg free
  5879   002018  C029  F042         	movff	?___flmul,___fladd@b
  5880   00201C  C02A  F043         	movff	?___flmul+1,___fladd@b+1
  5881   002020  C02B  F044         	movff	?___flmul+2,___fladd@b+2
  5882   002024  C02C  F045         	movff	?___flmul+3,___fladd@b+3
  5883   002028  ECFA  F005         	call	___fladd	;wreg free
  5884   00202C  C042  F060         	movff	?___fladd,___fltol@f1
  5885   002030  C043  F061         	movff	?___fladd+1,___fltol@f1+1
  5886   002034  C044  F062         	movff	?___fladd+2,___fltol@f1+2
  5887   002038  C045  F063         	movff	?___fladd+3,___fltol@f1+3
  5888   00203C  ECF9  F018         	call	___fltol	;wreg free
  5889   002040  C060  F0C1         	movff	?___fltol,DAC_main@A
  5890   002044  C061  F0C2         	movff	?___fltol+1,DAC_main@A+1
  5891   002048                     
  5892                           ;DAC.c: 54:         ADCON0bits.CHS = 5;
  5893   002048  50C2               	movf	194,w,c	;volatile
  5894   00204A  0B83               	andlw	-125
  5895   00204C  0914               	iorlw	20
  5896   00204E  6EC2               	movwf	194,c	;volatile
  5897   002050                     
  5898                           ;DAC.c: 55:         GODONE = 1;
  5899   002050  82C2               	bsf	4034,1,c	;volatile
  5900   002052                     l203:
  5901   002052  B2C2               	btfsc	4034,1,c	;volatile
  5902   002054  EF2E  F010         	goto	u7331
  5903   002058  EF30  F010         	goto	u7330
  5904   00205C                     u7331:
  5905   00205C  EF29  F010         	goto	l203
  5906   002060                     u7330:
  5907   002060                     
  5908                           ;DAC.c: 57:         data_pot2 = (uint16_t)(ADRESH<<8) | ADRESL;
  5909   002060  50C4               	movf	196,w,c	;volatile
  5910   002062  0100               	movlb	0	; () banked
  5911   002064  6FBA               	movwf	??_DAC_main& (0+255),b
  5912   002066  50C3               	movf	195,w,c	;volatile
  5913   002068  6FBF               	movwf	DAC_main@data_pot2& (0+255),b
  5914   00206A  C0BA  F0C0         	movff	??_DAC_main,DAC_main@data_pot2+1
  5915   00206E                     
  5916                           ; BSR set to: 0
  5917                           ;DAC.c: 58:         freq = (data_pot2/(float)1023)*(10000 - 10) + 10;
  5918   00206E  0E00               	movlw	0
  5919   002070  6E46               	movwf	___fladd@a^0,c
  5920   002072  0E00               	movlw	0
  5921   002074  6E47               	movwf	(___fladd@a+1)^0,c
  5922   002076  0E20               	movlw	32
  5923   002078  6E48               	movwf	(___fladd@a+2)^0,c
  5924   00207A  0E41               	movlw	65
  5925   00207C  6E49               	movwf	(___fladd@a+3)^0,c
  5926   00207E  0E00               	movlw	0
  5927   002080  6E2D               	movwf	___flmul@a^0,c
  5928   002082  0E18               	movlw	24
  5929   002084  6E2E               	movwf	(___flmul@a+1)^0,c
  5930   002086  0E1C               	movlw	28
  5931   002088  6E2F               	movwf	(___flmul@a+2)^0,c
  5932   00208A  0E46               	movlw	70
  5933   00208C  6E30               	movwf	(___flmul@a+3)^0,c
  5934   00208E  0E00               	movlw	0
  5935   002090  6E14               	movwf	___fldiv@a^0,c
  5936   002092  0EC0               	movlw	192
  5937   002094  6E15               	movwf	(___fldiv@a+1)^0,c
  5938   002096  0E7F               	movlw	127
  5939   002098  6E16               	movwf	(___fldiv@a+2)^0,c
  5940   00209A  0E44               	movlw	68
  5941   00209C  6E17               	movwf	(___fldiv@a+3)^0,c
  5942   00209E  C0BF  F002         	movff	DAC_main@data_pot2,___xxtofl@val
  5943   0020A2  C0C0  F003         	movff	DAC_main@data_pot2+1,___xxtofl@val+1
  5944   0020A6  6A04               	clrf	(___xxtofl@val+2)^0,c
  5945   0020A8  6A05               	clrf	(___xxtofl@val+3)^0,c
  5946   0020AA  0E00               	movlw	0
  5947   0020AC  ECD1  F014         	call	___xxtofl
  5948   0020B0  C002  F010         	movff	?___xxtofl,___fldiv@b
  5949   0020B4  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  5950   0020B8  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  5951   0020BC  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  5952   0020C0  EC6F  F00A         	call	___fldiv	;wreg free
  5953   0020C4  C010  F029         	movff	?___fldiv,___flmul@b
  5954   0020C8  C011  F02A         	movff	?___fldiv+1,___flmul@b+1
  5955   0020CC  C012  F02B         	movff	?___fldiv+2,___flmul@b+2
  5956   0020D0  C013  F02C         	movff	?___fldiv+3,___flmul@b+3
  5957   0020D4  EC5A  F008         	call	___flmul	;wreg free
  5958   0020D8  C029  F042         	movff	?___flmul,___fladd@b
  5959   0020DC  C02A  F043         	movff	?___flmul+1,___fladd@b+1
  5960   0020E0  C02B  F044         	movff	?___flmul+2,___fladd@b+2
  5961   0020E4  C02C  F045         	movff	?___flmul+3,___fladd@b+3
  5962   0020E8  ECFA  F005         	call	___fladd	;wreg free
  5963   0020EC  C042  F060         	movff	?___fladd,___fltol@f1
  5964   0020F0  C043  F061         	movff	?___fladd+1,___fltol@f1+1
  5965   0020F4  C044  F062         	movff	?___fladd+2,___fltol@f1+2
  5966   0020F8  C045  F063         	movff	?___fladd+3,___fltol@f1+3
  5967   0020FC  ECF9  F018         	call	___fltol	;wreg free
  5968   002100  C060  F0C3         	movff	?___fltol,DAC_main@freq
  5969   002104  C061  F0C4         	movff	?___fltol+1,DAC_main@freq+1
  5970   002108                     
  5971                           ;DAC.c: 60:         if(buttons.btn4_state){
  5972   002108  0100               	movlb	0	; () banked
  5973   00210A  51F7               	movf	(_buttons+7)& (0+255),w,b	;volatile
  5974   00210C  B4D8               	btfsc	status,2,c
  5975   00210E  EF8B  F010         	goto	u7341
  5976   002112  EF8D  F010         	goto	u7340
  5977   002116                     u7341:
  5978   002116  EF5F  F00F         	goto	l6513
  5979   00211A                     u7340:
  5980   00211A                     
  5981                           ; BSR set to: 0
  5982                           ;DAC.c: 61:             buttons.btn4_state = 0;
  5983   00211A  0E00               	movlw	0
  5984   00211C  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
  5985   00211E                     
  5986                           ; BSR set to: 0
  5987                           ;DAC.c: 62:             TMR1ON = 0;
  5988   00211E  90CD               	bcf	4045,0,c	;volatile
  5989   002120                     
  5990                           ; BSR set to: 0
  5991                           ;DAC.c: 63:             SSP1CON1bits.SSPEN = 0;
  5992   002120  9AC6               	bcf	198,5,c	;volatile
  5993   002122                     
  5994                           ; BSR set to: 0
  5995                           ;DAC.c: 64:             ADCON0bits.ADON = 0;
  5996   002122  90C2               	bcf	194,0,c	;volatile
  5997   002124                     
  5998                           ; BSR set to: 0
  5999                           ;DAC.c: 65:             RCSTA1bits.CREN = 0;
  6000   002124  98AB               	bcf	171,4,c	;volatile
  6001   002126                     
  6002                           ; BSR set to: 0
  6003                           ;DAC.c: 66:             TXSTA1bits.TXEN = 0;
  6004   002126  9AAC               	bcf	172,5,c	;volatile
  6005   002128                     
  6006                           ; BSR set to: 0
  6007   002128  0012               	return		;funcret
  6008   00212A                     __end_of_DAC_main:
  6009                           	callstack 0
  6010                           
  6011 ;; *************** function _printf *****************
  6012 ;; Defined at:
  6013 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  fmt             2   84[BANK0 ] PTR const unsigned char 
  6016 ;;		 -> STR_19(6), 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  ap              2   88[BANK0 ] PTR void [1]
  6019 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6020 ;;  ret             2    0        int 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  2   84[BANK0 ] int 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6030 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;Total ram usage:        6 bytes
  6035 ;; Hardware stack levels used: 1
  6036 ;; Hardware stack levels required when called: 8
  6037 ;; This function calls:
  6038 ;;		_vfprintf
  6039 ;; This function is called by:
  6040 ;;		_DAC_main
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text20
  6045   0043B0                     __ptext20:
  6046                           	callstack 0
  6047   0043B0                     _printf:
  6048                           	callstack 21
  6049   0043B0  0EB6               	movlw	low (?_printf+2)
  6050   0043B2  0100               	movlb	0	; () banked
  6051   0043B4  6FB8               	movwf	printf@ap& (0+255),b
  6052   0043B6  0E00               	movlw	high (?_printf+2)
  6053   0043B8  6FB9               	movwf	(printf@ap+1)& (0+255),b
  6054   0043BA                     
  6055                           ; BSR set to: 0
  6056   0043BA  0E00               	movlw	0
  6057   0043BC  6FAC               	movwf	vfprintf@fp& (0+255),b
  6058   0043BE  0E00               	movlw	0
  6059   0043C0  6FAD               	movwf	(vfprintf@fp+1)& (0+255),b
  6060   0043C2  C0B4  F0AE         	movff	printf@fmt,vfprintf@fmt
  6061   0043C6  C0B5  F0AF         	movff	printf@fmt+1,vfprintf@fmt+1
  6062   0043CA  0EB8               	movlw	low printf@ap
  6063   0043CC  6FB0               	movwf	vfprintf@ap& (0+255),b
  6064   0043CE  0E00               	movlw	high printf@ap
  6065   0043D0  6FB1               	movwf	(vfprintf@ap+1)& (0+255),b
  6066   0043D2  EC2A  F020         	call	_vfprintf	;wreg free
  6067   0043D6  0012               	return		;funcret
  6068   0043D8                     __end_of_printf:
  6069                           	callstack 0
  6070                           
  6071 ;; *************** function _DAC_Write *****************
  6072 ;; Defined at:
  6073 ;;		line 127 in file "DAC.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  data            1    wreg     unsigned char 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  data            1    3[COMRAM] unsigned char 
  6078 ;;  lsb             1    2[COMRAM] unsigned char 
  6079 ;;  msb             1    1[COMRAM] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;Total ram usage:        3 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 1
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_DAC_main
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text21
  6104   00425C                     __ptext21:
  6105                           	callstack 0
  6106   00425C                     _DAC_Write:
  6107                           	callstack 28
  6108                           
  6109                           ;incstack = 0
  6110                           ;DAC_Write@data stored from wreg
  6111   00425C  6E04               	movwf	DAC_Write@data^0,c
  6112   00425E                     
  6113                           ;DAC.c: 129:     uint8_t msb, lsb;;DAC.c: 130:     msb = 0b00110000 | (data>>4);
  6114   00425E  3804               	swapf	DAC_Write@data^0,w,c
  6115   004260  0B0F               	andlw	15
  6116   004262  0930               	iorlw	48
  6117   004264  6E02               	movwf	DAC_Write@msb^0,c
  6118                           
  6119                           ;DAC.c: 131:     lsb = (data<<4) & 0xF0;
  6120   004266  3804               	swapf	DAC_Write@data^0,w,c
  6121   004268  0BF0               	andlw	240
  6122   00426A  0BF0               	andlw	240
  6123   00426C  6E03               	movwf	DAC_Write@lsb^0,c
  6124   00426E                     
  6125                           ;DAC.c: 133:     LATBbits.LATB3 = 0;
  6126   00426E  968A               	bcf	138,3,c	;volatile
  6127   004270                     
  6128                           ;DAC.c: 135:     PIR1bits.SSPIF = 0;
  6129   004270  969E               	bcf	158,3,c	;volatile
  6130   004272                     
  6131                           ;DAC.c: 137:     SSPBUF = msb;
  6132   004272  C002  FFC9         	movff	DAC_Write@msb,4041	;volatile
  6133   004276                     l215:
  6134   004276  A69E               	btfss	3998,3,c	;volatile
  6135   004278  EF40  F021         	goto	u5281
  6136   00427C  EF42  F021         	goto	u5280
  6137   004280                     u5281:
  6138   004280  EF3B  F021         	goto	l215
  6139   004284                     u5280:
  6140   004284                     
  6141                           ;DAC.c: 140:     PIR1bits.SSPIF = 0;
  6142   004284  969E               	bcf	158,3,c	;volatile
  6143                           
  6144                           ;DAC.c: 141:     SSPBUF = lsb;
  6145   004286  C003  FFC9         	movff	DAC_Write@lsb,4041	;volatile
  6146   00428A                     l218:
  6147   00428A  A69E               	btfss	3998,3,c	;volatile
  6148   00428C  EF4A  F021         	goto	u5291
  6149   004290  EF4C  F021         	goto	u5290
  6150   004294                     u5291:
  6151   004294  EF45  F021         	goto	l218
  6152   004298                     u5290:
  6153   004298                     
  6154                           ;DAC.c: 144:     LATBbits.LATB3 = 1;
  6155   004298  868A               	bsf	138,3,c	;volatile
  6156   00429A  0012               	return		;funcret
  6157   00429C                     __end_of_DAC_Write:
  6158                           	callstack 0
  6159                           
  6160 ;; *************** function _DAC_Init *****************
  6161 ;; Defined at:
  6162 ;;		line 74 in file "DAC.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;Total ram usage:        0 bytes
  6181 ;; Hardware stack levels used: 1
  6182 ;; Hardware stack levels required when called: 1
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_DAC_main
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text22
  6191   003F88                     __ptext22:
  6192                           	callstack 0
  6193   003F88                     _DAC_Init:
  6194                           	callstack 28
  6195   003F88                     
  6196                           ;DAC.c: 77:     ANSELC = 0x00;
  6197   003F88  0E00               	movlw	0
  6198   003F8A  010F               	movlb	15	; () banked
  6199   003F8C  6F3A               	movwf	58,b	;volatile
  6200   003F8E                     
  6201                           ; BSR set to: 15
  6202                           ;DAC.c: 78:     TRISCbits.TRISC3 = 0;
  6203   003F8E  9694               	bcf	148,3,c	;volatile
  6204   003F90                     
  6205                           ; BSR set to: 15
  6206                           ;DAC.c: 79:     TRISCbits.TRISC5 = 0;
  6207   003F90  9A94               	bcf	148,5,c	;volatile
  6208   003F92                     
  6209                           ; BSR set to: 15
  6210                           ;DAC.c: 80:     TRISBbits.TRISB3 = 0;
  6211   003F92  9693               	bcf	147,3,c	;volatile
  6212   003F94                     
  6213                           ; BSR set to: 15
  6214                           ;DAC.c: 82:     LATBbits.LATB3 = 1;
  6215   003F94  868A               	bsf	138,3,c	;volatile
  6216                           
  6217                           ;DAC.c: 84:     SSP1CON1bits.SSPM = 0b1010;
  6218   003F96  50C6               	movf	198,w,c	;volatile
  6219   003F98  0BF0               	andlw	-16
  6220   003F9A  090A               	iorlw	10
  6221   003F9C  6EC6               	movwf	198,c	;volatile
  6222                           
  6223                           ;DAC.c: 86:     SSP1ADD = 199;
  6224   003F9E  0EC7               	movlw	199
  6225   003FA0  6EC8               	movwf	200,c	;volatile
  6226   003FA2                     
  6227                           ; BSR set to: 15
  6228                           ;DAC.c: 88:     SSP1STATbits.CKE = 1;
  6229   003FA2  8CC7               	bsf	199,6,c	;volatile
  6230   003FA4                     
  6231                           ; BSR set to: 15
  6232                           ;DAC.c: 90:     SSP1CON1bits.SSPEN = 1;
  6233   003FA4  8AC6               	bsf	198,5,c	;volatile
  6234   003FA6                     
  6235                           ; BSR set to: 15
  6236                           ;DAC.c: 93:     ANSELBbits.ANSB0 = 1;
  6237   003FA6  8139               	bsf	57,0,b	;volatile
  6238   003FA8                     
  6239                           ; BSR set to: 15
  6240                           ;DAC.c: 94:     ANSELAbits.ANSA5 = 1;
  6241   003FA8  8B38               	bsf	56,5,b	;volatile
  6242   003FAA                     
  6243                           ; BSR set to: 15
  6244                           ;DAC.c: 95:     ANSELEbits.ANSE0 = 1;
  6245   003FAA  813C               	bsf	60,0,b	;volatile
  6246   003FAC                     
  6247                           ; BSR set to: 15
  6248                           ;DAC.c: 97:     TRISAbits.TRISA5 = 1;
  6249   003FAC  8A92               	bsf	146,5,c	;volatile
  6250   003FAE                     
  6251                           ; BSR set to: 15
  6252                           ;DAC.c: 98:     TRISEbits.TRISE0 = 1;
  6253   003FAE  8096               	bsf	150,0,c	;volatile
  6254                           
  6255                           ;DAC.c: 100:     ADCON2bits.ADCS = 0b110;
  6256   003FB0  50C0               	movf	192,w,c	;volatile
  6257   003FB2  0BF8               	andlw	-8
  6258   003FB4  0906               	iorlw	6
  6259   003FB6  6EC0               	movwf	192,c	;volatile
  6260                           
  6261                           ;DAC.c: 101:     ADCON0bits.CHS = 4;
  6262   003FB8  50C2               	movf	194,w,c	;volatile
  6263   003FBA  0B83               	andlw	-125
  6264   003FBC  0910               	iorlw	16
  6265   003FBE  6EC2               	movwf	194,c	;volatile
  6266   003FC0                     
  6267                           ; BSR set to: 15
  6268                           ;DAC.c: 102:     ADCON2bits.ADFM = 1;
  6269   003FC0  8EC0               	bsf	192,7,c	;volatile
  6270                           
  6271                           ;DAC.c: 103:     ADCON2bits.ACQT = 0b110;
  6272   003FC2  50C0               	movf	192,w,c	;volatile
  6273   003FC4  0BC7               	andlw	-57
  6274   003FC6  0930               	iorlw	48
  6275   003FC8  6EC0               	movwf	192,c	;volatile
  6276   003FCA                     
  6277                           ; BSR set to: 15
  6278                           ;DAC.c: 105:     ADCON0bits.ADON = 1;
  6279   003FCA  80C2               	bsf	194,0,c	;volatile
  6280                           
  6281                           ;DAC.c: 108:     SPBRG1 = 51;
  6282   003FCC  0E33               	movlw	51
  6283   003FCE  6EAF               	movwf	175,c	;volatile
  6284   003FD0                     
  6285                           ; BSR set to: 15
  6286                           ;DAC.c: 110:     TRISCbits.TRISC6 = 1;
  6287   003FD0  8C94               	bsf	148,6,c	;volatile
  6288   003FD2                     
  6289                           ; BSR set to: 15
  6290                           ;DAC.c: 111:     TRISCbits.TRISC7 = 1;
  6291   003FD2  8E94               	bsf	148,7,c	;volatile
  6292   003FD4                     
  6293                           ; BSR set to: 15
  6294                           ;DAC.c: 113:     RCSTA1bits.SPEN = 1;
  6295   003FD4  8EAB               	bsf	171,7,c	;volatile
  6296   003FD6                     
  6297                           ; BSR set to: 15
  6298                           ;DAC.c: 114:     RCSTA1bits.CREN = 1;
  6299   003FD6  88AB               	bsf	171,4,c	;volatile
  6300   003FD8                     
  6301                           ; BSR set to: 15
  6302                           ;DAC.c: 115:     TXSTA1bits.TXEN = 1;
  6303   003FD8  8AAC               	bsf	172,5,c	;volatile
  6304                           
  6305                           ;DAC.c: 118:     T1CONbits.TMR1CS = 0b00;
  6306   003FDA  0E3F               	movlw	-193
  6307   003FDC  16CD               	andwf	205,f,c	;volatile
  6308                           
  6309                           ;DAC.c: 119:     T1CONbits.T1CKPS = 0b11;
  6310   003FDE  0E30               	movlw	48
  6311   003FE0  12CD               	iorwf	205,f,c	;volatile
  6312   003FE2                     
  6313                           ; BSR set to: 15
  6314                           ;DAC.c: 120:     TMR1ON = 1;
  6315   003FE2  80CD               	bsf	4045,0,c	;volatile
  6316                           
  6317                           ;DAC.c: 122:     TMR1 = 0;
  6318   003FE4  0E00               	movlw	0
  6319   003FE6  6ECF               	movwf	207,c	;volatile
  6320   003FE8  0E00               	movlw	0
  6321   003FEA  6ECE               	movwf	206,c	;volatile
  6322   003FEC                     
  6323                           ; BSR set to: 15
  6324   003FEC  0012               	return		;funcret
  6325   003FEE                     __end_of_DAC_Init:
  6326                           	callstack 0
  6327                           
  6328 ;; *************** function _ADC_main *****************
  6329 ;; Defined at:
  6330 ;;		line 13 in file "ADC.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;		None
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  txt_pot2       17   17[BANK1 ] unsigned char [17]
  6335 ;;  txt_pot1       17    0[BANK1 ] unsigned char [17]
  6336 ;;  pot2            4   38[BANK1 ] float 
  6337 ;;  pot1            4   34[BANK1 ] float 
  6338 ;;  data_pot2       2   44[BANK1 ] unsigned short 
  6339 ;;  data_pot1       2   42[BANK1 ] unsigned short 
  6340 ;;  change          1   46[BANK1 ] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Totals:         0       2      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;Total ram usage:       49 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 9
  6357 ;; This function calls:
  6358 ;;		_ADC_Init
  6359 ;;		_LCD_ShowString
  6360 ;;		___fldiv
  6361 ;;		___flmul
  6362 ;;		___xxtofl
  6363 ;;		_sprintf
  6364 ;; This function is called by:
  6365 ;;		_main
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text23
  6370   0027E6                     __ptext23:
  6371                           	callstack 0
  6372   0027E6                     _ADC_main:
  6373                           	callstack 21
  6374   0027E6                     
  6375                           ;ADC.c: 15:     ADC_Init();
  6376   0027E6  ECAA  F021         	call	_ADC_Init	;wreg free
  6377   0027EA                     
  6378                           ;ADC.c: 17:     uint16_t data_pot1;;ADC.c: 18:     uint16_t data_pot2;;ADC.c: 20:     fl
      +                          oat pot1;;ADC.c: 21:     float pot2;;ADC.c: 23:     char txt_pot1[17];;ADC.c: 24:     ch
      +                          ar txt_pot2[17];;ADC.c: 26:     char change = 1;
  6379   0027EA  0E01               	movlw	1
  6380   0027EC  0101               	movlb	1	; () banked
  6381   0027EE  6FF5               	movwf	ADC_main@change& (0+255),b
  6382   0027F0                     l6465:
  6383                           
  6384                           ;ADC.c: 30:         GODONE = 1;
  6385   0027F0  82C2               	bsf	4034,1,c	;volatile
  6386   0027F2                     l113:
  6387   0027F2  B2C2               	btfsc	4034,1,c	;volatile
  6388   0027F4  EFFE  F013         	goto	u7231
  6389   0027F8  EF00  F014         	goto	u7230
  6390   0027FC                     u7231:
  6391   0027FC  EFF9  F013         	goto	l113
  6392   002800                     u7230:
  6393   002800                     
  6394                           ;ADC.c: 33:         if(change){
  6395   002800  0101               	movlb	1	; () banked
  6396   002802  51F5               	movf	ADC_main@change& (0+255),w,b
  6397   002804  B4D8               	btfsc	status,2,c
  6398   002806  EF07  F014         	goto	u7241
  6399   00280A  EF09  F014         	goto	u7240
  6400   00280E                     u7241:
  6401   00280E  EF4C  F014         	goto	l6475
  6402   002812                     u7240:
  6403   002812                     
  6404                           ; BSR set to: 1
  6405                           ;ADC.c: 34:             data_pot1 = (uint16_t)(ADRESH << 8) | ADRESL;
  6406   002812  50C4               	movf	196,w,c	;volatile
  6407   002814  0100               	movlb	0	; () banked
  6408   002816  6FCA               	movwf	??_ADC_main& (0+255),b
  6409   002818  50C3               	movf	195,w,c	;volatile
  6410   00281A  0101               	movlb	1	; () banked
  6411   00281C  6FF1               	movwf	ADC_main@data_pot1& (0+255),b
  6412   00281E  C0CA  F1F2         	movff	??_ADC_main,ADC_main@data_pot1+1
  6413   002822                     
  6414                           ; BSR set to: 1
  6415                           ;ADC.c: 35:             pot1 = (data_pot1/(float)1023)*3.3;
  6416   002822  0E00               	movlw	0
  6417   002824  6E14               	movwf	___fldiv@a^0,c
  6418   002826  0EC0               	movlw	192
  6419   002828  6E15               	movwf	(___fldiv@a+1)^0,c
  6420   00282A  0E7F               	movlw	127
  6421   00282C  6E16               	movwf	(___fldiv@a+2)^0,c
  6422   00282E  0E44               	movlw	68
  6423   002830  6E17               	movwf	(___fldiv@a+3)^0,c
  6424   002832  C1F1  F002         	movff	ADC_main@data_pot1,___xxtofl@val
  6425   002836  C1F2  F003         	movff	ADC_main@data_pot1+1,___xxtofl@val+1
  6426   00283A  6A04               	clrf	(___xxtofl@val+2)^0,c
  6427   00283C  6A05               	clrf	(___xxtofl@val+3)^0,c
  6428   00283E  0E00               	movlw	0
  6429   002840  ECD1  F014         	call	___xxtofl
  6430   002844  C002  F010         	movff	?___xxtofl,___fldiv@b
  6431   002848  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  6432   00284C  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  6433   002850  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  6434   002854  EC6F  F00A         	call	___fldiv	;wreg free
  6435   002858  C010  F029         	movff	?___fldiv,___flmul@b
  6436   00285C  C011  F02A         	movff	?___fldiv+1,___flmul@b+1
  6437   002860  C012  F02B         	movff	?___fldiv+2,___flmul@b+2
  6438   002864  C013  F02C         	movff	?___fldiv+3,___flmul@b+3
  6439   002868  0E33               	movlw	51
  6440   00286A  6E2D               	movwf	___flmul@a^0,c
  6441   00286C  0E33               	movlw	51
  6442   00286E  6E2E               	movwf	(___flmul@a+1)^0,c
  6443   002870  0E53               	movlw	83
  6444   002872  6E2F               	movwf	(___flmul@a+2)^0,c
  6445   002874  0E40               	movlw	64
  6446   002876  6E30               	movwf	(___flmul@a+3)^0,c
  6447   002878  EC5A  F008         	call	___flmul	;wreg free
  6448   00287C  C029  F1E9         	movff	?___flmul,ADC_main@pot1
  6449   002880  C02A  F1EA         	movff	?___flmul+1,ADC_main@pot1+1
  6450   002884  C02B  F1EB         	movff	?___flmul+2,ADC_main@pot1+2
  6451   002888  C02C  F1EC         	movff	?___flmul+3,ADC_main@pot1+3
  6452   00288C                     
  6453                           ;ADC.c: 36:             ADCON0bits.CHS = 5;
  6454   00288C  50C2               	movf	194,w,c	;volatile
  6455   00288E  0B83               	andlw	-125
  6456   002890  0914               	iorlw	20
  6457   002892  6EC2               	movwf	194,c	;volatile
  6458                           
  6459                           ;ADC.c: 37:         }
  6460   002894  EF8D  F014         	goto	l6481
  6461   002898                     l6475:
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;ADC.c: 39:             data_pot2 = (uint16_t)(ADRESH << 8) | ADRESL;
  6465   002898  50C4               	movf	196,w,c	;volatile
  6466   00289A  0100               	movlb	0	; () banked
  6467   00289C  6FCA               	movwf	??_ADC_main& (0+255),b
  6468   00289E  50C3               	movf	195,w,c	;volatile
  6469   0028A0  0101               	movlb	1	; () banked
  6470   0028A2  6FF3               	movwf	ADC_main@data_pot2& (0+255),b
  6471   0028A4  C0CA  F1F4         	movff	??_ADC_main,ADC_main@data_pot2+1
  6472   0028A8                     
  6473                           ; BSR set to: 1
  6474                           ;ADC.c: 40:             pot2 = (data_pot2/(float)1023)*3.3;
  6475   0028A8  0E00               	movlw	0
  6476   0028AA  6E14               	movwf	___fldiv@a^0,c
  6477   0028AC  0EC0               	movlw	192
  6478   0028AE  6E15               	movwf	(___fldiv@a+1)^0,c
  6479   0028B0  0E7F               	movlw	127
  6480   0028B2  6E16               	movwf	(___fldiv@a+2)^0,c
  6481   0028B4  0E44               	movlw	68
  6482   0028B6  6E17               	movwf	(___fldiv@a+3)^0,c
  6483   0028B8  C1F3  F002         	movff	ADC_main@data_pot2,___xxtofl@val
  6484   0028BC  C1F4  F003         	movff	ADC_main@data_pot2+1,___xxtofl@val+1
  6485   0028C0  6A04               	clrf	(___xxtofl@val+2)^0,c
  6486   0028C2  6A05               	clrf	(___xxtofl@val+3)^0,c
  6487   0028C4  0E00               	movlw	0
  6488   0028C6  ECD1  F014         	call	___xxtofl
  6489   0028CA  C002  F010         	movff	?___xxtofl,___fldiv@b
  6490   0028CE  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  6491   0028D2  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  6492   0028D6  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  6493   0028DA  EC6F  F00A         	call	___fldiv	;wreg free
  6494   0028DE  C010  F029         	movff	?___fldiv,___flmul@b
  6495   0028E2  C011  F02A         	movff	?___fldiv+1,___flmul@b+1
  6496   0028E6  C012  F02B         	movff	?___fldiv+2,___flmul@b+2
  6497   0028EA  C013  F02C         	movff	?___fldiv+3,___flmul@b+3
  6498   0028EE  0E33               	movlw	51
  6499   0028F0  6E2D               	movwf	___flmul@a^0,c
  6500   0028F2  0E33               	movlw	51
  6501   0028F4  6E2E               	movwf	(___flmul@a+1)^0,c
  6502   0028F6  0E53               	movlw	83
  6503   0028F8  6E2F               	movwf	(___flmul@a+2)^0,c
  6504   0028FA  0E40               	movlw	64
  6505   0028FC  6E30               	movwf	(___flmul@a+3)^0,c
  6506   0028FE  EC5A  F008         	call	___flmul	;wreg free
  6507   002902  C029  F1ED         	movff	?___flmul,ADC_main@pot2
  6508   002906  C02A  F1EE         	movff	?___flmul+1,ADC_main@pot2+1
  6509   00290A  C02B  F1EF         	movff	?___flmul+2,ADC_main@pot2+2
  6510   00290E  C02C  F1F0         	movff	?___flmul+3,ADC_main@pot2+3
  6511   002912                     
  6512                           ;ADC.c: 41:             ADCON0bits.CHS = 4;
  6513   002912  50C2               	movf	194,w,c	;volatile
  6514   002914  0B83               	andlw	-125
  6515   002916  0910               	iorlw	16
  6516   002918  6EC2               	movwf	194,c	;volatile
  6517   00291A                     l6481:
  6518                           
  6519                           ;ADC.c: 44:         change ^= 1;
  6520   00291A  0E01               	movlw	1
  6521   00291C  0101               	movlb	1	; () banked
  6522   00291E  1BF5               	xorwf	ADC_main@change& (0+255),f,b
  6523   002920                     
  6524                           ; BSR set to: 1
  6525                           ;ADC.c: 46:         sprintf(txt_pot1,"POT1:  %.1f V    ", pot1);
  6526   002920  0EC7               	movlw	low ADC_main@txt_pot1
  6527   002922  0100               	movlb	0	; () banked
  6528   002924  6FB4               	movwf	sprintf@s& (0+255),b
  6529   002926  0E01               	movlw	high ADC_main@txt_pot1
  6530   002928  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  6531   00292A  0E8C               	movlw	low STR_15
  6532   00292C  6FB6               	movwf	sprintf@fmt& (0+255),b
  6533   00292E  0EFF               	movlw	high STR_15
  6534   002930  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  6535   002932  C1E9  F0B8         	movff	ADC_main@pot1,?_sprintf+4
  6536   002936  C1EA  F0B9         	movff	ADC_main@pot1+1,?_sprintf+5
  6537   00293A  C1EB  F0BA         	movff	ADC_main@pot1+2,?_sprintf+6
  6538   00293E  C1EC  F0BB         	movff	ADC_main@pot1+3,?_sprintf+7
  6539   002942  EC53  F020         	call	_sprintf	;wreg free
  6540   002946                     
  6541                           ;ADC.c: 47:         sprintf(txt_pot2,"POT2:  %.1f V    ", pot2);
  6542   002946  0ED8               	movlw	low ADC_main@txt_pot2
  6543   002948  0100               	movlb	0	; () banked
  6544   00294A  6FB4               	movwf	sprintf@s& (0+255),b
  6545   00294C  0E01               	movlw	high ADC_main@txt_pot2
  6546   00294E  6FB5               	movwf	(sprintf@s+1)& (0+255),b
  6547   002950  0E9E               	movlw	low STR_16
  6548   002952  6FB6               	movwf	sprintf@fmt& (0+255),b
  6549   002954  0EFF               	movlw	high STR_16
  6550   002956  6FB7               	movwf	(sprintf@fmt+1)& (0+255),b
  6551   002958  C1ED  F0B8         	movff	ADC_main@pot2,?_sprintf+4
  6552   00295C  C1EE  F0B9         	movff	ADC_main@pot2+1,?_sprintf+5
  6553   002960  C1EF  F0BA         	movff	ADC_main@pot2+2,?_sprintf+6
  6554   002964  C1F0  F0BB         	movff	ADC_main@pot2+3,?_sprintf+7
  6555   002968  EC53  F020         	call	_sprintf	;wreg free
  6556   00296C                     
  6557                           ;ADC.c: 48:         LCD_ShowString(1,txt_pot1);
  6558   00296C  0EC7               	movlw	low ADC_main@txt_pot1
  6559   00296E  6E03               	movwf	LCD_ShowString@textData^0,c
  6560   002970  0E01               	movlw	high ADC_main@txt_pot1
  6561   002972  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  6562   002974  0E01               	movlw	1
  6563   002976  ECF2  F01C         	call	_LCD_ShowString
  6564   00297A                     
  6565                           ;ADC.c: 49:         LCD_ShowString(2,txt_pot2);
  6566   00297A  0ED8               	movlw	low ADC_main@txt_pot2
  6567   00297C  6E03               	movwf	LCD_ShowString@textData^0,c
  6568   00297E  0E01               	movlw	high ADC_main@txt_pot2
  6569   002980  6E04               	movwf	(LCD_ShowString@textData+1)^0,c
  6570   002982  0E02               	movlw	2
  6571   002984  ECF2  F01C         	call	_LCD_ShowString
  6572   002988                     
  6573                           ;ADC.c: 51:         if(buttons.btn4_state){
  6574   002988  0100               	movlb	0	; () banked
  6575   00298A  51F7               	movf	(_buttons+7)& (0+255),w,b	;volatile
  6576   00298C  B4D8               	btfsc	status,2,c
  6577   00298E  EFCB  F014         	goto	u7251
  6578   002992  EFCD  F014         	goto	u7250
  6579   002996                     u7251:
  6580   002996  EFF8  F013         	goto	l6465
  6581   00299A                     u7250:
  6582   00299A                     
  6583                           ; BSR set to: 0
  6584                           ;ADC.c: 52:             ADON = 0;
  6585   00299A  90C2               	bcf	4034,0,c	;volatile
  6586   00299C                     
  6587                           ; BSR set to: 0
  6588                           ;ADC.c: 53:             buttons.btn4_state = 0;
  6589   00299C  0E00               	movlw	0
  6590   00299E  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
  6591   0029A0                     
  6592                           ; BSR set to: 0
  6593   0029A0  0012               	return		;funcret
  6594   0029A2                     __end_of_ADC_main:
  6595                           	callstack 0
  6596                           
  6597 ;; *************** function _sprintf *****************
  6598 ;; Defined at:
  6599 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  s               2   84[BANK0 ] PTR unsigned char 
  6602 ;;		 -> PWM_main@txt(17), GAME_main@txt_g(17), ADC_main@txt_pot2(17), ADC_main@txt_pot1(17), 
  6603 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  6604 ;;		 -> STR_30(17), STR_29(17), STR_24(14), STR_22(21), 
  6605 ;;		 -> STR_16(18), STR_15(18), 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  f              12   94[BANK0 ] struct _IO_FILE
  6608 ;;  ap              2   92[BANK0 ] PTR void [1]
  6609 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6610 ;;  ret             2    0        int 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2   84[BANK0 ] int 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6620 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;Total ram usage:       22 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; Hardware stack levels required when called: 8
  6627 ;; This function calls:
  6628 ;;		_vfprintf
  6629 ;; This function is called by:
  6630 ;;		_ADC_main
  6631 ;;		_GAME_main
  6632 ;;		_PWM_main
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text24
  6637   0040A6                     __ptext24:
  6638                           	callstack 0
  6639   0040A6                     _sprintf:
  6640                           	callstack 21
  6641   0040A6  0EB8               	movlw	low (?_sprintf+4)
  6642   0040A8  0100               	movlb	0	; () banked
  6643   0040AA  6FBC               	movwf	sprintf@ap& (0+255),b
  6644   0040AC  0E00               	movlw	high (?_sprintf+4)
  6645   0040AE  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  6646   0040B0  C0B4  F0BE         	movff	sprintf@s,sprintf@f
  6647   0040B4  C0B5  F0BF         	movff	sprintf@s+1,sprintf@f+1
  6648   0040B8                     
  6649                           ; BSR set to: 0
  6650   0040B8  0E00               	movlw	0
  6651   0040BA  6FC2               	movwf	(sprintf@f+4)& (0+255),b
  6652   0040BC  0E00               	movlw	0
  6653   0040BE  6FC1               	movwf	(sprintf@f+3)& (0+255),b
  6654   0040C0                     
  6655                           ; BSR set to: 0
  6656   0040C0  0E00               	movlw	0
  6657   0040C2  6FC9               	movwf	(sprintf@f+11)& (0+255),b
  6658   0040C4  0E00               	movlw	0
  6659   0040C6  6FC8               	movwf	(sprintf@f+10)& (0+255),b
  6660   0040C8                     
  6661                           ; BSR set to: 0
  6662   0040C8  0EBE               	movlw	low sprintf@f
  6663   0040CA  6FAC               	movwf	vfprintf@fp& (0+255),b
  6664   0040CC  0E00               	movlw	high sprintf@f
  6665   0040CE  6FAD               	movwf	(vfprintf@fp+1)& (0+255),b
  6666   0040D0  C0B6  F0AE         	movff	sprintf@fmt,vfprintf@fmt
  6667   0040D4  C0B7  F0AF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6668   0040D8  0EBC               	movlw	low sprintf@ap
  6669   0040DA  6FB0               	movwf	vfprintf@ap& (0+255),b
  6670   0040DC  0E00               	movlw	high sprintf@ap
  6671   0040DE  6FB1               	movwf	(vfprintf@ap+1)& (0+255),b
  6672   0040E0  EC2A  F020         	call	_vfprintf	;wreg free
  6673   0040E4  0100               	movlb	0	; () banked
  6674   0040E6  51C1               	movf	(sprintf@f+3)& (0+255),w,b
  6675   0040E8  25B4               	addwf	sprintf@s& (0+255),w,b
  6676   0040EA  6ED9               	movwf	fsr2l,c
  6677   0040EC  51C2               	movf	(sprintf@f+4)& (0+255),w,b
  6678   0040EE  21B5               	addwfc	(sprintf@s+1)& (0+255),w,b
  6679   0040F0  6EDA               	movwf	fsr2h,c
  6680   0040F2  6ADF               	clrf	indf2,c
  6681   0040F4                     
  6682                           ; BSR set to: 0
  6683   0040F4  0012               	return		;funcret
  6684   0040F6                     __end_of_sprintf:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function _vfprintf *****************
  6688 ;; Defined at:
  6689 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  fp              2   76[BANK0 ] PTR struct _IO_FILE
  6692 ;;		 -> NULL(0), sprintf@f(12), 
  6693 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  6694 ;;		 -> STR_30(17), STR_29(17), STR_24(14), STR_22(21), 
  6695 ;;		 -> STR_19(6), STR_16(18), STR_15(18), 
  6696 ;;  ap              2   80[BANK0 ] PTR PTR void 
  6697 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  cfmt            2   82[BANK0 ] PTR unsigned char 
  6700 ;;		 -> STR_30(17), STR_29(17), STR_24(14), STR_22(21), 
  6701 ;;		 -> STR_19(6), STR_16(18), STR_15(18), 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  2   76[BANK0 ] int 
  6704 ;; Registers used:
  6705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6711 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;Total ram usage:        8 bytes
  6716 ;; Hardware stack levels used: 1
  6717 ;; Hardware stack levels required when called: 7
  6718 ;; This function calls:
  6719 ;;		_vfpfcnvrt
  6720 ;; This function is called by:
  6721 ;;		_sprintf
  6722 ;;		_printf
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text25
  6727   004054                     __ptext25:
  6728                           	callstack 0
  6729   004054                     _vfprintf:
  6730                           	callstack 21
  6731   004054                     
  6732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  6733   004054  C0AE  F0B2         	movff	vfprintf@fmt,vfprintf@cfmt
  6734   004058  C0AF  F0B3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6735                           
  6736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  6737   00405C  EF3F  F020         	goto	l6393
  6738   004060                     l6391:
  6739                           
  6740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6741   004060  C0AC  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  6742   004064  C0AD  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6743   004068  0EB2               	movlw	low vfprintf@cfmt
  6744   00406A  0100               	movlb	0	; () banked
  6745   00406C  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  6746   00406E  0E00               	movlw	high vfprintf@cfmt
  6747   004070  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6748   004072  C0B0  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  6749   004076  C0B1  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6750   00407A  EC3C  F00C         	call	_vfpfcnvrt	;wreg free
  6751   00407E                     l6393:
  6752                           
  6753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  6754   00407E  C0B2  FFF6         	movff	vfprintf@cfmt,tblptrl
  6755   004082  C0B3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6756   004086                     	if	0	;tblptru may be non-zero
  6757   004086                     	endif
  6758   004086                     	if	0	;tblptru may be non-zero
  6759   004086                     	endif
  6760   004086  0008               	tblrd		*
  6761   004088  50F5               	movf	tablat,w,c
  6762   00408A  0900               	iorlw	0
  6763   00408C  A4D8               	btfss	status,2,c
  6764   00408E  EF4B  F020         	goto	u7181
  6765   004092  EF4D  F020         	goto	u7180
  6766   004096                     u7181:
  6767   004096  EF30  F020         	goto	l6391
  6768   00409A                     u7180:
  6769   00409A                     
  6770                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  6771   00409A  0E00               	movlw	0
  6772   00409C  0100               	movlb	0	; () banked
  6773   00409E  6FAD               	movwf	(?_vfprintf+1)& (0+255),b
  6774   0040A0  0E00               	movlw	0
  6775   0040A2  6FAC               	movwf	?_vfprintf& (0+255),b
  6776   0040A4                     
  6777                           ; BSR set to: 0
  6778   0040A4  0012               	return		;funcret
  6779   0040A6                     __end_of_vfprintf:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function _vfpfcnvrt *****************
  6783 ;; Defined at:
  6784 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  6787 ;;		 -> NULL(0), sprintf@f(12), 
  6788 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  6789 ;;		 -> vfprintf@cfmt(2), 
  6790 ;;  ap              2   65[BANK0 ] PTR PTR void 
  6791 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  convarg         4   69[BANK0 ] struct .
  6794 ;;  cp              2   74[BANK0 ] PTR unsigned char 
  6795 ;;		 -> STR_30(17), STR_29(17), STR_24(14), STR_22(21), 
  6796 ;;		 -> STR_19(6), STR_16(18), STR_15(18), 
  6797 ;;  i               2    0        int 
  6798 ;;  done            2    0        int 
  6799 ;;  c               1   73[BANK0 ] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6809 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;Total ram usage:       15 bytes
  6814 ;; Hardware stack levels used: 1
  6815 ;; Hardware stack levels required when called: 6
  6816 ;; This function calls:
  6817 ;;		_dtoa
  6818 ;;		_efgtoa
  6819 ;;		_fputc
  6820 ;;		_read_prec_or_width
  6821 ;; This function is called by:
  6822 ;;		_vfprintf
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text26
  6827   001878                     __ptext26:
  6828                           	callstack 0
  6829   001878                     _vfpfcnvrt:
  6830                           	callstack 21
  6831   001878                     
  6832                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  6833   001878  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6834   00187C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6835   001880  CFDE FFF6          	movff	postinc2,tblptrl
  6836   001884  CFDD FFF7          	movff	postdec2,tblptrh
  6837   001888                     	if	0	;tblptru may be non-zero
  6838   001888                     	endif
  6839   001888                     	if	0	;tblptru may be non-zero
  6840   001888                     	endif
  6841   001888  0008               	tblrd		*
  6842   00188A  50F5               	movf	tablat,w,c
  6843   00188C  0A25               	xorlw	37
  6844   00188E  A4D8               	btfss	status,2,c
  6845   001890  EF4C  F00C         	goto	u7131
  6846   001894  EF4E  F00C         	goto	u7130
  6847   001898                     u7131:
  6848   001898  EFAD  F00D         	goto	l6365
  6849   00189C                     u7130:
  6850   00189C                     
  6851                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  6852   00189C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6853   0018A0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6854   0018A4  2ADE               	incf	postinc2,f,c
  6855   0018A6  0E00               	movlw	0
  6856   0018A8  22DD               	addwfc	postdec2,f,c
  6857   0018AA                     
  6858                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  6859   0018AA  0E00               	movlw	0
  6860   0018AC  6E59               	movwf	(_width+1)^0,c
  6861   0018AE  0E00               	movlw	0
  6862   0018B0  6E58               	movwf	_width^0,c
  6863   0018B2  C058  F0F8         	movff	_width,_flags
  6864   0018B6                     
  6865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  6866   0018B6  685A               	setf	_prec^0,c
  6867   0018B8  685B               	setf	(_prec+1)^0,c
  6868   0018BA                     
  6869                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  6870   0018BA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6871   0018BE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6872   0018C2  CFDE FFF6          	movff	postinc2,tblptrl
  6873   0018C6  CFDD FFF7          	movff	postdec2,tblptrh
  6874   0018CA                     	if	0	;tblptru may be non-zero
  6875   0018CA                     	endif
  6876   0018CA                     	if	0	;tblptru may be non-zero
  6877   0018CA                     	endif
  6878   0018CA  0008               	tblrd		*
  6879   0018CC  50F5               	movf	tablat,w,c
  6880   0018CE  0A2E               	xorlw	46
  6881   0018D0  A4D8               	btfss	status,2,c
  6882   0018D2  EF6D  F00C         	goto	u7141
  6883   0018D6  EF6F  F00C         	goto	u7140
  6884   0018DA                     u7141:
  6885   0018DA  EF84  F00C         	goto	l6315
  6886   0018DE                     u7140:
  6887   0018DE                     
  6888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  6889   0018DE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6890   0018E2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6891   0018E6  2ADE               	incf	postinc2,f,c
  6892   0018E8  0E00               	movlw	0
  6893   0018EA  22DD               	addwfc	postdec2,f,c
  6894   0018EC                     
  6895                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  6896   0018EC  C09F  F008         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6897   0018F0  C0A0  F009         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  6898   0018F4  C0A1  F00A         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6899   0018F8  C0A2  F00B         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  6900   0018FC  ECD0  F01B         	call	_read_prec_or_width	;wreg free
  6901   001900  C008  F05A         	movff	?_read_prec_or_width,_prec
  6902   001904  C009  F05B         	movff	?_read_prec_or_width+1,_prec+1
  6903   001908                     l6315:
  6904                           
  6905                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  6906   001908  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6907   00190C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6908   001910  CFDE F0AA          	movff	postinc2,vfpfcnvrt@cp
  6909   001914  CFDD F0AB          	movff	postdec2,vfpfcnvrt@cp+1
  6910   001918                     
  6911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6912   001918  C0AA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6913   00191C  C0AB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6914   001920                     	if	0	;tblptru may be non-zero
  6915   001920                     	endif
  6916   001920                     	if	0	;tblptru may be non-zero
  6917   001920                     	endif
  6918   001920  0008               	tblrd		*
  6919   001922  50F5               	movf	tablat,w,c
  6920   001924  0A64               	xorlw	100
  6921   001926  B4D8               	btfsc	status,2,c
  6922   001928  EF98  F00C         	goto	u7151
  6923   00192C  EF9A  F00C         	goto	u7150
  6924   001930                     u7151:
  6925   001930  EFA8  F00C         	goto	l6321
  6926   001934                     u7150:
  6927   001934  C0AA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6928   001938  C0AB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6929   00193C                     	if	0	;tblptru may be non-zero
  6930   00193C                     	endif
  6931   00193C                     	if	0	;tblptru may be non-zero
  6932   00193C                     	endif
  6933   00193C  0008               	tblrd		*
  6934   00193E  50F5               	movf	tablat,w,c
  6935   001940  0A69               	xorlw	105
  6936   001942  A4D8               	btfss	status,2,c
  6937   001944  EFA6  F00C         	goto	u7161
  6938   001948  EFA8  F00C         	goto	u7160
  6939   00194C                     u7161:
  6940   00194C  EFD7  F00C         	goto	l6327
  6941   001950                     u7160:
  6942   001950                     l6321:
  6943                           
  6944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6945   001950  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6946   001954  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6947   001958  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  6948   00195C  0E02               	movlw	2
  6949   00195E  26DE               	addwf	postinc2,f,c
  6950   001960  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  6951   001964  0E00               	movlw	0
  6952   001966  22DD               	addwfc	postdec2,f,c
  6953   001968  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6954   00196C  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6955   001970  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg
  6956   001974  CFDD F0A6          	movff	postdec2,vfpfcnvrt@convarg+1
  6957                           
  6958                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  6959   001978  0E01               	movlw	1
  6960   00197A  0100               	movlb	0	; () banked
  6961   00197C  25AA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6962   00197E  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  6963   001980  0E00               	movlw	0
  6964   001982  21AB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6965   001984  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6966   001986  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6967   00198A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6968   00198E  C0A3  FFDE         	movff	??_vfpfcnvrt,postinc2
  6969   001992  C0A4  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6970   001996                     
  6971                           ; BSR set to: 0
  6972                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6973   001996  C09D  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  6974   00199A  C09E  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6975   00199E  C0A5  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  6976   0019A2  C0A6  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6977   0019A6  ECAB  F015         	call	_dtoa	;wreg free
  6978   0019AA  EFC1  F00D         	goto	l1382
  6979   0019AE                     l6327:
  6980                           
  6981                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  6982   0019AE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6983   0019B2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6984   0019B6  CFDE F0AA          	movff	postinc2,vfpfcnvrt@cp
  6985   0019BA  CFDD F0AB          	movff	postdec2,vfpfcnvrt@cp+1
  6986   0019BE                     
  6987                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  6988   0019BE  C0AA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6989   0019C2  C0AB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6990   0019C6                     	if	0	;tblptru may be non-zero
  6991   0019C6                     	endif
  6992   0019C6                     	if	0	;tblptru may be non-zero
  6993   0019C6                     	endif
  6994   0019C6  0008               	tblrd		*
  6995   0019C8  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  6996                           
  6997                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  6998   0019CC  EFF4  F00C         	goto	l6339
  6999   0019D0                     l6331:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  7003   0019D0  4BAA               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7004   0019D2  2BAB               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7005                           
  7006                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  7007   0019D4  EF0E  F00D         	goto	l6341
  7008   0019D8                     l6333:
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  7012   0019D8  0E6C               	movlw	108
  7013   0019DA  6FA9               	movwf	vfpfcnvrt@c& (0+255),b
  7014                           
  7015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  7016   0019DC  EF0E  F00D         	goto	l6341
  7017   0019E0                     l6335:
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  7021   0019E0  0E00               	movlw	0
  7022   0019E2  6FA9               	movwf	vfpfcnvrt@c& (0+255),b
  7023                           
  7024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  7025   0019E4  EF0E  F00D         	goto	l6341
  7026   0019E8                     l6339:
  7027   0019E8  0100               	movlb	0	; () banked
  7028   0019EA  51A9               	movf	vfpfcnvrt@c& (0+255),w,b
  7029   0019EC  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  7030   0019EE  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7031                           
  7032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7033                           ; Switch size 1, requested type "simple"
  7034                           ; Number of cases is 1, Range of values is 0 to 0
  7035                           ; switch strategies available:
  7036                           ; Name         Instructions Cycles
  7037                           ; simple_byte            4     3 (average)
  7038                           ;	Chosen strategy is simple_byte
  7039   0019F0  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7040   0019F2  0A00               	xorlw	0	; case 0
  7041   0019F4  B4D8               	btfsc	status,2,c
  7042   0019F6  EFFF  F00C         	goto	l6935
  7043   0019FA  EFF0  F00C         	goto	l6335
  7044   0019FE                     l6935:
  7045                           
  7046                           ; BSR set to: 0
  7047                           ; Switch size 1, requested type "simple"
  7048                           ; Number of cases is 3, Range of values is 76 to 108
  7049                           ; switch strategies available:
  7050                           ; Name         Instructions Cycles
  7051                           ; simple_byte           10     6 (average)
  7052                           ;	Chosen strategy is simple_byte
  7053   0019FE  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  7054   001A00  0A4C               	xorlw	76	; case 76
  7055   001A02  B4D8               	btfsc	status,2,c
  7056   001A04  EFE8  F00C         	goto	l6331
  7057   001A08  0A2A               	xorlw	42	; case 102
  7058   001A0A  B4D8               	btfsc	status,2,c
  7059   001A0C  EFEC  F00C         	goto	l6333
  7060   001A10  0A0A               	xorlw	10	; case 108
  7061   001A12  B4D8               	btfsc	status,2,c
  7062   001A14  EFE8  F00C         	goto	l6331
  7063   001A18  EFF0  F00C         	goto	l6335
  7064   001A1C                     l6341:
  7065                           
  7066                           ; BSR set to: 0
  7067   001A1C  C0AA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7068   001A20  C0AB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7069   001A24                     	if	0	;tblptru may be non-zero
  7070   001A24                     	endif
  7071   001A24                     	if	0	;tblptru may be non-zero
  7072   001A24                     	endif
  7073   001A24  0008               	tblrd		*
  7074   001A26  50F5               	movf	tablat,w,c
  7075   001A28  0A66               	xorlw	102
  7076   001A2A  A4D8               	btfss	status,2,c
  7077   001A2C  EF1A  F00D         	goto	u7171
  7078   001A30  EF1C  F00D         	goto	u7170
  7079   001A34                     u7171:
  7080   001A34  EFA4  F00D         	goto	l6361
  7081   001A38                     u7170:
  7082   001A38  EF52  F00D         	goto	l6349
  7083   001A3C                     l6343:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7087   001A3C  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7088   001A40  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7089   001A44  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  7090   001A48  0E04               	movlw	4
  7091   001A4A  26DE               	addwf	postinc2,f,c
  7092   001A4C  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  7093   001A50  0E00               	movlw	0
  7094   001A52  22DD               	addwfc	postdec2,f,c
  7095   001A54  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7096   001A58  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7097   001A5C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg
  7098   001A60  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+1
  7099   001A64  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg+2
  7100   001A68  CFDE F0A8          	movff	postinc2,vfpfcnvrt@convarg+3
  7101                           
  7102                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  7103   001A6C  EF67  F00D         	goto	l6351
  7104   001A70                     l6345:
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7108   001A70  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7109   001A74  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7110   001A78  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  7111   001A7C  0E04               	movlw	4
  7112   001A7E  26DE               	addwf	postinc2,f,c
  7113   001A80  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  7114   001A84  0E00               	movlw	0
  7115   001A86  22DD               	addwfc	postdec2,f,c
  7116   001A88  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7117   001A8C  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7118   001A90  CFDE F0A5          	movff	postinc2,vfpfcnvrt@convarg
  7119   001A94  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg+1
  7120   001A98  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg+2
  7121   001A9C  CFDE F0A8          	movff	postinc2,vfpfcnvrt@convarg+3
  7122                           
  7123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  7124   001AA0  EF67  F00D         	goto	l6351
  7125   001AA4                     l6349:
  7126                           
  7127                           ; BSR set to: 0
  7128   001AA4  51A9               	movf	vfpfcnvrt@c& (0+255),w,b
  7129   001AA6  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  7130   001AA8  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7131                           
  7132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7133                           ; Switch size 1, requested type "simple"
  7134                           ; Number of cases is 1, Range of values is 0 to 0
  7135                           ; switch strategies available:
  7136                           ; Name         Instructions Cycles
  7137                           ; simple_byte            4     3 (average)
  7138                           ;	Chosen strategy is simple_byte
  7139   001AAA  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7140   001AAC  0A00               	xorlw	0	; case 0
  7141   001AAE  B4D8               	btfsc	status,2,c
  7142   001AB0  EF5C  F00D         	goto	l6937
  7143   001AB4  EF67  F00D         	goto	l6351
  7144   001AB8                     l6937:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ; Switch size 1, requested type "simple"
  7148                           ; Number of cases is 2, Range of values is 76 to 108
  7149                           ; switch strategies available:
  7150                           ; Name         Instructions Cycles
  7151                           ; simple_byte            7     4 (average)
  7152                           ;	Chosen strategy is simple_byte
  7153   001AB8  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  7154   001ABA  0A4C               	xorlw	76	; case 76
  7155   001ABC  B4D8               	btfsc	status,2,c
  7156   001ABE  EF38  F00D         	goto	l6345
  7157   001AC2  0A20               	xorlw	32	; case 108
  7158   001AC4  B4D8               	btfsc	status,2,c
  7159   001AC6  EF1E  F00D         	goto	l6343
  7160   001ACA  EF67  F00D         	goto	l6351
  7161   001ACE                     l6351:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  7165   001ACE  0E01               	movlw	1
  7166   001AD0  25AA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7167   001AD2  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  7168   001AD4  0E00               	movlw	0
  7169   001AD6  21AB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7170   001AD8  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7171   001ADA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7172   001ADE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7173   001AE2  C0A3  FFDE         	movff	??_vfpfcnvrt,postinc2
  7174   001AE6  C0A4  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7175                           
  7176                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  7177   001AEA  EF8E  F00D         	goto	l6359
  7178   001AEE                     l6353:
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7182   001AEE  C09D  F068         	movff	vfpfcnvrt@fp,efgtoa@fp
  7183   001AF2  C09E  F069         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7184   001AF6  C0A5  F06A         	movff	vfpfcnvrt@convarg,efgtoa@f
  7185   001AFA  C0A6  F06B         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7186   001AFE  C0A7  F06C         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7187   001B02  C0A8  F06D         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7188   001B06  C0AA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7189   001B0A  C0AB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7190   001B0E                     	if	0	;tblptru may be non-zero
  7191   001B0E                     	endif
  7192   001B0E                     	if	0	;tblptru may be non-zero
  7193   001B0E                     	endif
  7194   001B0E  0008               	tblrd		*
  7195   001B10  CFF5 F06E          	movff	tablat,efgtoa@c
  7196   001B14  ECFD  F000         	call	_efgtoa	;wreg free
  7197   001B18  EFC1  F00D         	goto	l1382
  7198   001B1C                     l6359:
  7199                           
  7200                           ; BSR set to: 0
  7201   001B1C  C0AA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7202   001B20  C0AB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7203   001B24                     	if	0	;tblptru may be non-zero
  7204   001B24                     	endif
  7205   001B24                     	if	0	;tblptru may be non-zero
  7206   001B24                     	endif
  7207   001B24  0008               	tblrd		*
  7208   001B26  50F5               	movf	tablat,w,c
  7209   001B28  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  7210   001B2A  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7211                           
  7212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7213                           ; Switch size 1, requested type "simple"
  7214                           ; Number of cases is 1, Range of values is 0 to 0
  7215                           ; switch strategies available:
  7216                           ; Name         Instructions Cycles
  7217                           ; simple_byte            4     3 (average)
  7218                           ;	Chosen strategy is simple_byte
  7219   001B2C  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7220   001B2E  0A00               	xorlw	0	; case 0
  7221   001B30  B4D8               	btfsc	status,2,c
  7222   001B32  EF9D  F00D         	goto	l6939
  7223   001B36  EFA4  F00D         	goto	l6361
  7224   001B3A                     l6939:
  7225                           
  7226                           ; BSR set to: 0
  7227                           ; Switch size 1, requested type "simple"
  7228                           ; Number of cases is 1, Range of values is 102 to 102
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte            4     3 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233   001B3A  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  7234   001B3C  0A66               	xorlw	102	; case 102
  7235   001B3E  B4D8               	btfsc	status,2,c
  7236   001B40  EF77  F00D         	goto	l6353
  7237   001B44  EFA4  F00D         	goto	l6361
  7238   001B48                     l6361:
  7239                           
  7240                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  7241   001B48  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7242   001B4C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7243   001B50  2ADE               	incf	postinc2,f,c
  7244   001B52  0E00               	movlw	0
  7245   001B54  22DD               	addwfc	postdec2,f,c
  7246   001B56  EFC1  F00D         	goto	l1382
  7247   001B5A                     l6365:
  7248                           
  7249                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  7250   001B5A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7251   001B5E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7252   001B62  CFDE FFF6          	movff	postinc2,tblptrl
  7253   001B66  CFDD FFF7          	movff	postdec2,tblptrh
  7254   001B6A                     	if	0	;tblptru may be non-zero
  7255   001B6A                     	endif
  7256   001B6A                     	if	0	;tblptru may be non-zero
  7257   001B6A                     	endif
  7258   001B6A  0008               	tblrd		*
  7259   001B6C  50F5               	movf	tablat,w,c
  7260   001B6E  6E03               	movwf	fputc@c^0,c
  7261   001B70  6A04               	clrf	(fputc@c+1)^0,c
  7262   001B72  C09D  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7263   001B76  C09E  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7264   001B7A  EC6B  F01B         	call	_fputc	;wreg free
  7265   001B7E  EFA4  F00D         	goto	l6361
  7266   001B82                     l1382:
  7267   001B82  0012               	return		;funcret
  7268   001B84                     __end_of_vfpfcnvrt:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _read_prec_or_width *****************
  7272 ;; Defined at:
  7273 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  fmt             2    7[COMRAM] PTR PTR const unsigned c
  7276 ;;		 -> vfprintf@cfmt(2), 
  7277 ;;  ap              2    9[COMRAM] PTR PTR void [1]
  7278 ;;		 -> printf@ap(2), sprintf@ap(2), 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  c               1   13[COMRAM] unsigned char 
  7281 ;;  n               2   14[COMRAM] int 
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  2    7[COMRAM] int 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;Total ram usage:        9 bytes
  7296 ;; Hardware stack levels used: 1
  7297 ;; Hardware stack levels required when called: 2
  7298 ;; This function calls:
  7299 ;;		___wmul
  7300 ;; This function is called by:
  7301 ;;		_vfpfcnvrt
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text27
  7306   0037A0                     __ptext27:
  7307                           	callstack 0
  7308   0037A0                     _read_prec_or_width:
  7309                           	callstack 24
  7310   0037A0                     
  7311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  7312   0037A0  0E00               	movlw	0
  7313   0037A2  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7314   0037A4  0E00               	movlw	0
  7315   0037A6  6E0F               	movwf	read_prec_or_width@n^0,c
  7316   0037A8                     
  7317                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  7318   0037A8  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7319   0037AC  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7320   0037B0  CFDE FFF6          	movff	postinc2,tblptrl
  7321   0037B4  CFDD FFF7          	movff	postdec2,tblptrh
  7322   0037B8                     	if	0	;tblptru may be non-zero
  7323   0037B8                     	endif
  7324   0037B8                     	if	0	;tblptru may be non-zero
  7325   0037B8                     	endif
  7326   0037B8  0008               	tblrd		*
  7327   0037BA  50F5               	movf	tablat,w,c
  7328   0037BC  0A2A               	xorlw	42
  7329   0037BE  A4D8               	btfss	status,2,c
  7330   0037C0  EFE4  F01B         	goto	u4981
  7331   0037C4  EFE6  F01B         	goto	u4980
  7332   0037C8                     u4981:
  7333   0037C8  EF1A  F01C         	goto	l4705
  7334   0037CC                     u4980:
  7335   0037CC                     
  7336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  7337   0037CC  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7338   0037D0  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7339   0037D4  2ADE               	incf	postinc2,f,c
  7340   0037D6  0E00               	movlw	0
  7341   0037D8  22DD               	addwfc	postdec2,f,c
  7342                           
  7343                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7344   0037DA  C00A  FFD9         	movff	read_prec_or_width@ap,fsr2l
  7345   0037DE  C00B  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  7346   0037E2  CFDF F00C          	movff	indf2,??_read_prec_or_width
  7347   0037E6  0E02               	movlw	2
  7348   0037E8  26DE               	addwf	postinc2,f,c
  7349   0037EA  CFDF F00D          	movff	indf2,??_read_prec_or_width+1
  7350   0037EE  0E00               	movlw	0
  7351   0037F0  22DD               	addwfc	postdec2,f,c
  7352   0037F2  C00C  FFD9         	movff	??_read_prec_or_width,fsr2l
  7353   0037F6  C00D  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  7354   0037FA  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  7355   0037FE  CFDD F010          	movff	postdec2,read_prec_or_width@n+1
  7356                           
  7357                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  7358   003802  EF2E  F01C         	goto	l1370
  7359   003806                     l4701:
  7360                           
  7361                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  7362   003806  C00F  F002         	movff	read_prec_or_width@n,___wmul@multiplier
  7363   00380A  C010  F003         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7364   00380E  0E00               	movlw	0
  7365   003810  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  7366   003812  0E0A               	movlw	10
  7367   003814  6E04               	movwf	___wmul@multiplicand^0,c
  7368   003816  ECEC  F021         	call	___wmul	;wreg free
  7369   00381A  500E               	movf	read_prec_or_width@c^0,w,c
  7370   00381C  2402               	addwf	?___wmul^0,w,c
  7371   00381E  6E0F               	movwf	read_prec_or_width@n^0,c
  7372   003820  0E00               	movlw	0
  7373   003822  2003               	addwfc	(?___wmul+1)^0,w,c
  7374   003824  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7375   003826                     
  7376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  7377   003826  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7378   00382A  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7379   00382E  2ADE               	incf	postinc2,f,c
  7380   003830  0E00               	movlw	0
  7381   003832  22DD               	addwfc	postdec2,f,c
  7382   003834                     l4705:
  7383                           
  7384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7385   003834  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7386   003838  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7387   00383C  CFDE FFF6          	movff	postinc2,tblptrl
  7388   003840  CFDD FFF7          	movff	postdec2,tblptrh
  7389   003844                     	if	0	;tblptru may be non-zero
  7390   003844                     	endif
  7391   003844                     	if	0	;tblptru may be non-zero
  7392   003844                     	endif
  7393   003844  0008               	tblrd		*
  7394   003846  50F5               	movf	tablat,w,c
  7395   003848  0FD0               	addlw	208
  7396   00384A  6E0E               	movwf	read_prec_or_width@c^0,c
  7397   00384C  0E09               	movlw	9
  7398   00384E  640E               	cpfsgt	read_prec_or_width@c^0,c
  7399   003850  EF2C  F01C         	goto	u4991
  7400   003854  EF2E  F01C         	goto	u4990
  7401   003858                     u4991:
  7402   003858  EF03  F01C         	goto	l4701
  7403   00385C                     u4990:
  7404   00385C                     l1370:
  7405                           
  7406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  7407   00385C  C00F  F008         	movff	read_prec_or_width@n,?_read_prec_or_width
  7408   003860  C010  F009         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7409   003864  0012               	return		;funcret
  7410   003866                     __end_of_read_prec_or_width:
  7411                           	callstack 0
  7412                           
  7413 ;; *************** function ___wmul *****************
  7414 ;; Defined at:
  7415 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  multiplier      2    1[COMRAM] unsigned int 
  7418 ;;  multiplicand    2    3[COMRAM] unsigned int 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;  product         2    5[COMRAM] unsigned int 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  2    1[COMRAM] unsigned int 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0, prodl, prodh
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:        6 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; Hardware stack levels required when called: 1
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_GAME_main
  7441 ;;		_read_prec_or_width
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text28
  7446   0043D8                     __ptext28:
  7447                           	callstack 0
  7448   0043D8                     ___wmul:
  7449                           	callstack 24
  7450   0043D8  5002               	movf	___wmul@multiplier^0,w,c
  7451   0043DA  0204               	mulwf	___wmul@multiplicand^0,c
  7452   0043DC  CFF3 F006          	movff	prodl,___wmul@product
  7453   0043E0  CFF4 F007          	movff	prodh,___wmul@product+1
  7454   0043E4  5002               	movf	___wmul@multiplier^0,w,c
  7455   0043E6  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  7456   0043E8  50F3               	movf	243,w,c
  7457   0043EA  2607               	addwf	(___wmul@product+1)^0,f,c
  7458   0043EC  5003               	movf	(___wmul@multiplier+1)^0,w,c
  7459   0043EE  0204               	mulwf	___wmul@multiplicand^0,c
  7460   0043F0  50F3               	movf	243,w,c
  7461   0043F2  2607               	addwf	(___wmul@product+1)^0,f,c
  7462   0043F4  C006  F002         	movff	___wmul@product,?___wmul
  7463   0043F8  C007  F003         	movff	___wmul@product+1,?___wmul+1
  7464   0043FC  0012               	return		;funcret
  7465   0043FE                     __end_of___wmul:
  7466                           	callstack 0
  7467                           
  7468 ;; *************** function _efgtoa *****************
  7469 ;; Defined at:
  7470 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  7473 ;;		 -> NULL(0), sprintf@f(12), 
  7474 ;;  f               4   10[BANK0 ] PTR struct _IO_FILE
  7475 ;;  c               1   14[BANK0 ] unsigned char 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;  u               4   57[BANK0 ] struct flui
  7478 ;;  g               4   51[BANK0 ] struct flui
  7479 ;;  l               4   46[BANK0 ] struct flui
  7480 ;;  h               4   42[BANK0 ] struct flui
  7481 ;;  ou              4   36[BANK0 ] struct flui
  7482 ;;  n               2   55[BANK0 ] int 
  7483 ;;  i               2   40[BANK0 ] int 
  7484 ;;  w               2   34[BANK0 ] int 
  7485 ;;  e               2   32[BANK0 ] int 
  7486 ;;  m               2   30[BANK0 ] int 
  7487 ;;  d               2   28[BANK0 ] int 
  7488 ;;  t               2   21[BANK0 ] int 
  7489 ;;  p               2   19[BANK0 ] int 
  7490 ;;  ne              2   17[BANK0 ] int 
  7491 ;;  sign            1   50[BANK0 ] unsigned char 
  7492 ;;  nmode           1   27[BANK0 ] unsigned char 
  7493 ;;  mode            1   26[BANK0 ] unsigned char 
  7494 ;;  pp              1   25[BANK0 ] unsigned char 
  7495 ;;  esign           1    0        unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7505 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;Total ram usage:       53 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; Hardware stack levels required when called: 5
  7512 ;; This function calls:
  7513 ;;		___fladd
  7514 ;;		___fldiv
  7515 ;;		___fleq
  7516 ;;		___flge
  7517 ;;		___flmul
  7518 ;;		___flneg
  7519 ;;		___flsub
  7520 ;;		___fltol
  7521 ;;		___fpclassifyf
  7522 ;;		_floorf
  7523 ;;		_labs
  7524 ;;		_memcpy
  7525 ;;		_pad
  7526 ;;		_strcpy
  7527 ;; This function is called by:
  7528 ;;		_vfpfcnvrt
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text29
  7533   0001FA                     __ptext29:
  7534                           	callstack 0
  7535   0001FA                     _efgtoa:
  7536                           	callstack 21
  7537   0001FA                     
  7538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  7539   0001FA  0E00               	movlw	0
  7540   0001FC  0100               	movlb	0	; () banked
  7541   0001FE  6F92               	movwf	efgtoa@sign& (0+255),b
  7542   000200                     
  7543                           ; BSR set to: 0
  7544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  7545   000200  C06A  F093         	movff	efgtoa@f,efgtoa@g
  7546   000204  C06B  F094         	movff	efgtoa@f+1,efgtoa@g+1
  7547   000208  C06C  F095         	movff	efgtoa@f+2,efgtoa@g+2
  7548   00020C  C06D  F096         	movff	efgtoa@f+3,efgtoa@g+3
  7549   000210                     
  7550                           ; BSR set to: 0
  7551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  7552   000210  BF96               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7553   000212  EF0F  F001         	goto	u6810
  7554   000216  EF0D  F001         	goto	u6811
  7555   00021A                     u6811:
  7556   00021A  EF23  F001         	goto	l6089
  7557   00021E                     u6810:
  7558   00021E                     
  7559                           ; BSR set to: 0
  7560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  7561   00021E  0E01               	movlw	1
  7562   000220  6F92               	movwf	efgtoa@sign& (0+255),b
  7563   000222                     
  7564                           ; BSR set to: 0
  7565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  7566   000222  C093  F002         	movff	efgtoa@g,___flneg@f1
  7567   000226  C094  F003         	movff	efgtoa@g+1,___flneg@f1+1
  7568   00022A  C095  F004         	movff	efgtoa@g+2,___flneg@f1+2
  7569   00022E  C096  F005         	movff	efgtoa@g+3,___flneg@f1+3
  7570   000232  EC8E  F021         	call	___flneg	;wreg free
  7571   000236  C002  F093         	movff	?___flneg,efgtoa@g
  7572   00023A  C003  F094         	movff	?___flneg+1,efgtoa@g+1
  7573   00023E  C004  F095         	movff	?___flneg+2,efgtoa@g+2
  7574   000242  C005  F096         	movff	?___flneg+3,efgtoa@g+3
  7575   000246                     l6089:
  7576                           
  7577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  7578   000246  0E00               	movlw	0
  7579   000248  0100               	movlb	0	; () banked
  7580   00024A  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  7581   00024C  0E00               	movlw	0
  7582   00024E  6F97               	movwf	efgtoa@n& (0+255),b
  7583   000250                     
  7584                           ; BSR set to: 0
  7585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  7586   000250  C058  F082         	movff	_width,efgtoa@w
  7587   000254  C059  F083         	movff	_width+1,efgtoa@w+1
  7588   000258                     
  7589                           ; BSR set to: 0
  7590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  7591   000258  5192               	movf	efgtoa@sign& (0+255),w,b
  7592   00025A  B4D8               	btfsc	status,2,c
  7593   00025C  EF32  F001         	goto	u6821
  7594   000260  EF34  F001         	goto	u6820
  7595   000264                     u6821:
  7596   000264  EF48  F001         	goto	l6103
  7597   000268                     u6820:
  7598   000268                     
  7599                           ; BSR set to: 0
  7600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  7601   000268  5192               	movf	efgtoa@sign& (0+255),w,b
  7602   00026A  A4D8               	btfss	status,2,c
  7603   00026C  EF3A  F001         	goto	u6831
  7604   000270  EF3C  F001         	goto	u6830
  7605   000274                     u6831:
  7606   000274  EF42  F001         	goto	l6099
  7607   000278                     u6830:
  7608   000278                     
  7609                           ; BSR set to: 0
  7610   000278  0E00               	movlw	0
  7611   00027A  6F78               	movwf	(_efgtoa$3290+1)& (0+255),b
  7612   00027C  0E2B               	movlw	43
  7613   00027E  6F77               	movwf	_efgtoa$3290& (0+255),b
  7614   000280  EF46  F001         	goto	l6101
  7615   000284                     l6099:
  7616                           
  7617                           ; BSR set to: 0
  7618   000284  0E00               	movlw	0
  7619   000286  6F78               	movwf	(_efgtoa$3290+1)& (0+255),b
  7620   000288  0E2D               	movlw	45
  7621   00028A  6F77               	movwf	_efgtoa$3290& (0+255),b
  7622   00028C                     l6101:
  7623                           
  7624                           ; BSR set to: 0
  7625   00028C  C077  F092         	movff	_efgtoa$3290,efgtoa@sign
  7626   000290                     l6103:
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  7630   000290  C093  F002         	movff	efgtoa@g,___fpclassifyf@x
  7631   000294  C094  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7632   000298  C095  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7633   00029C  C096  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7634   0002A0  EC7F  F01A         	call	___fpclassifyf	;wreg free
  7635   0002A4  0402               	decf	?___fpclassifyf^0,w,c
  7636   0002A6  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  7637   0002A8  A4D8               	btfss	status,2,c
  7638   0002AA  EF59  F001         	goto	u6841
  7639   0002AE  EF5B  F001         	goto	u6840
  7640   0002B2                     u6841:
  7641   0002B2  EF8E  F001         	goto	l6121
  7642   0002B6                     u6840:
  7643   0002B6                     
  7644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  7645   0002B6  0100               	movlb	0	; () banked
  7646   0002B8  5192               	movf	efgtoa@sign& (0+255),w,b
  7647   0002BA  B4D8               	btfsc	status,2,c
  7648   0002BC  EF62  F001         	goto	u6851
  7649   0002C0  EF64  F001         	goto	u6850
  7650   0002C4                     u6851:
  7651   0002C4  EF6D  F001         	goto	l6113
  7652   0002C8                     u6850:
  7653   0002C8                     
  7654                           ; BSR set to: 0
  7655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  7656   0002C8  C092  F173         	movff	efgtoa@sign,_dbuf
  7657   0002CC                     
  7658                           ; BSR set to: 0
  7659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  7660   0002CC  0782               	decf	efgtoa@w& (0+255),f,b
  7661   0002CE  A0D8               	btfss	status,0,c
  7662   0002D0  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  7663   0002D2                     
  7664                           ; BSR set to: 0
  7665                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  7666   0002D2  0E00               	movlw	0
  7667   0002D4  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  7668   0002D6  0E01               	movlw	1
  7669   0002D8  6F97               	movwf	efgtoa@n& (0+255),b
  7670   0002DA                     l6113:
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  7674   0002DA  0E73               	movlw	low _dbuf
  7675   0002DC  2597               	addwf	efgtoa@n& (0+255),w,b
  7676   0002DE  6E02               	movwf	strcpy@dest^0,c
  7677   0002E0  0E01               	movlw	high _dbuf
  7678   0002E2  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7679   0002E4  6E03               	movwf	(strcpy@dest+1)^0,c
  7680   0002E6  0EF7               	movlw	low STR_36
  7681   0002E8  6E04               	movwf	strcpy@src^0,c
  7682   0002EA  0EFF               	movlw	high STR_36
  7683   0002EC  6E05               	movwf	(strcpy@src+1)^0,c
  7684   0002EE  EC4E  F021         	call	_strcpy	;wreg free
  7685   0002F2                     l6115:
  7686                           
  7687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7688   0002F2  0100               	movlb	0	; () banked
  7689   0002F4  0EFD               	movlw	253
  7690   0002F6  2782               	addwf	efgtoa@w& (0+255),f,b
  7691   0002F8  0EFF               	movlw	255
  7692   0002FA  2383               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7693   0002FC                     
  7694                           ; BSR set to: 0
  7695                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  7696   0002FC  C068  F013         	movff	efgtoa@fp,pad@fp
  7697   000300  C069  F014         	movff	efgtoa@fp+1,pad@fp+1
  7698   000304  0E73               	movlw	low _dbuf
  7699   000306  6E15               	movwf	pad@buf^0,c
  7700   000308  0E01               	movlw	high _dbuf
  7701   00030A  6E16               	movwf	(pad@buf+1)^0,c
  7702   00030C  C082  F017         	movff	efgtoa@w,pad@p
  7703   000310  C083  F018         	movff	efgtoa@w+1,pad@p+1
  7704   000314  EC37  F01E         	call	_pad	;wreg free
  7705   000318  EFF9  F005         	goto	l1325
  7706   00031C                     l6121:
  7707                           
  7708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  7709   00031C  C093  F002         	movff	efgtoa@g,___fpclassifyf@x
  7710   000320  C094  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7711   000324  C095  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7712   000328  C096  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7713   00032C  EC7F  F01A         	call	___fpclassifyf	;wreg free
  7714   000330  5002               	movf	?___fpclassifyf^0,w,c
  7715   000332  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  7716   000334  A4D8               	btfss	status,2,c
  7717   000336  EF9F  F001         	goto	u6861
  7718   00033A  EFA1  F001         	goto	u6860
  7719   00033E                     u6861:
  7720   00033E  EFC1  F001         	goto	l6139
  7721   000342                     u6860:
  7722   000342                     
  7723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  7724   000342  0100               	movlb	0	; () banked
  7725   000344  5192               	movf	efgtoa@sign& (0+255),w,b
  7726   000346  B4D8               	btfsc	status,2,c
  7727   000348  EFA8  F001         	goto	u6871
  7728   00034C  EFAA  F001         	goto	u6870
  7729   000350                     u6871:
  7730   000350  EFB3  F001         	goto	l6131
  7731   000354                     u6870:
  7732   000354                     
  7733                           ; BSR set to: 0
  7734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  7735   000354  C092  F173         	movff	efgtoa@sign,_dbuf
  7736   000358                     
  7737                           ; BSR set to: 0
  7738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  7739   000358  0782               	decf	efgtoa@w& (0+255),f,b
  7740   00035A  A0D8               	btfss	status,0,c
  7741   00035C  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  7742   00035E                     
  7743                           ; BSR set to: 0
  7744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  7745   00035E  0E00               	movlw	0
  7746   000360  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  7747   000362  0E01               	movlw	1
  7748   000364  6F97               	movwf	efgtoa@n& (0+255),b
  7749   000366                     l6131:
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  7753   000366  0E73               	movlw	low _dbuf
  7754   000368  2597               	addwf	efgtoa@n& (0+255),w,b
  7755   00036A  6E02               	movwf	strcpy@dest^0,c
  7756   00036C  0E01               	movlw	high _dbuf
  7757   00036E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7758   000370  6E03               	movwf	(strcpy@dest+1)^0,c
  7759   000372  0EFB               	movlw	low STR_39
  7760   000374  6E04               	movwf	strcpy@src^0,c
  7761   000376  0EFF               	movlw	high STR_39
  7762   000378  6E05               	movwf	(strcpy@src+1)^0,c
  7763   00037A  EC4E  F021         	call	_strcpy	;wreg free
  7764   00037E  EF79  F001         	goto	l6115
  7765   000382                     l6139:
  7766                           
  7767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  7768   000382  0E00               	movlw	0
  7769   000384  0100               	movlb	0	; () banked
  7770   000386  6F99               	movwf	efgtoa@u& (0+255),b
  7771   000388  0E00               	movlw	0
  7772   00038A  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  7773   00038C  0E80               	movlw	128
  7774   00038E  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  7775   000390  0E3F               	movlw	63
  7776   000392  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  7777                           
  7778                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  7779   000394  0E00               	movlw	0
  7780   000396  6F81               	movwf	(efgtoa@e+1)& (0+255),b
  7781   000398  0E00               	movlw	0
  7782   00039A  6F80               	movwf	efgtoa@e& (0+255),b
  7783   00039C                     
  7784                           ; BSR set to: 0
  7785                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  7786   00039C  C093  F002         	movff	efgtoa@g,___fleq@ff1
  7787   0003A0  C094  F003         	movff	efgtoa@g+1,___fleq@ff1+1
  7788   0003A4  C095  F004         	movff	efgtoa@g+2,___fleq@ff1+2
  7789   0003A8  C096  F005         	movff	efgtoa@g+3,___fleq@ff1+3
  7790   0003AC  0E00               	movlw	0
  7791   0003AE  6E06               	movwf	___fleq@ff2^0,c
  7792   0003B0  0E00               	movlw	0
  7793   0003B2  6E07               	movwf	(___fleq@ff2+1)^0,c
  7794   0003B4  0E00               	movlw	0
  7795   0003B6  6E08               	movwf	(___fleq@ff2+2)^0,c
  7796   0003B8  0E00               	movlw	0
  7797   0003BA  6E09               	movwf	(___fleq@ff2+3)^0,c
  7798   0003BC  ECA3  F01D         	call	___fleq	;wreg free
  7799   0003C0  B0D8               	btfsc	status,0,c
  7800   0003C2  EFE5  F001         	goto	u6881
  7801   0003C6  EFE7  F001         	goto	u6880
  7802   0003CA                     u6881:
  7803   0003CA  EFC6  F002         	goto	l1328
  7804   0003CE                     u6880:
  7805   0003CE  EFF4  F001         	goto	l6147
  7806   0003D2                     l1330:
  7807                           
  7808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  7809   0003D2  C084  F099         	movff	efgtoa@ou,efgtoa@u
  7810   0003D6  C085  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  7811   0003DA  C086  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  7812   0003DE  C087  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  7813   0003E2                     
  7814                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  7815   0003E2  0100               	movlb	0	; () banked
  7816   0003E4  4B80               	infsnz	efgtoa@e& (0+255),f,b
  7817   0003E6  2B81               	incf	(efgtoa@e+1)& (0+255),f,b
  7818   0003E8                     l6147:
  7819                           
  7820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7821   0003E8  C099  F029         	movff	efgtoa@u,___flmul@b
  7822   0003EC  C09A  F02A         	movff	efgtoa@u+1,___flmul@b+1
  7823   0003F0  C09B  F02B         	movff	efgtoa@u+2,___flmul@b+2
  7824   0003F4  C09C  F02C         	movff	efgtoa@u+3,___flmul@b+3
  7825   0003F8  0E00               	movlw	0
  7826   0003FA  6E2D               	movwf	___flmul@a^0,c
  7827   0003FC  0E00               	movlw	0
  7828   0003FE  6E2E               	movwf	(___flmul@a+1)^0,c
  7829   000400  0E20               	movlw	32
  7830   000402  6E2F               	movwf	(___flmul@a+2)^0,c
  7831   000404  0E41               	movlw	65
  7832   000406  6E30               	movwf	(___flmul@a+3)^0,c
  7833   000408  EC5A  F008         	call	___flmul	;wreg free
  7834   00040C  C029  F084         	movff	?___flmul,efgtoa@ou
  7835   000410  C02A  F085         	movff	?___flmul+1,efgtoa@ou+1
  7836   000414  C02B  F086         	movff	?___flmul+2,efgtoa@ou+2
  7837   000418  C02C  F087         	movff	?___flmul+3,efgtoa@ou+3
  7838   00041C  0100               	movlb	0	; () banked
  7839   00041E  5184               	movf	efgtoa@ou& (0+255),w,b
  7840   000420  5D93               	subwf	efgtoa@g& (0+255),w,b
  7841   000422  6E02               	movwf	labs@a^0,c
  7842   000424  5185               	movf	(efgtoa@ou+1)& (0+255),w,b
  7843   000426  5994               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7844   000428  6E03               	movwf	(labs@a+1)^0,c
  7845   00042A  5186               	movf	(efgtoa@ou+2)& (0+255),w,b
  7846   00042C  5995               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7847   00042E  6E04               	movwf	(labs@a+2)^0,c
  7848   000430  5187               	movf	(efgtoa@ou+3)& (0+255),w,b
  7849   000432  5996               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7850   000434  6E05               	movwf	(labs@a+3)^0,c
  7851   000436  ECF7  F01F         	call	_labs	;wreg free
  7852   00043A  BE05               	btfsc	(?_labs+3)^0,7,c
  7853   00043C  EF2B  F002         	goto	u6891
  7854   000440  5005               	movf	(?_labs+3)^0,w,c
  7855   000442  1004               	iorwf	(?_labs+2)^0,w,c
  7856   000444  1003               	iorwf	(?_labs+1)^0,w,c
  7857   000446  E109               	bnz	u6890
  7858   000448  0E02               	movlw	2
  7859   00044A  5C02               	subwf	?_labs^0,w,c
  7860   00044C  A0D8               	btfss	status,0,c
  7861   00044E  EF2B  F002         	goto	u6891
  7862   000452  EF2D  F002         	goto	u6890
  7863   000456                     u6891:
  7864   000456  EFE9  F001         	goto	l1330
  7865   00045A                     u6890:
  7866   00045A  C084  F042         	movff	efgtoa@ou,___flge@ff1
  7867   00045E  C085  F043         	movff	efgtoa@ou+1,___flge@ff1+1
  7868   000462  C086  F044         	movff	efgtoa@ou+2,___flge@ff1+2
  7869   000466  C087  F045         	movff	efgtoa@ou+3,___flge@ff1+3
  7870   00046A  C093  F046         	movff	efgtoa@g,___flge@ff2
  7871   00046E  C094  F047         	movff	efgtoa@g+1,___flge@ff2+1
  7872   000472  C095  F048         	movff	efgtoa@g+2,___flge@ff2+2
  7873   000476  C096  F049         	movff	efgtoa@g+3,___flge@ff2+3
  7874   00047A  EC7D  F019         	call	___flge	;wreg free
  7875   00047E  A0D8               	btfss	status,0,c
  7876   000480  EF44  F002         	goto	u6901
  7877   000484  EF46  F002         	goto	u6900
  7878   000488                     u6901:
  7879   000488  EFE9  F001         	goto	l1330
  7880   00048C                     u6900:
  7881   00048C                     
  7882                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  7883   00048C  0100               	movlb	0	; () banked
  7884   00048E  5199               	movf	efgtoa@u& (0+255),w,b
  7885   000490  5D93               	subwf	efgtoa@g& (0+255),w,b
  7886   000492  6E02               	movwf	labs@a^0,c
  7887   000494  519A               	movf	(efgtoa@u+1)& (0+255),w,b
  7888   000496  5994               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7889   000498  6E03               	movwf	(labs@a+1)^0,c
  7890   00049A  519B               	movf	(efgtoa@u+2)& (0+255),w,b
  7891   00049C  5995               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7892   00049E  6E04               	movwf	(labs@a+2)^0,c
  7893   0004A0  519C               	movf	(efgtoa@u+3)& (0+255),w,b
  7894   0004A2  5996               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7895   0004A4  6E05               	movwf	(labs@a+3)^0,c
  7896   0004A6  ECF7  F01F         	call	_labs	;wreg free
  7897   0004AA  BE05               	btfsc	(?_labs+3)^0,7,c
  7898   0004AC  EF65  F002         	goto	u6910
  7899   0004B0  5005               	movf	(?_labs+3)^0,w,c
  7900   0004B2  1004               	iorwf	(?_labs+2)^0,w,c
  7901   0004B4  1003               	iorwf	(?_labs+1)^0,w,c
  7902   0004B6  E107               	bnz	u6911
  7903   0004B8  0E02               	movlw	2
  7904   0004BA  5C02               	subwf	?_labs^0,w,c
  7905   0004BC  B0D8               	btfsc	status,0,c
  7906   0004BE  EF63  F002         	goto	u6911
  7907   0004C2  EF65  F002         	goto	u6910
  7908   0004C6                     u6911:
  7909   0004C6  EFAD  F002         	goto	l6165
  7910   0004CA                     u6910:
  7911   0004CA                     l6155:
  7912                           
  7913                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  7914   0004CA  C099  F093         	movff	efgtoa@u,efgtoa@g
  7915   0004CE  C09A  F094         	movff	efgtoa@u+1,efgtoa@g+1
  7916   0004D2  C09B  F095         	movff	efgtoa@u+2,efgtoa@g+2
  7917   0004D6  C09C  F096         	movff	efgtoa@u+3,efgtoa@g+3
  7918                           
  7919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  7920   0004DA  EFC6  F002         	goto	l1328
  7921   0004DE                     l6157:
  7922                           
  7923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  7924   0004DE  C099  F010         	movff	efgtoa@u,___fldiv@b
  7925   0004E2  C09A  F011         	movff	efgtoa@u+1,___fldiv@b+1
  7926   0004E6  C09B  F012         	movff	efgtoa@u+2,___fldiv@b+2
  7927   0004EA  C09C  F013         	movff	efgtoa@u+3,___fldiv@b+3
  7928   0004EE  0E00               	movlw	0
  7929   0004F0  6E14               	movwf	___fldiv@a^0,c
  7930   0004F2  0E00               	movlw	0
  7931   0004F4  6E15               	movwf	(___fldiv@a+1)^0,c
  7932   0004F6  0E20               	movlw	32
  7933   0004F8  6E16               	movwf	(___fldiv@a+2)^0,c
  7934   0004FA  0E41               	movlw	65
  7935   0004FC  6E17               	movwf	(___fldiv@a+3)^0,c
  7936   0004FE  EC6F  F00A         	call	___fldiv	;wreg free
  7937   000502  C010  F099         	movff	?___fldiv,efgtoa@u
  7938   000506  C011  F09A         	movff	?___fldiv+1,efgtoa@u+1
  7939   00050A  C012  F09B         	movff	?___fldiv+2,efgtoa@u+2
  7940   00050E  C013  F09C         	movff	?___fldiv+3,efgtoa@u+3
  7941   000512                     
  7942                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  7943   000512  0100               	movlb	0	; () banked
  7944   000514  0780               	decf	efgtoa@e& (0+255),f,b
  7945   000516  A0D8               	btfss	status,0,c
  7946   000518  0781               	decf	(efgtoa@e+1)& (0+255),f,b
  7947   00051A                     
  7948                           ; BSR set to: 0
  7949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  7950   00051A  5199               	movf	efgtoa@u& (0+255),w,b
  7951   00051C  5D93               	subwf	efgtoa@g& (0+255),w,b
  7952   00051E  6E02               	movwf	labs@a^0,c
  7953   000520  519A               	movf	(efgtoa@u+1)& (0+255),w,b
  7954   000522  5994               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7955   000524  6E03               	movwf	(labs@a+1)^0,c
  7956   000526  519B               	movf	(efgtoa@u+2)& (0+255),w,b
  7957   000528  5995               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7958   00052A  6E04               	movwf	(labs@a+2)^0,c
  7959   00052C  519C               	movf	(efgtoa@u+3)& (0+255),w,b
  7960   00052E  5996               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7961   000530  6E05               	movwf	(labs@a+3)^0,c
  7962   000532  ECF7  F01F         	call	_labs	;wreg free
  7963   000536  BE05               	btfsc	(?_labs+3)^0,7,c
  7964   000538  EFAB  F002         	goto	u6920
  7965   00053C  5005               	movf	(?_labs+3)^0,w,c
  7966   00053E  1004               	iorwf	(?_labs+2)^0,w,c
  7967   000540  1003               	iorwf	(?_labs+1)^0,w,c
  7968   000542  E107               	bnz	u6921
  7969   000544  0E02               	movlw	2
  7970   000546  5C02               	subwf	?_labs^0,w,c
  7971   000548  B0D8               	btfsc	status,0,c
  7972   00054A  EFA9  F002         	goto	u6921
  7973   00054E  EFAB  F002         	goto	u6920
  7974   000552                     u6921:
  7975   000552  EFAD  F002         	goto	l6165
  7976   000556                     u6920:
  7977   000556  EF65  F002         	goto	l6155
  7978   00055A                     l6165:
  7979                           
  7980                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  7981   00055A  C093  F042         	movff	efgtoa@g,___flge@ff1
  7982   00055E  C094  F043         	movff	efgtoa@g+1,___flge@ff1+1
  7983   000562  C095  F044         	movff	efgtoa@g+2,___flge@ff1+2
  7984   000566  C096  F045         	movff	efgtoa@g+3,___flge@ff1+3
  7985   00056A  C099  F046         	movff	efgtoa@u,___flge@ff2
  7986   00056E  C09A  F047         	movff	efgtoa@u+1,___flge@ff2+1
  7987   000572  C09B  F048         	movff	efgtoa@u+2,___flge@ff2+2
  7988   000576  C09C  F049         	movff	efgtoa@u+3,___flge@ff2+3
  7989   00057A  EC7D  F019         	call	___flge	;wreg free
  7990   00057E  A0D8               	btfss	status,0,c
  7991   000580  EFC4  F002         	goto	u6931
  7992   000584  EFC6  F002         	goto	u6930
  7993   000588                     u6931:
  7994   000588  EF6F  F002         	goto	l6157
  7995   00058C                     u6930:
  7996   00058C                     l1328:
  7997                           
  7998                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  7999   00058C  C06E  F07A         	movff	efgtoa@c,efgtoa@mode
  8000                           
  8001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  8002   000590  C07A  F07B         	movff	efgtoa@mode,efgtoa@nmode
  8003   000594                     
  8004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  8005   000594  BE5B               	btfsc	(_prec+1)^0,7,c
  8006   000596  EFCF  F002         	goto	u6941
  8007   00059A  EFD1  F002         	goto	u6940
  8008   00059E                     u6941:
  8009   00059E  EFD7  F002         	goto	l6171
  8010   0005A2                     u6940:
  8011   0005A2  C05A  F073         	movff	_prec,efgtoa@p
  8012   0005A6  C05B  F074         	movff	_prec+1,efgtoa@p+1
  8013   0005AA  EFDC  F002         	goto	l6173
  8014   0005AE                     l6171:
  8015   0005AE  0E00               	movlw	0
  8016   0005B0  0100               	movlb	0	; () banked
  8017   0005B2  6F74               	movwf	(efgtoa@p+1)& (0+255),b
  8018   0005B4  0E06               	movlw	6
  8019   0005B6  6F73               	movwf	efgtoa@p& (0+255),b
  8020   0005B8                     l6173:
  8021                           
  8022                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  8023   0005B8  C073  F07E         	movff	efgtoa@p,efgtoa@m
  8024   0005BC  C074  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  8025   0005C0                     
  8026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  8027   0005C0  0100               	movlb	0	; () banked
  8028   0005C2  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  8029   0005C4  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  8030   0005C6                     
  8031                           ; BSR set to: 0
  8032                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  8033   0005C6  0E66               	movlw	102
  8034   0005C8  197B               	xorwf	efgtoa@nmode& (0+255),w,b
  8035   0005CA  A4D8               	btfss	status,2,c
  8036   0005CC  EFEA  F002         	goto	u6951
  8037   0005D0  EFEC  F002         	goto	u6950
  8038   0005D4                     u6951:
  8039   0005D4  EF0C  F003         	goto	l6187
  8040   0005D8                     u6950:
  8041   0005D8                     
  8042                           ; BSR set to: 0
  8043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  8044   0005D8  BF81               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8045   0005DA  EFF3  F002         	goto	u6960
  8046   0005DE  EFF1  F002         	goto	u6961
  8047   0005E2                     u6961:
  8048   0005E2  EFFF  F002         	goto	l6183
  8049   0005E6                     u6960:
  8050   0005E6                     
  8051                           ; BSR set to: 0
  8052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  8053   0005E6  0E00               	movlw	0
  8054   0005E8  6F99               	movwf	efgtoa@u& (0+255),b
  8055   0005EA  0E00               	movlw	0
  8056   0005EC  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  8057   0005EE  0E80               	movlw	128
  8058   0005F0  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  8059   0005F2  0E3F               	movlw	63
  8060   0005F4  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  8061                           
  8062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  8063   0005F6  0E00               	movlw	0
  8064   0005F8  6F81               	movwf	(efgtoa@e+1)& (0+255),b
  8065   0005FA  0E00               	movlw	0
  8066   0005FC  6F80               	movwf	efgtoa@e& (0+255),b
  8067   0005FE                     l6183:
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  8071   0005FE  0E67               	movlw	103
  8072   000600  197A               	xorwf	efgtoa@mode& (0+255),w,b
  8073   000602  B4D8               	btfsc	status,2,c
  8074   000604  EF06  F003         	goto	u6971
  8075   000608  EF08  F003         	goto	u6970
  8076   00060C                     u6971:
  8077   00060C  EF0C  F003         	goto	l6187
  8078   000610                     u6970:
  8079   000610                     
  8080                           ; BSR set to: 0
  8081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  8082   000610  5180               	movf	efgtoa@e& (0+255),w,b
  8083   000612  277E               	addwf	efgtoa@m& (0+255),f,b
  8084   000614  5181               	movf	(efgtoa@e+1)& (0+255),w,b
  8085   000616  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8086   000618                     l6187:
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  8090   000618  0E00               	movlw	0
  8091   00061A  6F89               	movwf	(efgtoa@i+1)& (0+255),b
  8092   00061C  0E00               	movlw	0
  8093   00061E  6F88               	movwf	efgtoa@i& (0+255),b
  8094   000620                     
  8095                           ; BSR set to: 0
  8096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  8097   000620  C093  F08A         	movff	efgtoa@g,efgtoa@h
  8098   000624  C094  F08B         	movff	efgtoa@g+1,efgtoa@h+1
  8099   000628  C095  F08C         	movff	efgtoa@g+2,efgtoa@h+2
  8100   00062C  C096  F08D         	movff	efgtoa@g+3,efgtoa@h+3
  8101   000630                     
  8102                           ; BSR set to: 0
  8103                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  8104   000630  C099  F084         	movff	efgtoa@u,efgtoa@ou
  8105   000634  C09A  F085         	movff	efgtoa@u+1,efgtoa@ou+1
  8106   000638  C09B  F086         	movff	efgtoa@u+2,efgtoa@ou+2
  8107   00063C  C09C  F087         	movff	efgtoa@u+3,efgtoa@ou+3
  8108                           
  8109                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  8110   000640  EF9D  F003         	goto	l6201
  8111   000644                     l6193:
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  8115   000644  C08A  F010         	movff	efgtoa@h,___fldiv@b
  8116   000648  C08B  F011         	movff	efgtoa@h+1,___fldiv@b+1
  8117   00064C  C08C  F012         	movff	efgtoa@h+2,___fldiv@b+2
  8118   000650  C08D  F013         	movff	efgtoa@h+3,___fldiv@b+3
  8119   000654  C099  F014         	movff	efgtoa@u,___fldiv@a
  8120   000658  C09A  F015         	movff	efgtoa@u+1,___fldiv@a+1
  8121   00065C  C09B  F016         	movff	efgtoa@u+2,___fldiv@a+2
  8122   000660  C09C  F017         	movff	efgtoa@u+3,___fldiv@a+3
  8123   000664  EC6F  F00A         	call	___fldiv	;wreg free
  8124   000668  C010  F029         	movff	?___fldiv,floorf@x
  8125   00066C  C011  F02A         	movff	?___fldiv+1,floorf@x+1
  8126   000670  C012  F02B         	movff	?___fldiv+2,floorf@x+2
  8127   000674  C013  F02C         	movff	?___fldiv+3,floorf@x+3
  8128   000678  ECE6  F011         	call	_floorf	;wreg free
  8129   00067C  C029  F08E         	movff	?_floorf,efgtoa@l
  8130   000680  C02A  F08F         	movff	?_floorf+1,efgtoa@l+1
  8131   000684  C02B  F090         	movff	?_floorf+2,efgtoa@l+2
  8132   000688  C02C  F091         	movff	?_floorf+3,efgtoa@l+3
  8133                           
  8134                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  8135   00068C  C08E  F060         	movff	efgtoa@l,___fltol@f1
  8136   000690  C08F  F061         	movff	efgtoa@l+1,___fltol@f1+1
  8137   000694  C090  F062         	movff	efgtoa@l+2,___fltol@f1+2
  8138   000698  C091  F063         	movff	efgtoa@l+3,___fltol@f1+3
  8139   00069C  ECF9  F018         	call	___fltol	;wreg free
  8140   0006A0  C060  F07C         	movff	?___fltol,efgtoa@d
  8141   0006A4  C061  F07D         	movff	?___fltol+1,efgtoa@d+1
  8142   0006A8                     
  8143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  8144   0006A8  C08A  F060         	movff	efgtoa@h,___flsub@b
  8145   0006AC  C08B  F061         	movff	efgtoa@h+1,___flsub@b+1
  8146   0006B0  C08C  F062         	movff	efgtoa@h+2,___flsub@b+2
  8147   0006B4  C08D  F063         	movff	efgtoa@h+3,___flsub@b+3
  8148   0006B8  C08E  F02D         	movff	efgtoa@l,___flmul@a
  8149   0006BC  C08F  F02E         	movff	efgtoa@l+1,___flmul@a+1
  8150   0006C0  C090  F02F         	movff	efgtoa@l+2,___flmul@a+2
  8151   0006C4  C091  F030         	movff	efgtoa@l+3,___flmul@a+3
  8152   0006C8  C099  F029         	movff	efgtoa@u,___flmul@b
  8153   0006CC  C09A  F02A         	movff	efgtoa@u+1,___flmul@b+1
  8154   0006D0  C09B  F02B         	movff	efgtoa@u+2,___flmul@b+2
  8155   0006D4  C09C  F02C         	movff	efgtoa@u+3,___flmul@b+3
  8156   0006D8  EC5A  F008         	call	___flmul	;wreg free
  8157   0006DC  C029  F064         	movff	?___flmul,___flsub@a
  8158   0006E0  C02A  F065         	movff	?___flmul+1,___flsub@a+1
  8159   0006E4  C02B  F066         	movff	?___flmul+2,___flsub@a+2
  8160   0006E8  C02C  F067         	movff	?___flmul+3,___flsub@a+3
  8161   0006EC  ECC7  F020         	call	___flsub	;wreg free
  8162   0006F0  C060  F08A         	movff	?___flsub,efgtoa@h
  8163   0006F4  C061  F08B         	movff	?___flsub+1,efgtoa@h+1
  8164   0006F8  C062  F08C         	movff	?___flsub+2,efgtoa@h+2
  8165   0006FC  C063  F08D         	movff	?___flsub+3,efgtoa@h+3
  8166   000700                     
  8167                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  8168   000700  C099  F010         	movff	efgtoa@u,___fldiv@b
  8169   000704  C09A  F011         	movff	efgtoa@u+1,___fldiv@b+1
  8170   000708  C09B  F012         	movff	efgtoa@u+2,___fldiv@b+2
  8171   00070C  C09C  F013         	movff	efgtoa@u+3,___fldiv@b+3
  8172   000710  0E00               	movlw	0
  8173   000712  6E14               	movwf	___fldiv@a^0,c
  8174   000714  0E00               	movlw	0
  8175   000716  6E15               	movwf	(___fldiv@a+1)^0,c
  8176   000718  0E20               	movlw	32
  8177   00071A  6E16               	movwf	(___fldiv@a+2)^0,c
  8178   00071C  0E41               	movlw	65
  8179   00071E  6E17               	movwf	(___fldiv@a+3)^0,c
  8180   000720  EC6F  F00A         	call	___fldiv	;wreg free
  8181   000724  C010  F099         	movff	?___fldiv,efgtoa@u
  8182   000728  C011  F09A         	movff	?___fldiv+1,efgtoa@u+1
  8183   00072C  C012  F09B         	movff	?___fldiv+2,efgtoa@u+2
  8184   000730  C013  F09C         	movff	?___fldiv+3,efgtoa@u+3
  8185   000734                     
  8186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  8187   000734  0100               	movlb	0	; () banked
  8188   000736  4B88               	infsnz	efgtoa@i& (0+255),f,b
  8189   000738  2B89               	incf	(efgtoa@i+1)& (0+255),f,b
  8190   00073A                     l6201:
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  8194   00073A  517E               	movf	efgtoa@m& (0+255),w,b
  8195   00073C  5D88               	subwf	efgtoa@i& (0+255),w,b
  8196   00073E  5189               	movf	(efgtoa@i+1)& (0+255),w,b
  8197   000740  0A80               	xorlw	128
  8198   000742  6F6F               	movwf	??_efgtoa& (0+255),b
  8199   000744  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  8200   000746  0A80               	xorlw	128
  8201   000748  596F               	subwfb	??_efgtoa& (0+255),w,b
  8202   00074A  A0D8               	btfss	status,0,c
  8203   00074C  EFAA  F003         	goto	u6981
  8204   000750  EFAC  F003         	goto	u6980
  8205   000754                     u6981:
  8206   000754  EF22  F003         	goto	l6193
  8207   000758                     u6980:
  8208   000758                     
  8209                           ; BSR set to: 0
  8210                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  8211   000758  C099  F029         	movff	efgtoa@u,___flmul@b
  8212   00075C  C09A  F02A         	movff	efgtoa@u+1,___flmul@b+1
  8213   000760  C09B  F02B         	movff	efgtoa@u+2,___flmul@b+2
  8214   000764  C09C  F02C         	movff	efgtoa@u+3,___flmul@b+3
  8215   000768  0E00               	movlw	0
  8216   00076A  6E2D               	movwf	___flmul@a^0,c
  8217   00076C  0E00               	movlw	0
  8218   00076E  6E2E               	movwf	(___flmul@a+1)^0,c
  8219   000770  0EA0               	movlw	160
  8220   000772  6E2F               	movwf	(___flmul@a+2)^0,c
  8221   000774  0E40               	movlw	64
  8222   000776  6E30               	movwf	(___flmul@a+3)^0,c
  8223   000778  EC5A  F008         	call	___flmul	;wreg free
  8224   00077C  C029  F08E         	movff	?___flmul,efgtoa@l
  8225   000780  C02A  F08F         	movff	?___flmul+1,efgtoa@l+1
  8226   000784  C02B  F090         	movff	?___flmul+2,efgtoa@l+2
  8227   000788  C02C  F091         	movff	?___flmul+3,efgtoa@l+3
  8228   00078C                     
  8229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  8230   00078C  C08A  F042         	movff	efgtoa@h,___flge@ff1
  8231   000790  C08B  F043         	movff	efgtoa@h+1,___flge@ff1+1
  8232   000794  C08C  F044         	movff	efgtoa@h+2,___flge@ff1+2
  8233   000798  C08D  F045         	movff	efgtoa@h+3,___flge@ff1+3
  8234   00079C  C08E  F046         	movff	efgtoa@l,___flge@ff2
  8235   0007A0  C08F  F047         	movff	efgtoa@l+1,___flge@ff2+1
  8236   0007A4  C090  F048         	movff	efgtoa@l+2,___flge@ff2+2
  8237   0007A8  C091  F049         	movff	efgtoa@l+3,___flge@ff2+3
  8238   0007AC  EC7D  F019         	call	___flge	;wreg free
  8239   0007B0  B0D8               	btfsc	status,0,c
  8240   0007B2  EFDD  F003         	goto	u6991
  8241   0007B6  EFDF  F003         	goto	u6990
  8242   0007BA                     u6991:
  8243   0007BA  EFEA  F003         	goto	l6209
  8244   0007BE                     u6990:
  8245   0007BE                     
  8246                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  8247   0007BE  0E00               	movlw	0
  8248   0007C0  0100               	movlb	0	; () banked
  8249   0007C2  6F8E               	movwf	efgtoa@l& (0+255),b
  8250   0007C4  0E00               	movlw	0
  8251   0007C6  6F8F               	movwf	(efgtoa@l+1)& (0+255),b
  8252   0007C8  0E00               	movlw	0
  8253   0007CA  6F90               	movwf	(efgtoa@l+2)& (0+255),b
  8254   0007CC  0E00               	movlw	0
  8255   0007CE  6F91               	movwf	(efgtoa@l+3)& (0+255),b
  8256                           
  8257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  8258   0007D0  EF13  F004         	goto	l6215
  8259   0007D4                     l6209:
  8260                           
  8261                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  8262   0007D4  C08A  F002         	movff	efgtoa@h,___fleq@ff1
  8263   0007D8  C08B  F003         	movff	efgtoa@h+1,___fleq@ff1+1
  8264   0007DC  C08C  F004         	movff	efgtoa@h+2,___fleq@ff1+2
  8265   0007E0  C08D  F005         	movff	efgtoa@h+3,___fleq@ff1+3
  8266   0007E4  C08E  F006         	movff	efgtoa@l,___fleq@ff2
  8267   0007E8  C08F  F007         	movff	efgtoa@l+1,___fleq@ff2+1
  8268   0007EC  C090  F008         	movff	efgtoa@l+2,___fleq@ff2+2
  8269   0007F0  C091  F009         	movff	efgtoa@l+3,___fleq@ff2+3
  8270   0007F4  ECA3  F01D         	call	___fleq	;wreg free
  8271   0007F8  A0D8               	btfss	status,0,c
  8272   0007FA  EF01  F004         	goto	u7001
  8273   0007FE  EF03  F004         	goto	u7000
  8274   000802                     u7001:
  8275   000802  EF13  F004         	goto	l6215
  8276   000806                     u7000:
  8277   000806  0100               	movlb	0	; () banked
  8278   000808  B17C               	btfsc	efgtoa@d& (0+255),0,b
  8279   00080A  EF09  F004         	goto	u7011
  8280   00080E  EF0B  F004         	goto	u7010
  8281   000812                     u7011:
  8282   000812  EF13  F004         	goto	l6215
  8283   000816                     u7010:
  8284   000816                     
  8285                           ; BSR set to: 0
  8286                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  8287   000816  0E00               	movlw	0
  8288   000818  6F8E               	movwf	efgtoa@l& (0+255),b
  8289   00081A  0E00               	movlw	0
  8290   00081C  6F8F               	movwf	(efgtoa@l+1)& (0+255),b
  8291   00081E  0E00               	movlw	0
  8292   000820  6F90               	movwf	(efgtoa@l+2)& (0+255),b
  8293   000822  0E00               	movlw	0
  8294   000824  6F91               	movwf	(efgtoa@l+3)& (0+255),b
  8295   000826                     l6215:
  8296                           
  8297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  8298   000826  C093  F042         	movff	efgtoa@g,___fladd@b
  8299   00082A  C094  F043         	movff	efgtoa@g+1,___fladd@b+1
  8300   00082E  C095  F044         	movff	efgtoa@g+2,___fladd@b+2
  8301   000832  C096  F045         	movff	efgtoa@g+3,___fladd@b+3
  8302   000836  C08E  F046         	movff	efgtoa@l,___fladd@a
  8303   00083A  C08F  F047         	movff	efgtoa@l+1,___fladd@a+1
  8304   00083E  C090  F048         	movff	efgtoa@l+2,___fladd@a+2
  8305   000842  C091  F049         	movff	efgtoa@l+3,___fladd@a+3
  8306   000846  ECFA  F005         	call	___fladd	;wreg free
  8307   00084A  C042  F08A         	movff	?___fladd,efgtoa@h
  8308   00084E  C043  F08B         	movff	?___fladd+1,efgtoa@h+1
  8309   000852  C044  F08C         	movff	?___fladd+2,efgtoa@h+2
  8310   000856  C045  F08D         	movff	?___fladd+3,efgtoa@h+3
  8311   00085A                     
  8312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  8313   00085A  C08A  F042         	movff	efgtoa@h,___flge@ff1
  8314   00085E  C08B  F043         	movff	efgtoa@h+1,___flge@ff1+1
  8315   000862  C08C  F044         	movff	efgtoa@h+2,___flge@ff1+2
  8316   000866  C08D  F045         	movff	efgtoa@h+3,___flge@ff1+3
  8317   00086A  0E00               	movlw	0
  8318   00086C  6E2D               	movwf	___flmul@a^0,c
  8319   00086E  0E00               	movlw	0
  8320   000870  6E2E               	movwf	(___flmul@a+1)^0,c
  8321   000872  0E20               	movlw	32
  8322   000874  6E2F               	movwf	(___flmul@a+2)^0,c
  8323   000876  0E41               	movlw	65
  8324   000878  6E30               	movwf	(___flmul@a+3)^0,c
  8325   00087A  C084  F029         	movff	efgtoa@ou,___flmul@b
  8326   00087E  C085  F02A         	movff	efgtoa@ou+1,___flmul@b+1
  8327   000882  C086  F02B         	movff	efgtoa@ou+2,___flmul@b+2
  8328   000886  C087  F02C         	movff	efgtoa@ou+3,___flmul@b+3
  8329   00088A  EC5A  F008         	call	___flmul	;wreg free
  8330   00088E  C029  F046         	movff	?___flmul,___flge@ff2
  8331   000892  C02A  F047         	movff	?___flmul+1,___flge@ff2+1
  8332   000896  C02B  F048         	movff	?___flmul+2,___flge@ff2+2
  8333   00089A  C02C  F049         	movff	?___flmul+3,___flge@ff2+3
  8334   00089E  EC7D  F019         	call	___flge	;wreg free
  8335   0008A2  A0D8               	btfss	status,0,c
  8336   0008A4  EF56  F004         	goto	u7021
  8337   0008A8  EF58  F004         	goto	u7020
  8338   0008AC                     u7021:
  8339   0008AC  EF81  F004         	goto	l6227
  8340   0008B0                     u7020:
  8341   0008B0                     
  8342                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  8343   0008B0  0100               	movlb	0	; () banked
  8344   0008B2  4B80               	infsnz	efgtoa@e& (0+255),f,b
  8345   0008B4  2B81               	incf	(efgtoa@e+1)& (0+255),f,b
  8346   0008B6                     
  8347                           ; BSR set to: 0
  8348                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  8349   0008B6  C084  F029         	movff	efgtoa@ou,___flmul@b
  8350   0008BA  C085  F02A         	movff	efgtoa@ou+1,___flmul@b+1
  8351   0008BE  C086  F02B         	movff	efgtoa@ou+2,___flmul@b+2
  8352   0008C2  C087  F02C         	movff	efgtoa@ou+3,___flmul@b+3
  8353   0008C6  0E00               	movlw	0
  8354   0008C8  6E2D               	movwf	___flmul@a^0,c
  8355   0008CA  0E00               	movlw	0
  8356   0008CC  6E2E               	movwf	(___flmul@a+1)^0,c
  8357   0008CE  0E20               	movlw	32
  8358   0008D0  6E2F               	movwf	(___flmul@a+2)^0,c
  8359   0008D2  0E41               	movlw	65
  8360   0008D4  6E30               	movwf	(___flmul@a+3)^0,c
  8361   0008D6  EC5A  F008         	call	___flmul	;wreg free
  8362   0008DA  C029  F084         	movff	?___flmul,efgtoa@ou
  8363   0008DE  C02A  F085         	movff	?___flmul+1,efgtoa@ou+1
  8364   0008E2  C02B  F086         	movff	?___flmul+2,efgtoa@ou+2
  8365   0008E6  C02C  F087         	movff	?___flmul+3,efgtoa@ou+3
  8366   0008EA                     
  8367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  8368   0008EA  0E66               	movlw	102
  8369   0008EC  0100               	movlb	0	; () banked
  8370   0008EE  197B               	xorwf	efgtoa@nmode& (0+255),w,b
  8371   0008F0  A4D8               	btfss	status,2,c
  8372   0008F2  EF7D  F004         	goto	u7031
  8373   0008F6  EF7F  F004         	goto	u7030
  8374   0008FA                     u7031:
  8375   0008FA  EF81  F004         	goto	l6227
  8376   0008FE                     u7030:
  8377   0008FE                     
  8378                           ; BSR set to: 0
  8379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  8380   0008FE  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  8381   000900  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  8382   000902                     l6227:
  8383                           
  8384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  8385   000902  C084  F099         	movff	efgtoa@ou,efgtoa@u
  8386   000906  C085  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  8387   00090A  C086  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  8388   00090E  C087  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  8389   000912                     
  8390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  8391   000912  C080  F071         	movff	efgtoa@e,efgtoa@ne
  8392   000916  C081  F072         	movff	efgtoa@e+1,efgtoa@ne+1
  8393   00091A                     
  8394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  8395   00091A  0E00               	movlw	0
  8396   00091C  0100               	movlb	0	; () banked
  8397   00091E  6F79               	movwf	efgtoa@pp& (0+255),b
  8398   000920                     
  8399                           ; BSR set to: 0
  8400                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  8401   000920  0E00               	movlw	0
  8402   000922  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  8403   000924  0E00               	movlw	0
  8404   000926  6F75               	movwf	efgtoa@t& (0+255),b
  8405   000928                     
  8406                           ; BSR set to: 0
  8407                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  8408   000928  0E00               	movlw	0
  8409   00092A  6F89               	movwf	(efgtoa@i+1)& (0+255),b
  8410   00092C  0E00               	movlw	0
  8411   00092E  6F88               	movwf	efgtoa@i& (0+255),b
  8412                           
  8413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8414   000930  EF7F  F005         	goto	l6277
  8415   000934                     l6237:
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  8419   000934  C08A  F010         	movff	efgtoa@h,___fldiv@b
  8420   000938  C08B  F011         	movff	efgtoa@h+1,___fldiv@b+1
  8421   00093C  C08C  F012         	movff	efgtoa@h+2,___fldiv@b+2
  8422   000940  C08D  F013         	movff	efgtoa@h+3,___fldiv@b+3
  8423   000944  C099  F014         	movff	efgtoa@u,___fldiv@a
  8424   000948  C09A  F015         	movff	efgtoa@u+1,___fldiv@a+1
  8425   00094C  C09B  F016         	movff	efgtoa@u+2,___fldiv@a+2
  8426   000950  C09C  F017         	movff	efgtoa@u+3,___fldiv@a+3
  8427   000954  EC6F  F00A         	call	___fldiv	;wreg free
  8428   000958  C010  F029         	movff	?___fldiv,floorf@x
  8429   00095C  C011  F02A         	movff	?___fldiv+1,floorf@x+1
  8430   000960  C012  F02B         	movff	?___fldiv+2,floorf@x+2
  8431   000964  C013  F02C         	movff	?___fldiv+3,floorf@x+3
  8432   000968  ECE6  F011         	call	_floorf	;wreg free
  8433   00096C  C029  F08E         	movff	?_floorf,efgtoa@l
  8434   000970  C02A  F08F         	movff	?_floorf+1,efgtoa@l+1
  8435   000974  C02B  F090         	movff	?_floorf+2,efgtoa@l+2
  8436   000978  C02C  F091         	movff	?_floorf+3,efgtoa@l+3
  8437                           
  8438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  8439   00097C  C08E  F060         	movff	efgtoa@l,___fltol@f1
  8440   000980  C08F  F061         	movff	efgtoa@l+1,___fltol@f1+1
  8441   000984  C090  F062         	movff	efgtoa@l+2,___fltol@f1+2
  8442   000988  C091  F063         	movff	efgtoa@l+3,___fltol@f1+3
  8443   00098C  ECF9  F018         	call	___fltol	;wreg free
  8444   000990  0100               	movlb	0	; () banked
  8445   000992  BF61               	btfsc	(?___fltol+1)& (0+255),7,b
  8446   000994  EFD7  F004         	goto	u7040
  8447   000998  5161               	movf	(?___fltol+1)& (0+255),w,b
  8448   00099A  E107               	bnz	u7041
  8449   00099C  0E0A               	movlw	10
  8450   00099E  5D60               	subwf	?___fltol& (0+255),w,b
  8451   0009A0  B0D8               	btfsc	status,0,c
  8452   0009A2  EFD5  F004         	goto	u7041
  8453   0009A6  EFD7  F004         	goto	u7040
  8454   0009AA                     u7041:
  8455   0009AA  EFE7  F004         	goto	l6241
  8456   0009AE                     u7040:
  8457   0009AE                     
  8458                           ; BSR set to: 0
  8459   0009AE  C08E  F060         	movff	efgtoa@l,___fltol@f1
  8460   0009B2  C08F  F061         	movff	efgtoa@l+1,___fltol@f1+1
  8461   0009B6  C090  F062         	movff	efgtoa@l+2,___fltol@f1+2
  8462   0009BA  C091  F063         	movff	efgtoa@l+3,___fltol@f1+3
  8463   0009BE  ECF9  F018         	call	___fltol	;wreg free
  8464   0009C2  C060  F07C         	movff	?___fltol,efgtoa@d
  8465   0009C6  C061  F07D         	movff	?___fltol+1,efgtoa@d+1
  8466   0009CA  EFEB  F004         	goto	l1358
  8467   0009CE                     l6241:
  8468                           
  8469                           ; BSR set to: 0
  8470   0009CE  0E00               	movlw	0
  8471   0009D0  6F7D               	movwf	(efgtoa@d+1)& (0+255),b
  8472   0009D2  0E09               	movlw	9
  8473   0009D4  6F7C               	movwf	efgtoa@d& (0+255),b
  8474   0009D6                     l1358:
  8475                           
  8476                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  8477   0009D6  0100               	movlb	0	; () banked
  8478   0009D8  5179               	movf	efgtoa@pp& (0+255),w,b
  8479   0009DA  A4D8               	btfss	status,2,c
  8480   0009DC  EFF2  F004         	goto	u7051
  8481   0009E0  EFF4  F004         	goto	u7050
  8482   0009E4                     u7051:
  8483   0009E4  EF1C  F005         	goto	l6261
  8484   0009E8                     u7050:
  8485   0009E8                     
  8486                           ; BSR set to: 0
  8487   0009E8  BF72               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8488   0009EA  EFFB  F004         	goto	u7060
  8489   0009EE  EFF9  F004         	goto	u7061
  8490   0009F2                     u7061:
  8491   0009F2  EF1C  F005         	goto	l6261
  8492   0009F6                     u7060:
  8493   0009F6                     
  8494                           ; BSR set to: 0
  8495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  8496   0009F6  0E73               	movlw	low _dbuf
  8497   0009F8  2597               	addwf	efgtoa@n& (0+255),w,b
  8498   0009FA  6ED9               	movwf	fsr2l,c
  8499   0009FC  0E01               	movlw	high _dbuf
  8500   0009FE  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8501   000A00  6EDA               	movwf	fsr2h,c
  8502   000A02  0E2E               	movlw	46
  8503   000A04  6EDF               	movwf	indf2,c
  8504   000A06                     
  8505                           ; BSR set to: 0
  8506   000A06  4B97               	infsnz	efgtoa@n& (0+255),f,b
  8507   000A08  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  8508   000A0A                     
  8509                           ; BSR set to: 0
  8510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  8511   000A0A  0782               	decf	efgtoa@w& (0+255),f,b
  8512   000A0C  A0D8               	btfss	status,0,c
  8513   000A0E  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  8514   000A10                     
  8515                           ; BSR set to: 0
  8516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  8517   000A10  0E01               	movlw	1
  8518   000A12  6F79               	movwf	efgtoa@pp& (0+255),b
  8519   000A14  EF1C  F005         	goto	l6261
  8520   000A18                     l6253:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  8524   000A18  0E73               	movlw	low _dbuf
  8525   000A1A  2597               	addwf	efgtoa@n& (0+255),w,b
  8526   000A1C  6ED9               	movwf	fsr2l,c
  8527   000A1E  0E01               	movlw	high _dbuf
  8528   000A20  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8529   000A22  6EDA               	movwf	fsr2h,c
  8530   000A24  0E30               	movlw	48
  8531   000A26  6EDF               	movwf	indf2,c
  8532   000A28                     
  8533                           ; BSR set to: 0
  8534   000A28  4B97               	infsnz	efgtoa@n& (0+255),f,b
  8535   000A2A  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  8536   000A2C                     
  8537                           ; BSR set to: 0
  8538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  8539   000A2C  0782               	decf	efgtoa@w& (0+255),f,b
  8540   000A2E  A0D8               	btfss	status,0,c
  8541   000A30  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  8542   000A32                     
  8543                           ; BSR set to: 0
  8544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  8545   000A32  0775               	decf	efgtoa@t& (0+255),f,b
  8546   000A34  A0D8               	btfss	status,0,c
  8547   000A36  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  8548   000A38                     l6261:
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  8552   000A38  5175               	movf	efgtoa@t& (0+255),w,b
  8553   000A3A  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8554   000A3C  A4D8               	btfss	status,2,c
  8555   000A3E  EF23  F005         	goto	u7071
  8556   000A42  EF25  F005         	goto	u7070
  8557   000A46                     u7071:
  8558   000A46  EF0C  F005         	goto	l6253
  8559   000A4A                     u7070:
  8560   000A4A                     
  8561                           ; BSR set to: 0
  8562                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  8563   000A4A  0E73               	movlw	low _dbuf
  8564   000A4C  2597               	addwf	efgtoa@n& (0+255),w,b
  8565   000A4E  6ED9               	movwf	fsr2l,c
  8566   000A50  0E01               	movlw	high _dbuf
  8567   000A52  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8568   000A54  6EDA               	movwf	fsr2h,c
  8569   000A56  517C               	movf	efgtoa@d& (0+255),w,b
  8570   000A58  0F30               	addlw	48
  8571   000A5A  6EDF               	movwf	indf2,c
  8572   000A5C                     
  8573                           ; BSR set to: 0
  8574   000A5C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  8575   000A5E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  8576   000A60                     
  8577                           ; BSR set to: 0
  8578                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  8579   000A60  0782               	decf	efgtoa@w& (0+255),f,b
  8580   000A62  A0D8               	btfss	status,0,c
  8581   000A64  0783               	decf	(efgtoa@w+1)& (0+255),f,b
  8582   000A66                     
  8583                           ; BSR set to: 0
  8584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  8585   000A66  C08A  F060         	movff	efgtoa@h,___flsub@b
  8586   000A6A  C08B  F061         	movff	efgtoa@h+1,___flsub@b+1
  8587   000A6E  C08C  F062         	movff	efgtoa@h+2,___flsub@b+2
  8588   000A72  C08D  F063         	movff	efgtoa@h+3,___flsub@b+3
  8589   000A76  C08E  F02D         	movff	efgtoa@l,___flmul@a
  8590   000A7A  C08F  F02E         	movff	efgtoa@l+1,___flmul@a+1
  8591   000A7E  C090  F02F         	movff	efgtoa@l+2,___flmul@a+2
  8592   000A82  C091  F030         	movff	efgtoa@l+3,___flmul@a+3
  8593   000A86  C099  F029         	movff	efgtoa@u,___flmul@b
  8594   000A8A  C09A  F02A         	movff	efgtoa@u+1,___flmul@b+1
  8595   000A8E  C09B  F02B         	movff	efgtoa@u+2,___flmul@b+2
  8596   000A92  C09C  F02C         	movff	efgtoa@u+3,___flmul@b+3
  8597   000A96  EC5A  F008         	call	___flmul	;wreg free
  8598   000A9A  C029  F064         	movff	?___flmul,___flsub@a
  8599   000A9E  C02A  F065         	movff	?___flmul+1,___flsub@a+1
  8600   000AA2  C02B  F066         	movff	?___flmul+2,___flsub@a+2
  8601   000AA6  C02C  F067         	movff	?___flmul+3,___flsub@a+3
  8602   000AAA  ECC7  F020         	call	___flsub	;wreg free
  8603   000AAE  C060  F08A         	movff	?___flsub,efgtoa@h
  8604   000AB2  C061  F08B         	movff	?___flsub+1,efgtoa@h+1
  8605   000AB6  C062  F08C         	movff	?___flsub+2,efgtoa@h+2
  8606   000ABA  C063  F08D         	movff	?___flsub+3,efgtoa@h+3
  8607   000ABE                     
  8608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  8609   000ABE  C099  F010         	movff	efgtoa@u,___fldiv@b
  8610   000AC2  C09A  F011         	movff	efgtoa@u+1,___fldiv@b+1
  8611   000AC6  C09B  F012         	movff	efgtoa@u+2,___fldiv@b+2
  8612   000ACA  C09C  F013         	movff	efgtoa@u+3,___fldiv@b+3
  8613   000ACE  0E00               	movlw	0
  8614   000AD0  6E14               	movwf	___fldiv@a^0,c
  8615   000AD2  0E00               	movlw	0
  8616   000AD4  6E15               	movwf	(___fldiv@a+1)^0,c
  8617   000AD6  0E20               	movlw	32
  8618   000AD8  6E16               	movwf	(___fldiv@a+2)^0,c
  8619   000ADA  0E41               	movlw	65
  8620   000ADC  6E17               	movwf	(___fldiv@a+3)^0,c
  8621   000ADE  EC6F  F00A         	call	___fldiv	;wreg free
  8622   000AE2  C010  F099         	movff	?___fldiv,efgtoa@u
  8623   000AE6  C011  F09A         	movff	?___fldiv+1,efgtoa@u+1
  8624   000AEA  C012  F09B         	movff	?___fldiv+2,efgtoa@u+2
  8625   000AEE  C013  F09C         	movff	?___fldiv+3,efgtoa@u+3
  8626   000AF2                     
  8627                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  8628   000AF2  0100               	movlb	0	; () banked
  8629   000AF4  0771               	decf	efgtoa@ne& (0+255),f,b
  8630   000AF6  A0D8               	btfss	status,0,c
  8631   000AF8  0772               	decf	(efgtoa@ne+1)& (0+255),f,b
  8632   000AFA                     
  8633                           ; BSR set to: 0
  8634                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  8635   000AFA  4B88               	infsnz	efgtoa@i& (0+255),f,b
  8636   000AFC  2B89               	incf	(efgtoa@i+1)& (0+255),f,b
  8637   000AFE                     l6277:
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8641   000AFE  517E               	movf	efgtoa@m& (0+255),w,b
  8642   000B00  5D88               	subwf	efgtoa@i& (0+255),w,b
  8643   000B02  5189               	movf	(efgtoa@i+1)& (0+255),w,b
  8644   000B04  0A80               	xorlw	128
  8645   000B06  6F6F               	movwf	??_efgtoa& (0+255),b
  8646   000B08  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  8647   000B0A  0A80               	xorlw	128
  8648   000B0C  596F               	subwfb	??_efgtoa& (0+255),w,b
  8649   000B0E  B0D8               	btfsc	status,0,c
  8650   000B10  EF8C  F005         	goto	u7081
  8651   000B14  EF8E  F005         	goto	u7080
  8652   000B18                     u7081:
  8653   000B18  EF9C  F005         	goto	l6281
  8654   000B1C                     u7080:
  8655   000B1C                     
  8656                           ; BSR set to: 0
  8657   000B1C  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8658   000B1E  EF9A  F005         	goto	u7091
  8659   000B22  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  8660   000B24  E109               	bnz	u7090
  8661   000B26  0E4B               	movlw	75
  8662   000B28  5D97               	subwf	efgtoa@n& (0+255),w,b
  8663   000B2A  A0D8               	btfss	status,0,c
  8664   000B2C  EF9A  F005         	goto	u7091
  8665   000B30  EF9C  F005         	goto	u7090
  8666   000B34                     u7091:
  8667   000B34  EF9A  F004         	goto	l6237
  8668   000B38                     u7090:
  8669   000B38                     l6281:
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  8673   000B38  0E00               	movlw	0
  8674   000B3A  6F89               	movwf	(efgtoa@i+1)& (0+255),b
  8675   000B3C  0E4F               	movlw	79
  8676   000B3E  6F88               	movwf	efgtoa@i& (0+255),b
  8677   000B40                     
  8678                           ; BSR set to: 0
  8679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  8680   000B40  0E73               	movlw	low _dbuf
  8681   000B42  2588               	addwf	efgtoa@i& (0+255),w,b
  8682   000B44  6ED9               	movwf	fsr2l,c
  8683   000B46  0E01               	movlw	high _dbuf
  8684   000B48  2189               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8685   000B4A  6EDA               	movwf	fsr2h,c
  8686   000B4C  6ADF               	clrf	indf2,c
  8687   000B4E                     
  8688                           ; BSR set to: 0
  8689                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  8690   000B4E  0E73               	movlw	low _dbuf
  8691   000B50  6F6F               	movwf	??_efgtoa& (0+255),b
  8692   000B52  0E01               	movlw	high _dbuf
  8693   000B54  6F70               	movwf	(??_efgtoa+1)& (0+255),b
  8694   000B56  5197               	movf	efgtoa@n& (0+255),w,b
  8695   000B58  5F6F               	subwf	??_efgtoa& (0+255),f,b
  8696   000B5A  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  8697   000B5C  5B70               	subwfb	(??_efgtoa+1)& (0+255),f,b
  8698   000B5E  5188               	movf	efgtoa@i& (0+255),w,b
  8699   000B60  256F               	addwf	??_efgtoa& (0+255),w,b
  8700   000B62  6E02               	movwf	memcpy@d1^0,c
  8701   000B64  5189               	movf	(efgtoa@i+1)& (0+255),w,b
  8702   000B66  2170               	addwfc	(??_efgtoa+1)& (0+255),w,b
  8703   000B68  6E03               	movwf	(memcpy@d1+1)^0,c
  8704   000B6A  0E73               	movlw	low _dbuf
  8705   000B6C  6E04               	movwf	memcpy@s1^0,c
  8706   000B6E  0E01               	movlw	high _dbuf
  8707   000B70  6E05               	movwf	(memcpy@s1+1)^0,c
  8708   000B72  C097  F006         	movff	efgtoa@n,memcpy@n
  8709   000B76  C098  F007         	movff	efgtoa@n+1,memcpy@n+1
  8710   000B7A  EC7B  F020         	call	_memcpy	;wreg free
  8711   000B7E                     
  8712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  8713   000B7E  0100               	movlb	0	; () banked
  8714   000B80  5197               	movf	efgtoa@n& (0+255),w,b
  8715   000B82  5D88               	subwf	efgtoa@i& (0+255),w,b
  8716   000B84  6F97               	movwf	efgtoa@n& (0+255),b
  8717   000B86  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  8718   000B88  5989               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8719   000B8A  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  8720   000B8C                     
  8721                           ; BSR set to: 0
  8722                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  8723   000B8C  5192               	movf	efgtoa@sign& (0+255),w,b
  8724   000B8E  A4D8               	btfss	status,2,c
  8725   000B90  EFCC  F005         	goto	u7101
  8726   000B94  EFCF  F005         	goto	u7100
  8727   000B98                     u7101:
  8728   000B98  0E01               	movlw	1
  8729   000B9A  EFD0  F005         	goto	u7110
  8730   000B9E                     u7100:
  8731   000B9E  0E00               	movlw	0
  8732   000BA0                     u7110:
  8733   000BA0  6F88               	movwf	efgtoa@i& (0+255),b
  8734   000BA2  6B89               	clrf	(efgtoa@i+1)& (0+255),b
  8735   000BA4                     
  8736                           ; BSR set to: 0
  8737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  8738   000BA4  5192               	movf	efgtoa@sign& (0+255),w,b
  8739   000BA6  B4D8               	btfsc	status,2,c
  8740   000BA8  EFD8  F005         	goto	u7121
  8741   000BAC  EFDA  F005         	goto	u7120
  8742   000BB0                     u7121:
  8743   000BB0  EFE5  F005         	goto	l6295
  8744   000BB4                     u7120:
  8745   000BB4                     
  8746                           ; BSR set to: 0
  8747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  8748   000BB4  0797               	decf	efgtoa@n& (0+255),f,b
  8749   000BB6  A0D8               	btfss	status,0,c
  8750   000BB8  0798               	decf	(efgtoa@n+1)& (0+255),f,b
  8751   000BBA  0E73               	movlw	low _dbuf
  8752   000BBC  2597               	addwf	efgtoa@n& (0+255),w,b
  8753   000BBE  6ED9               	movwf	fsr2l,c
  8754   000BC0  0E01               	movlw	high _dbuf
  8755   000BC2  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8756   000BC4  6EDA               	movwf	fsr2h,c
  8757   000BC6  C092  FFDF         	movff	efgtoa@sign,indf2
  8758   000BCA                     l6295:
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  8762   000BCA  5188               	movf	efgtoa@i& (0+255),w,b
  8763   000BCC  5F82               	subwf	efgtoa@w& (0+255),f,b
  8764   000BCE  5189               	movf	(efgtoa@i+1)& (0+255),w,b
  8765   000BD0  5B83               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8766   000BD2                     
  8767                           ; BSR set to: 0
  8768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  8769   000BD2  C068  F013         	movff	efgtoa@fp,pad@fp
  8770   000BD6  C069  F014         	movff	efgtoa@fp+1,pad@fp+1
  8771   000BDA  0E73               	movlw	low _dbuf
  8772   000BDC  2597               	addwf	efgtoa@n& (0+255),w,b
  8773   000BDE  6E15               	movwf	pad@buf^0,c
  8774   000BE0  0E01               	movlw	high _dbuf
  8775   000BE2  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8776   000BE4  6E16               	movwf	(pad@buf+1)^0,c
  8777   000BE6  C082  F017         	movff	efgtoa@w,pad@p
  8778   000BEA  C083  F018         	movff	efgtoa@w+1,pad@p+1
  8779   000BEE  EC37  F01E         	call	_pad	;wreg free
  8780   000BF2                     l1325:
  8781   000BF2  0012               	return		;funcret
  8782   000BF4                     __end_of_efgtoa:
  8783                           	callstack 0
  8784                           
  8785 ;; *************** function _strcpy *****************
  8786 ;; Defined at:
  8787 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  dest            2    1[COMRAM] PTR unsigned char 
  8790 ;;		 -> dbuf(80), reprak_main@txt(17), 
  8791 ;;  src             2    3[COMRAM] PTR const unsigned char 
  8792 ;;		 -> STR_39(4), STR_36(4), STR_33(18), 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  d               2    7[COMRAM] PTR unsigned char 
  8795 ;;		 -> dbuf(80), reprak_main@txt(17), 
  8796 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8797 ;;		 -> STR_39(4), STR_36(4), STR_33(18), 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  2    1[COMRAM] PTR unsigned char 
  8800 ;; Registers used:
  8801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;Total ram usage:        8 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 1
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_reprak_main
  8818 ;;		_efgtoa
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text30
  8823   00429C                     __ptext30:
  8824                           	callstack 0
  8825   00429C                     _strcpy:
  8826                           	callstack 28
  8827   00429C  C004  F006         	movff	strcpy@src,strcpy@s
  8828   0042A0  C005  F007         	movff	strcpy@src+1,strcpy@s+1
  8829   0042A4  C002  F008         	movff	strcpy@dest,strcpy@d
  8830   0042A8  C003  F009         	movff	strcpy@dest+1,strcpy@d+1
  8831   0042AC                     l3887:
  8832   0042AC  C006  FFF6         	movff	strcpy@s,tblptrl
  8833   0042B0  C007  FFF7         	movff	strcpy@s+1,tblptrh
  8834   0042B4  4A06               	infsnz	strcpy@s^0,f,c
  8835   0042B6  2A07               	incf	(strcpy@s+1)^0,f,c
  8836   0042B8                     	if	0	;tblptru may be non-zero
  8837   0042B8                     	endif
  8838   0042B8                     	if	0	;tblptru may be non-zero
  8839   0042B8                     	endif
  8840   0042B8  C008  FFD9         	movff	strcpy@d,fsr2l
  8841   0042BC  C009  FFDA         	movff	strcpy@d+1,fsr2h
  8842   0042C0  4A08               	infsnz	strcpy@d^0,f,c
  8843   0042C2  2A09               	incf	(strcpy@d+1)^0,f,c
  8844   0042C4  0008               	tblrd		*
  8845   0042C6  CFF5 FFDF          	movff	tablat,indf2
  8846   0042CA  50DF               	movf	indf2,w,c
  8847   0042CC  A4D8               	btfss	status,2,c
  8848   0042CE  EF6B  F021         	goto	u3631
  8849   0042D2  EF6D  F021         	goto	u3630
  8850   0042D6                     u3631:
  8851   0042D6  EF56  F021         	goto	l3887
  8852   0042DA                     u3630:
  8853   0042DA  0012               	return		;funcret
  8854   0042DC                     __end_of_strcpy:
  8855                           	callstack 0
  8856                           
  8857 ;; *************** function _memcpy *****************
  8858 ;; Defined at:
  8859 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  d1              2    1[COMRAM] PTR void 
  8862 ;;		 -> dbuf(80), 
  8863 ;;  s1              2    3[COMRAM] PTR const void 
  8864 ;;		 -> dbuf(80), 
  8865 ;;  n               2    5[COMRAM] unsigned int 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8868 ;;		 -> dbuf(80), 
  8869 ;;  d               2    7[COMRAM] PTR unsigned char 
  8870 ;;		 -> dbuf(80), 
  8871 ;;  tmp             1   11[COMRAM] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  2    1[COMRAM] PTR void 
  8874 ;; Registers used:
  8875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8881 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;Total ram usage:       11 bytes
  8886 ;; Hardware stack levels used: 1
  8887 ;; Hardware stack levels required when called: 1
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_efgtoa
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           	psect	text31
  8896   0040F6                     __ptext31:
  8897                           	callstack 0
  8898   0040F6                     _memcpy:
  8899                           	callstack 24
  8900   0040F6  C004  F00A         	movff	memcpy@s1,memcpy@s
  8901   0040FA  C005  F00B         	movff	memcpy@s1+1,memcpy@s+1
  8902   0040FE  C002  F008         	movff	memcpy@d1,memcpy@d
  8903   004102  C003  F009         	movff	memcpy@d1+1,memcpy@d+1
  8904   004106  EF95  F020         	goto	l4421
  8905   00410A                     l4413:
  8906   00410A  C00A  FFD9         	movff	memcpy@s,fsr2l
  8907   00410E  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  8908   004112  50DF               	movf	indf2,w,c
  8909   004114  6E0C               	movwf	memcpy@tmp^0,c
  8910   004116  4A0A               	infsnz	memcpy@s^0,f,c
  8911   004118  2A0B               	incf	(memcpy@s+1)^0,f,c
  8912   00411A  C008  FFD9         	movff	memcpy@d,fsr2l
  8913   00411E  C009  FFDA         	movff	memcpy@d+1,fsr2h
  8914   004122  C00C  FFDF         	movff	memcpy@tmp,indf2
  8915   004126  4A08               	infsnz	memcpy@d^0,f,c
  8916   004128  2A09               	incf	(memcpy@d+1)^0,f,c
  8917   00412A                     l4421:
  8918   00412A  0606               	decf	memcpy@n^0,f,c
  8919   00412C  A0D8               	btfss	status,0,c
  8920   00412E  0607               	decf	(memcpy@n+1)^0,f,c
  8921   004130  2806               	incf	memcpy@n^0,w,c
  8922   004132  E106               	bnz	u4551
  8923   004134  2807               	incf	(memcpy@n+1)^0,w,c
  8924   004136  A4D8               	btfss	status,2,c
  8925   004138  EFA0  F020         	goto	u4551
  8926   00413C  EFA2  F020         	goto	u4550
  8927   004140                     u4551:
  8928   004140  EF85  F020         	goto	l4413
  8929   004144                     u4550:
  8930   004144  0012               	return		;funcret
  8931   004146                     __end_of_memcpy:
  8932                           	callstack 0
  8933                           
  8934 ;; *************** function _labs *****************
  8935 ;; Defined at:
  8936 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  a               4    1[COMRAM] long 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  4    1[COMRAM] long 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8952 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;Total ram usage:        8 bytes
  8955 ;; Hardware stack levels used: 1
  8956 ;; Hardware stack levels required when called: 1
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_efgtoa
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text32
  8965   003FEE                     __ptext32:
  8966                           	callstack 0
  8967   003FEE                     _labs:
  8968                           	callstack 24
  8969   003FEE  BE05               	btfsc	(labs@a+3)^0,7,c
  8970   003FF0  EF06  F020         	goto	u4440
  8971   003FF4  5005               	movf	(labs@a+3)^0,w,c
  8972   003FF6  1004               	iorwf	(labs@a+2)^0,w,c
  8973   003FF8  1003               	iorwf	(labs@a+1)^0,w,c
  8974   003FFA  E106               	bnz	u4441
  8975   003FFC  0402               	decf	labs@a^0,w,c
  8976   003FFE  B0D8               	btfsc	status,0,c
  8977   004000  EF04  F020         	goto	u4441
  8978   004004  EF06  F020         	goto	u4440
  8979   004008                     u4441:
  8980   004008  EF21  F020         	goto	l1439
  8981   00400C                     u4440:
  8982   00400C  C002  F006         	movff	labs@a,??_labs
  8983   004010  C003  F007         	movff	labs@a+1,??_labs+1
  8984   004014  C004  F008         	movff	labs@a+2,??_labs+2
  8985   004018  C005  F009         	movff	labs@a+3,??_labs+3
  8986   00401C  1E06               	comf	??_labs^0,f,c
  8987   00401E  1E07               	comf	(??_labs+1)^0,f,c
  8988   004020  1E08               	comf	(??_labs+2)^0,f,c
  8989   004022  1E09               	comf	(??_labs+3)^0,f,c
  8990   004024  2A06               	incf	??_labs^0,f,c
  8991   004026  0E00               	movlw	0
  8992   004028  2207               	addwfc	(??_labs+1)^0,f,c
  8993   00402A  2208               	addwfc	(??_labs+2)^0,f,c
  8994   00402C  2209               	addwfc	(??_labs+3)^0,f,c
  8995   00402E  C006  F002         	movff	??_labs,?_labs
  8996   004032  C007  F003         	movff	??_labs+1,?_labs+1
  8997   004036  C008  F004         	movff	??_labs+2,?_labs+2
  8998   00403A  C009  F005         	movff	??_labs+3,?_labs+3
  8999   00403E  EF29  F020         	goto	l1442
  9000   004042                     l1439:
  9001   004042  C002  F002         	movff	labs@a,?_labs
  9002   004046  C003  F003         	movff	labs@a+1,?_labs+1
  9003   00404A  C004  F004         	movff	labs@a+2,?_labs+2
  9004   00404E  C005  F005         	movff	labs@a+3,?_labs+3
  9005   004052                     l1442:
  9006   004052  0012               	return		;funcret
  9007   004054                     __end_of_labs:
  9008                           	callstack 0
  9009                           
  9010 ;; *************** function _floorf *****************
  9011 ;; Defined at:
  9012 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  x               4   40[COMRAM] float 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  u               4   56[COMRAM] struct .
  9017 ;;  m               4   50[COMRAM] unsigned long 
  9018 ;;  e               2   54[COMRAM] int 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  4   40[COMRAM] float 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9030 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;Total ram usage:       20 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 1
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_efgtoa
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text33
  9043   0023CC                     __ptext33:
  9044                           	callstack 0
  9045   0023CC                     _floorf:
  9046                           	callstack 24
  9047   0023CC  C16B  F039         	movff	floorf@F526,floorf@u
  9048   0023D0  C16C  F03A         	movff	floorf@F526+1,floorf@u+1
  9049   0023D4  C16D  F03B         	movff	floorf@F526+2,floorf@u+2
  9050   0023D8  C16E  F03C         	movff	floorf@F526+3,floorf@u+3
  9051   0023DC  C029  F039         	movff	floorf@x,floorf@u
  9052   0023E0  C02A  F03A         	movff	floorf@x+1,floorf@u+1
  9053   0023E4  C02B  F03B         	movff	floorf@x+2,floorf@u+2
  9054   0023E8  C02C  F03C         	movff	floorf@x+3,floorf@u+3
  9055   0023EC  0E81               	movlw	129
  9056   0023EE  6E2D               	movwf	??_floorf^0,c
  9057   0023F0  0EFF               	movlw	255
  9058   0023F2  6E2E               	movwf	(??_floorf+1)^0,c
  9059   0023F4  C039  F02F         	movff	floorf@u,??_floorf+2
  9060   0023F8  C03A  F030         	movff	floorf@u+1,??_floorf+3
  9061   0023FC  C03B  F031         	movff	floorf@u+2,??_floorf+4
  9062   002400  C03C  F032         	movff	floorf@u+3,??_floorf+5
  9063   002404  0E18               	movlw	24
  9064   002406  EF0A  F012         	goto	u4450
  9065   00240A                     u4455:
  9066   00240A  90D8               	bcf	status,0,c
  9067   00240C  3232               	rrcf	(??_floorf+5)^0,f,c
  9068   00240E  3231               	rrcf	(??_floorf+4)^0,f,c
  9069   002410  3230               	rrcf	(??_floorf+3)^0,f,c
  9070   002412  322F               	rrcf	(??_floorf+2)^0,f,c
  9071   002414                     u4450:
  9072   002414  2EE8               	decfsz	wreg,f,c
  9073   002416  EF05  F012         	goto	u4455
  9074   00241A  502F               	movf	(??_floorf+2)^0,w,c
  9075   00241C  242D               	addwf	??_floorf^0,w,c
  9076   00241E  6E37               	movwf	floorf@e^0,c
  9077   002420  0E00               	movlw	0
  9078   002422  202E               	addwfc	(??_floorf+1)^0,w,c
  9079   002424  6E38               	movwf	(floorf@e+1)^0,c
  9080   002426  BE38               	btfsc	(floorf@e+1)^0,7,c
  9081   002428  EF1F  F012         	goto	u4461
  9082   00242C  5038               	movf	(floorf@e+1)^0,w,c
  9083   00242E  E109               	bnz	u4460
  9084   002430  0E17               	movlw	23
  9085   002432  5C37               	subwf	floorf@e^0,w,c
  9086   002434  A0D8               	btfss	status,0,c
  9087   002436  EF1F  F012         	goto	u4461
  9088   00243A  EF21  F012         	goto	u4460
  9089   00243E                     u4461:
  9090   00243E  EF2B  F012         	goto	l4389
  9091   002442                     u4460:
  9092   002442                     l4387:
  9093   002442  C029  F029         	movff	floorf@x,?_floorf
  9094   002446  C02A  F02A         	movff	floorf@x+1,?_floorf+1
  9095   00244A  C02B  F02B         	movff	floorf@x+2,?_floorf+2
  9096   00244E  C02C  F02C         	movff	floorf@x+3,?_floorf+3
  9097   002452  EFEE  F012         	goto	l1428
  9098   002456                     l4389:
  9099   002456  BE38               	btfsc	(floorf@e+1)^0,7,c
  9100   002458  EF30  F012         	goto	u4471
  9101   00245C  EF32  F012         	goto	u4470
  9102   002460                     u4471:
  9103   002460  EFA2  F012         	goto	l4399
  9104   002464                     u4470:
  9105   002464  C037  F02D         	movff	floorf@e,??_floorf
  9106   002468  0EFF               	movlw	255
  9107   00246A  6E2E               	movwf	(??_floorf+1)^0,c
  9108   00246C  0EFF               	movlw	255
  9109   00246E  6E2F               	movwf	(??_floorf+2)^0,c
  9110   002470  0E7F               	movlw	127
  9111   002472  6E30               	movwf	(??_floorf+3)^0,c
  9112   002474  0E00               	movlw	0
  9113   002476  6E31               	movwf	(??_floorf+4)^0,c
  9114   002478                     u4485:
  9115   002478  662D               	tstfsz	??_floorf^0,c
  9116   00247A  EF41  F012         	goto	u4486
  9117   00247E  EF49  F012         	goto	u4487
  9118   002482                     u4486:
  9119   002482  3431               	rlcf	(??_floorf+4)^0,w,c
  9120   002484  3231               	rrcf	(??_floorf+4)^0,f,c
  9121   002486  3230               	rrcf	(??_floorf+3)^0,f,c
  9122   002488  322F               	rrcf	(??_floorf+2)^0,f,c
  9123   00248A  322E               	rrcf	(??_floorf+1)^0,f,c
  9124   00248C  2E2D               	decfsz	??_floorf^0,f,c
  9125   00248E  EF3C  F012         	goto	u4485
  9126   002492                     u4487:
  9127   002492  C02E  F033         	movff	??_floorf+1,floorf@m
  9128   002496  C02F  F034         	movff	??_floorf+2,floorf@m+1
  9129   00249A  C030  F035         	movff	??_floorf+3,floorf@m+2
  9130   00249E  C031  F036         	movff	??_floorf+4,floorf@m+3
  9131   0024A2  5033               	movf	floorf@m^0,w,c
  9132   0024A4  1439               	andwf	floorf@u^0,w,c
  9133   0024A6  6E2D               	movwf	??_floorf^0,c
  9134   0024A8  5034               	movf	(floorf@m+1)^0,w,c
  9135   0024AA  143A               	andwf	(floorf@u+1)^0,w,c
  9136   0024AC  6E2E               	movwf	(??_floorf+1)^0,c
  9137   0024AE  5035               	movf	(floorf@m+2)^0,w,c
  9138   0024B0  143B               	andwf	(floorf@u+2)^0,w,c
  9139   0024B2  6E2F               	movwf	(??_floorf+2)^0,c
  9140   0024B4  5036               	movf	(floorf@m+3)^0,w,c
  9141   0024B6  143C               	andwf	(floorf@u+3)^0,w,c
  9142   0024B8  6E30               	movwf	(??_floorf+3)^0,c
  9143   0024BA  502D               	movf	??_floorf^0,w,c
  9144   0024BC  102E               	iorwf	(??_floorf+1)^0,w,c
  9145   0024BE  102F               	iorwf	(??_floorf+2)^0,w,c
  9146   0024C0  1030               	iorwf	(??_floorf+3)^0,w,c
  9147   0024C2  A4D8               	btfss	status,2,c
  9148   0024C4  EF66  F012         	goto	u4491
  9149   0024C8  EF68  F012         	goto	u4490
  9150   0024CC                     u4491:
  9151   0024CC  EF6A  F012         	goto	l4395
  9152   0024D0                     u4490:
  9153   0024D0  EF21  F012         	goto	l4387
  9154   0024D4                     l4395:
  9155   0024D4  C039  F02D         	movff	floorf@u,??_floorf
  9156   0024D8  C03A  F02E         	movff	floorf@u+1,??_floorf+1
  9157   0024DC  C03B  F02F         	movff	floorf@u+2,??_floorf+2
  9158   0024E0  C03C  F030         	movff	floorf@u+3,??_floorf+3
  9159   0024E4  0E20               	movlw	32
  9160   0024E6  EF7A  F012         	goto	u4500
  9161   0024EA                     u4505:
  9162   0024EA  90D8               	bcf	status,0,c
  9163   0024EC  3230               	rrcf	(??_floorf+3)^0,f,c
  9164   0024EE  322F               	rrcf	(??_floorf+2)^0,f,c
  9165   0024F0  322E               	rrcf	(??_floorf+1)^0,f,c
  9166   0024F2  322D               	rrcf	??_floorf^0,f,c
  9167   0024F4                     u4500:
  9168   0024F4  2EE8               	decfsz	wreg,f,c
  9169   0024F6  EF75  F012         	goto	u4505
  9170   0024FA  502D               	movf	??_floorf^0,w,c
  9171   0024FC  102E               	iorwf	(??_floorf+1)^0,w,c
  9172   0024FE  102F               	iorwf	(??_floorf+2)^0,w,c
  9173   002500  1030               	iorwf	(??_floorf+3)^0,w,c
  9174   002502  B4D8               	btfsc	status,2,c
  9175   002504  EF86  F012         	goto	u4511
  9176   002508  EF88  F012         	goto	u4510
  9177   00250C                     u4511:
  9178   00250C  EF90  F012         	goto	l1431
  9179   002510                     u4510:
  9180   002510  5033               	movf	floorf@m^0,w,c
  9181   002512  2639               	addwf	floorf@u^0,f,c
  9182   002514  5034               	movf	(floorf@m+1)^0,w,c
  9183   002516  223A               	addwfc	(floorf@u+1)^0,f,c
  9184   002518  5035               	movf	(floorf@m+2)^0,w,c
  9185   00251A  223B               	addwfc	(floorf@u+2)^0,f,c
  9186   00251C  5036               	movf	(floorf@m+3)^0,w,c
  9187   00251E  223C               	addwfc	(floorf@u+3)^0,f,c
  9188   002520                     l1431:
  9189   002520  1C33               	comf	floorf@m^0,w,c
  9190   002522  6E2D               	movwf	??_floorf^0,c
  9191   002524  1C34               	comf	(floorf@m+1)^0,w,c
  9192   002526  6E2E               	movwf	(??_floorf+1)^0,c
  9193   002528  1C35               	comf	(floorf@m+2)^0,w,c
  9194   00252A  6E2F               	movwf	(??_floorf+2)^0,c
  9195   00252C  1C36               	comf	(floorf@m+3)^0,w,c
  9196   00252E  6E30               	movwf	(??_floorf+3)^0,c
  9197   002530  502D               	movf	??_floorf^0,w,c
  9198   002532  1639               	andwf	floorf@u^0,f,c
  9199   002534  502E               	movf	(??_floorf+1)^0,w,c
  9200   002536  163A               	andwf	(floorf@u+1)^0,f,c
  9201   002538  502F               	movf	(??_floorf+2)^0,w,c
  9202   00253A  163B               	andwf	(floorf@u+2)^0,f,c
  9203   00253C  5030               	movf	(??_floorf+3)^0,w,c
  9204   00253E  163C               	andwf	(floorf@u+3)^0,f,c
  9205   002540  EFE6  F012         	goto	l4407
  9206   002544                     l4399:
  9207   002544  C039  F02D         	movff	floorf@u,??_floorf
  9208   002548  C03A  F02E         	movff	floorf@u+1,??_floorf+1
  9209   00254C  C03B  F02F         	movff	floorf@u+2,??_floorf+2
  9210   002550  C03C  F030         	movff	floorf@u+3,??_floorf+3
  9211   002554  0E20               	movlw	32
  9212   002556  EFB2  F012         	goto	u4520
  9213   00255A                     u4525:
  9214   00255A  90D8               	bcf	status,0,c
  9215   00255C  3230               	rrcf	(??_floorf+3)^0,f,c
  9216   00255E  322F               	rrcf	(??_floorf+2)^0,f,c
  9217   002560  322E               	rrcf	(??_floorf+1)^0,f,c
  9218   002562  322D               	rrcf	??_floorf^0,f,c
  9219   002564                     u4520:
  9220   002564  2EE8               	decfsz	wreg,f,c
  9221   002566  EFAD  F012         	goto	u4525
  9222   00256A  502D               	movf	??_floorf^0,w,c
  9223   00256C  102E               	iorwf	(??_floorf+1)^0,w,c
  9224   00256E  102F               	iorwf	(??_floorf+2)^0,w,c
  9225   002570  1030               	iorwf	(??_floorf+3)^0,w,c
  9226   002572  A4D8               	btfss	status,2,c
  9227   002574  EFBE  F012         	goto	u4531
  9228   002578  EFC0  F012         	goto	u4530
  9229   00257C                     u4531:
  9230   00257C  EFCA  F012         	goto	l4403
  9231   002580                     u4530:
  9232   002580  0E00               	movlw	0
  9233   002582  6E39               	movwf	floorf@u^0,c
  9234   002584  0E00               	movlw	0
  9235   002586  6E3A               	movwf	(floorf@u+1)^0,c
  9236   002588  0E00               	movlw	0
  9237   00258A  6E3B               	movwf	(floorf@u+2)^0,c
  9238   00258C  0E00               	movlw	0
  9239   00258E  6E3C               	movwf	(floorf@u+3)^0,c
  9240   002590  EFE6  F012         	goto	l4407
  9241   002594                     l4403:
  9242   002594  90D8               	bcf	status,0,c
  9243   002596  3439               	rlcf	floorf@u^0,w,c
  9244   002598  6E2D               	movwf	??_floorf^0,c
  9245   00259A  343A               	rlcf	(floorf@u+1)^0,w,c
  9246   00259C  6E2E               	movwf	(??_floorf+1)^0,c
  9247   00259E  343B               	rlcf	(floorf@u+2)^0,w,c
  9248   0025A0  6E2F               	movwf	(??_floorf+2)^0,c
  9249   0025A2  343C               	rlcf	(floorf@u+3)^0,w,c
  9250   0025A4  6E30               	movwf	(??_floorf+3)^0,c
  9251   0025A6  502D               	movf	??_floorf^0,w,c
  9252   0025A8  102E               	iorwf	(??_floorf+1)^0,w,c
  9253   0025AA  102F               	iorwf	(??_floorf+2)^0,w,c
  9254   0025AC  1030               	iorwf	(??_floorf+3)^0,w,c
  9255   0025AE  B4D8               	btfsc	status,2,c
  9256   0025B0  EFDC  F012         	goto	u4541
  9257   0025B4  EFDE  F012         	goto	u4540
  9258   0025B8                     u4541:
  9259   0025B8  EFE6  F012         	goto	l4407
  9260   0025BC                     u4540:
  9261   0025BC  0E00               	movlw	0
  9262   0025BE  6E39               	movwf	floorf@u^0,c
  9263   0025C0  0E00               	movlw	0
  9264   0025C2  6E3A               	movwf	(floorf@u+1)^0,c
  9265   0025C4  0E80               	movlw	128
  9266   0025C6  6E3B               	movwf	(floorf@u+2)^0,c
  9267   0025C8  0EBF               	movlw	191
  9268   0025CA  6E3C               	movwf	(floorf@u+3)^0,c
  9269   0025CC                     l4407:
  9270   0025CC  C039  F029         	movff	floorf@u,?_floorf
  9271   0025D0  C03A  F02A         	movff	floorf@u+1,?_floorf+1
  9272   0025D4  C03B  F02B         	movff	floorf@u+2,?_floorf+2
  9273   0025D8  C03C  F02C         	movff	floorf@u+3,?_floorf+3
  9274   0025DC                     l1428:
  9275   0025DC  0012               	return		;funcret
  9276   0025DE                     __end_of_floorf:
  9277                           	callstack 0
  9278                           
  9279 ;; *************** function ___fpclassifyf *****************
  9280 ;; Defined at:
  9281 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;  x               4    1[COMRAM] float 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  u               4   11[COMRAM] struct .
  9286 ;;  e               2    9[COMRAM] int 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  2    1[COMRAM] int 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9297 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9299 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;Total ram usage:       14 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 1
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_efgtoa
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text34
  9311   0034FE                     __ptext34:
  9312                           	callstack 0
  9313   0034FE                     ___fpclassifyf:
  9314                           	callstack 24
  9315   0034FE  C16F  F00C         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9316   003502  C170  F00D         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9317   003506  C171  F00E         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9318   00350A  C172  F00F         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9319   00350E  C002  F00C         	movff	___fpclassifyf@x,___fpclassifyf@u
  9320   003512  C003  F00D         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9321   003516  C004  F00E         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9322   00351A  C005  F00F         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9323   00351E  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  9324   003522  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9325   003526  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9326   00352A  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9327   00352E  0E18               	movlw	24
  9328   003530  EF9F  F01A         	goto	u4370
  9329   003534                     u4375:
  9330   003534  90D8               	bcf	status,0,c
  9331   003536  3209               	rrcf	(??___fpclassifyf+3)^0,f,c
  9332   003538  3208               	rrcf	(??___fpclassifyf+2)^0,f,c
  9333   00353A  3207               	rrcf	(??___fpclassifyf+1)^0,f,c
  9334   00353C  3206               	rrcf	??___fpclassifyf^0,f,c
  9335   00353E                     u4370:
  9336   00353E  2EE8               	decfsz	wreg,f,c
  9337   003540  EF9A  F01A         	goto	u4375
  9338   003544  5006               	movf	??___fpclassifyf^0,w,c
  9339   003546  6E0A               	movwf	___fpclassifyf@e^0,c
  9340   003548  6A0B               	clrf	(___fpclassifyf@e+1)^0,c
  9341   00354A  500A               	movf	___fpclassifyf@e^0,w,c
  9342   00354C  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9343   00354E  A4D8               	btfss	status,2,c
  9344   003550  EFAC  F01A         	goto	u4381
  9345   003554  EFAE  F01A         	goto	u4380
  9346   003558                     u4381:
  9347   003558  EFCE  F01A         	goto	l4369
  9348   00355C                     u4380:
  9349   00355C  90D8               	bcf	status,0,c
  9350   00355E  340C               	rlcf	___fpclassifyf@u^0,w,c
  9351   003560  6E06               	movwf	??___fpclassifyf^0,c
  9352   003562  340D               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9353   003564  6E07               	movwf	(??___fpclassifyf+1)^0,c
  9354   003566  340E               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9355   003568  6E08               	movwf	(??___fpclassifyf+2)^0,c
  9356   00356A  340F               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9357   00356C  6E09               	movwf	(??___fpclassifyf+3)^0,c
  9358   00356E  5006               	movf	??___fpclassifyf^0,w,c
  9359   003570  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  9360   003572  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  9361   003574  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  9362   003576  A4D8               	btfss	status,2,c
  9363   003578  EFC0  F01A         	goto	u4391
  9364   00357C  EFC2  F01A         	goto	u4390
  9365   003580                     u4391:
  9366   003580  EFC8  F01A         	goto	l4365
  9367   003584                     u4390:
  9368   003584  0E00               	movlw	0
  9369   003586  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9370   003588  0E02               	movlw	2
  9371   00358A  6E02               	movwf	?___fpclassifyf^0,c
  9372   00358C  EFFD  F01A         	goto	l1414
  9373   003590                     l4365:
  9374   003590  0E00               	movlw	0
  9375   003592  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9376   003594  0E03               	movlw	3
  9377   003596  6E02               	movwf	?___fpclassifyf^0,c
  9378   003598  EFFD  F01A         	goto	l1414
  9379   00359C                     l4369:
  9380   00359C  280A               	incf	___fpclassifyf@e^0,w,c
  9381   00359E  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9382   0035A0  A4D8               	btfss	status,2,c
  9383   0035A2  EFD5  F01A         	goto	u4401
  9384   0035A6  EFD7  F01A         	goto	u4400
  9385   0035AA                     u4401:
  9386   0035AA  EFF9  F01A         	goto	l4375
  9387   0035AE                     u4400:
  9388   0035AE  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  9389   0035B2  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9390   0035B6  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9391   0035BA  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9392   0035BE  0E09               	movlw	9
  9393   0035C0                     u4415:
  9394   0035C0  90D8               	bcf	status,0,c
  9395   0035C2  3606               	rlcf	??___fpclassifyf^0,f,c
  9396   0035C4  3607               	rlcf	(??___fpclassifyf+1)^0,f,c
  9397   0035C6  3608               	rlcf	(??___fpclassifyf+2)^0,f,c
  9398   0035C8  3609               	rlcf	(??___fpclassifyf+3)^0,f,c
  9399   0035CA  2EE8               	decfsz	wreg,f,c
  9400   0035CC  EFE0  F01A         	goto	u4415
  9401   0035D0  5006               	movf	??___fpclassifyf^0,w,c
  9402   0035D2  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  9403   0035D4  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  9404   0035D6  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  9405   0035D8  B4D8               	btfsc	status,2,c
  9406   0035DA  EFF1  F01A         	goto	u4421
  9407   0035DE  EFF4  F01A         	goto	u4420
  9408   0035E2                     u4421:
  9409   0035E2  0E01               	movlw	1
  9410   0035E4  EFF5  F01A         	goto	u4430
  9411   0035E8                     u4420:
  9412   0035E8  0E00               	movlw	0
  9413   0035EA                     u4430:
  9414   0035EA  6E02               	movwf	?___fpclassifyf^0,c
  9415   0035EC  6A03               	clrf	(?___fpclassifyf+1)^0,c
  9416   0035EE  EFFD  F01A         	goto	l1414
  9417   0035F2                     l4375:
  9418   0035F2  0E00               	movlw	0
  9419   0035F4  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9420   0035F6  0E04               	movlw	4
  9421   0035F8  6E02               	movwf	?___fpclassifyf^0,c
  9422   0035FA                     l1414:
  9423   0035FA  0012               	return		;funcret
  9424   0035FC                     __end_of___fpclassifyf:
  9425                           	callstack 0
  9426                           
  9427 ;; *************** function ___fltol *****************
  9428 ;; Defined at:
  9429 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  f1              4    0[BANK0 ] int 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  exp1            1   86[COMRAM] unsigned char 
  9434 ;;  sign1           1   85[COMRAM] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  4    0[BANK0 ] long 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;Total ram usage:       10 bytes
  9449 ;; Hardware stack levels used: 1
  9450 ;; Hardware stack levels required when called: 1
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_DAC_main
  9455 ;;		_reprak_main
  9456 ;;		_efgtoa
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text35
  9461   0031F2                     __ptext35:
  9462                           	callstack 0
  9463   0031F2                     ___fltol:
  9464                           	callstack 28
  9465   0031F2  0100               	movlb	0	; () banked
  9466   0031F4  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9467   0031F6  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9468   0031F8  6E57               	movwf	___fltol@exp1^0,c
  9469   0031FA  5057               	movf	___fltol@exp1^0,w,c
  9470   0031FC  A4D8               	btfss	status,2,c
  9471   0031FE  EF03  F019         	goto	u6741
  9472   003202  EF05  F019         	goto	u6740
  9473   003206                     u6741:
  9474   003206  EF0F  F019         	goto	l6041
  9475   00320A                     u6740:
  9476   00320A                     l6037:
  9477                           
  9478                           ; BSR set to: 0
  9479   00320A  0E00               	movlw	0
  9480   00320C  6F60               	movwf	?___fltol& (0+255),b
  9481   00320E  0E00               	movlw	0
  9482   003210  6F61               	movwf	(?___fltol+1)& (0+255),b
  9483   003212  0E00               	movlw	0
  9484   003214  6F62               	movwf	(?___fltol+2)& (0+255),b
  9485   003216  0E00               	movlw	0
  9486   003218  6F63               	movwf	(?___fltol+3)& (0+255),b
  9487   00321A  EF7C  F019         	goto	l868
  9488   00321E                     l6041:
  9489                           
  9490                           ; BSR set to: 0
  9491   00321E  C060  F052         	movff	___fltol@f1,??___fltol
  9492   003222  C061  F053         	movff	___fltol@f1+1,??___fltol+1
  9493   003226  C062  F054         	movff	___fltol@f1+2,??___fltol+2
  9494   00322A  C063  F055         	movff	___fltol@f1+3,??___fltol+3
  9495   00322E  0E20               	movlw	32
  9496   003230  EF1F  F019         	goto	u6750
  9497   003234                     u6755:
  9498   003234  90D8               	bcf	status,0,c
  9499   003236  3255               	rrcf	(??___fltol+3)^0,f,c
  9500   003238  3254               	rrcf	(??___fltol+2)^0,f,c
  9501   00323A  3253               	rrcf	(??___fltol+1)^0,f,c
  9502   00323C  3252               	rrcf	??___fltol^0,f,c
  9503   00323E                     u6750:
  9504   00323E  2EE8               	decfsz	wreg,f,c
  9505   003240  EF1A  F019         	goto	u6755
  9506   003244  5052               	movf	??___fltol^0,w,c
  9507   003246  6E56               	movwf	___fltol@sign1^0,c
  9508   003248                     
  9509                           ; BSR set to: 0
  9510   003248  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  9511   00324A                     
  9512                           ; BSR set to: 0
  9513   00324A  0EFF               	movlw	255
  9514   00324C  1760               	andwf	___fltol@f1& (0+255),f,b
  9515   00324E  0EFF               	movlw	255
  9516   003250  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  9517   003252  0EFF               	movlw	255
  9518   003254  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  9519   003256  0E00               	movlw	0
  9520   003258  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  9521   00325A                     
  9522                           ; BSR set to: 0
  9523   00325A  0E96               	movlw	150
  9524   00325C  5E57               	subwf	___fltol@exp1^0,f,c
  9525   00325E                     
  9526                           ; BSR set to: 0
  9527   00325E  BE57               	btfsc	___fltol@exp1^0,7,c
  9528   003260  EF36  F019         	goto	u6760
  9529   003264  EF34  F019         	goto	u6761
  9530   003268                     u6761:
  9531   003268  EF4C  F019         	goto	l6061
  9532   00326C                     u6760:
  9533   00326C                     
  9534                           ; BSR set to: 0
  9535   00326C  5057               	movf	___fltol@exp1^0,w,c
  9536   00326E  0A80               	xorlw	128
  9537   003270  0F97               	addlw	151
  9538   003272  B0D8               	btfsc	status,0,c
  9539   003274  EF3E  F019         	goto	u6771
  9540   003278  EF40  F019         	goto	u6770
  9541   00327C                     u6771:
  9542   00327C  EF42  F019         	goto	l6057
  9543   003280                     u6770:
  9544   003280  EF05  F019         	goto	l6037
  9545   003284                     l6057:
  9546                           
  9547                           ; BSR set to: 0
  9548   003284  90D8               	bcf	status,0,c
  9549   003286  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9550   003288  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9551   00328A  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9552   00328C  3360               	rrcf	___fltol@f1& (0+255),f,b
  9553   00328E                     
  9554                           ; BSR set to: 0
  9555   00328E  3E57               	incfsz	___fltol@exp1^0,f,c
  9556   003290  EF42  F019         	goto	l6057
  9557   003294  EF64  F019         	goto	l6071
  9558   003298                     l6061:
  9559                           
  9560                           ; BSR set to: 0
  9561   003298  0E1F               	movlw	31
  9562   00329A  6457               	cpfsgt	___fltol@exp1^0,c
  9563   00329C  EF52  F019         	goto	u6781
  9564   0032A0  EF54  F019         	goto	u6780
  9565   0032A4                     u6781:
  9566   0032A4  EF5C  F019         	goto	l6069
  9567   0032A8                     u6780:
  9568   0032A8  EF05  F019         	goto	l6037
  9569   0032AC                     l6067:
  9570                           
  9571                           ; BSR set to: 0
  9572   0032AC  90D8               	bcf	status,0,c
  9573   0032AE  3760               	rlcf	___fltol@f1& (0+255),f,b
  9574   0032B0  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9575   0032B2  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9576   0032B4  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9577   0032B6  0657               	decf	___fltol@exp1^0,f,c
  9578   0032B8                     l6069:
  9579                           
  9580                           ; BSR set to: 0
  9581   0032B8  5057               	movf	___fltol@exp1^0,w,c
  9582   0032BA  A4D8               	btfss	status,2,c
  9583   0032BC  EF62  F019         	goto	u6791
  9584   0032C0  EF64  F019         	goto	u6790
  9585   0032C4                     u6791:
  9586   0032C4  EF56  F019         	goto	l6067
  9587   0032C8                     u6790:
  9588   0032C8                     l6071:
  9589                           
  9590                           ; BSR set to: 0
  9591   0032C8  5056               	movf	___fltol@sign1^0,w,c
  9592   0032CA  B4D8               	btfsc	status,2,c
  9593   0032CC  EF6A  F019         	goto	u6801
  9594   0032D0  EF6C  F019         	goto	u6800
  9595   0032D4                     u6801:
  9596   0032D4  EF74  F019         	goto	l6075
  9597   0032D8                     u6800:
  9598   0032D8                     
  9599                           ; BSR set to: 0
  9600   0032D8  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  9601   0032DA  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  9602   0032DC  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  9603   0032DE  6D60               	negf	___fltol@f1& (0+255),b
  9604   0032E0  0E00               	movlw	0
  9605   0032E2  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9606   0032E4  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9607   0032E6  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9608   0032E8                     l6075:
  9609                           
  9610                           ; BSR set to: 0
  9611   0032E8  C060  F060         	movff	___fltol@f1,?___fltol
  9612   0032EC  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  9613   0032F0  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  9614   0032F4  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  9615   0032F8                     l868:
  9616                           
  9617                           ; BSR set to: 0
  9618   0032F8  0012               	return		;funcret
  9619   0032FA                     __end_of___fltol:
  9620                           	callstack 0
  9621                           
  9622 ;; *************** function ___flsub *****************
  9623 ;; Defined at:
  9624 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  b               4    0[BANK0 ] long 
  9627 ;;  a               4    4[BANK0 ] long 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  4    0[BANK0 ] long 
  9632 ;; Registers used:
  9633 ;;		wreg, status,2, status,0, cstack
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9639 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9642 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;Total ram usage:        8 bytes
  9644 ;; Hardware stack levels used: 1
  9645 ;; Hardware stack levels required when called: 2
  9646 ;; This function calls:
  9647 ;;		___fladd
  9648 ;; This function is called by:
  9649 ;;		_efgtoa
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text36
  9654   00418E                     __ptext36:
  9655                           	callstack 0
  9656   00418E                     ___flsub:
  9657                           	callstack 23
  9658   00418E  0E00               	movlw	0
  9659   004190  0100               	movlb	0	; () banked
  9660   004192  1B64               	xorwf	___flsub@a& (0+255),f,b
  9661   004194  0E00               	movlw	0
  9662   004196  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
  9663   004198  0E00               	movlw	0
  9664   00419A  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
  9665   00419C  0E80               	movlw	128
  9666   00419E  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
  9667   0041A0                     
  9668                           ; BSR set to: 0
  9669   0041A0  C060  F042         	movff	___flsub@b,___fladd@b
  9670   0041A4  C061  F043         	movff	___flsub@b+1,___fladd@b+1
  9671   0041A8  C062  F044         	movff	___flsub@b+2,___fladd@b+2
  9672   0041AC  C063  F045         	movff	___flsub@b+3,___fladd@b+3
  9673   0041B0  C064  F046         	movff	___flsub@a,___fladd@a
  9674   0041B4  C065  F047         	movff	___flsub@a+1,___fladd@a+1
  9675   0041B8  C066  F048         	movff	___flsub@a+2,___fladd@a+2
  9676   0041BC  C067  F049         	movff	___flsub@a+3,___fladd@a+3
  9677   0041C0  ECFA  F005         	call	___fladd	;wreg free
  9678   0041C4  C042  F060         	movff	?___fladd,?___flsub
  9679   0041C8  C043  F061         	movff	?___fladd+1,?___flsub+1
  9680   0041CC  C044  F062         	movff	?___fladd+2,?___flsub+2
  9681   0041D0  C045  F063         	movff	?___fladd+3,?___flsub+3
  9682   0041D4  0012               	return		;funcret
  9683   0041D6                     __end_of___flsub:
  9684                           	callstack 0
  9685                           
  9686 ;; *************** function ___fladd *****************
  9687 ;; Defined at:
  9688 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  b               4   65[COMRAM] long 
  9691 ;;  a               4   69[COMRAM] long 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  grs             1   80[COMRAM] unsigned char 
  9694 ;;  bexp            1   79[COMRAM] unsigned char 
  9695 ;;  aexp            1   78[COMRAM] unsigned char 
  9696 ;;  signs           1   77[COMRAM] unsigned char 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  4   65[COMRAM] unsigned char 
  9699 ;; Registers used:
  9700 ;;		wreg, status,2, status,0
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9706 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9710 ;;Total ram usage:       16 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 1
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_DAC_main
  9717 ;;		___flsub
  9718 ;;		_efgtoa
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text37
  9723   000BF4                     __ptext37:
  9724                           	callstack 0
  9725   000BF4                     ___fladd:
  9726                           	callstack 23
  9727   000BF4  5045               	movf	(___fladd@b+3)^0,w,c
  9728   000BF6  0B80               	andlw	128
  9729   000BF8  6E4E               	movwf	___fladd@signs^0,c
  9730   000BFA  5045               	movf	(___fladd@b+3)^0,w,c
  9731   000BFC  2445               	addwf	(___fladd@b+3)^0,w,c
  9732   000BFE  6E50               	movwf	___fladd@bexp^0,c
  9733   000C00  AE44               	btfss	(___fladd@b+2)^0,7,c
  9734   000C02  EF05  F006         	goto	u6351
  9735   000C06  EF07  F006         	goto	u6350
  9736   000C0A                     u6351:
  9737   000C0A  EF08  F006         	goto	l5833
  9738   000C0E                     u6350:
  9739   000C0E  8050               	bsf	___fladd@bexp^0,0,c
  9740   000C10                     l5833:
  9741   000C10  5050               	movf	___fladd@bexp^0,w,c
  9742   000C12  B4D8               	btfsc	status,2,c
  9743   000C14  EF0E  F006         	goto	u6361
  9744   000C18  EF10  F006         	goto	u6360
  9745   000C1C                     u6361:
  9746   000C1C  EF25  F006         	goto	l5843
  9747   000C20                     u6360:
  9748   000C20  2850               	incf	___fladd@bexp^0,w,c
  9749   000C22  A4D8               	btfss	status,2,c
  9750   000C24  EF16  F006         	goto	u6371
  9751   000C28  EF18  F006         	goto	u6370
  9752   000C2C                     u6371:
  9753   000C2C  EF20  F006         	goto	l5839
  9754   000C30                     u6370:
  9755   000C30  0E00               	movlw	0
  9756   000C32  6E42               	movwf	___fladd@b^0,c
  9757   000C34  0E00               	movlw	0
  9758   000C36  6E43               	movwf	(___fladd@b+1)^0,c
  9759   000C38  0E00               	movlw	0
  9760   000C3A  6E44               	movwf	(___fladd@b+2)^0,c
  9761   000C3C  0E00               	movlw	0
  9762   000C3E  6E45               	movwf	(___fladd@b+3)^0,c
  9763   000C40                     l5839:
  9764   000C40  8E44               	bsf	(___fladd@b+2)^0,7,c
  9765   000C42  0E00               	movlw	0
  9766   000C44  6E45               	movwf	(___fladd@b+3)^0,c
  9767   000C46  EF2D  F006         	goto	l5845
  9768   000C4A                     l5843:
  9769   000C4A  0E00               	movlw	0
  9770   000C4C  6E42               	movwf	___fladd@b^0,c
  9771   000C4E  0E00               	movlw	0
  9772   000C50  6E43               	movwf	(___fladd@b+1)^0,c
  9773   000C52  0E00               	movlw	0
  9774   000C54  6E44               	movwf	(___fladd@b+2)^0,c
  9775   000C56  0E00               	movlw	0
  9776   000C58  6E45               	movwf	(___fladd@b+3)^0,c
  9777   000C5A                     l5845:
  9778   000C5A  5049               	movf	(___fladd@a+3)^0,w,c
  9779   000C5C  0B80               	andlw	128
  9780   000C5E  6E4F               	movwf	___fladd@aexp^0,c
  9781   000C60  504E               	movf	___fladd@signs^0,w,c
  9782   000C62  184F               	xorwf	___fladd@aexp^0,w,c
  9783   000C64  B4D8               	btfsc	status,2,c
  9784   000C66  EF37  F006         	goto	u6381
  9785   000C6A  EF39  F006         	goto	u6380
  9786   000C6E                     u6381:
  9787   000C6E  EF3A  F006         	goto	l5851
  9788   000C72                     u6380:
  9789   000C72  8C4E               	bsf	___fladd@signs^0,6,c
  9790   000C74                     l5851:
  9791   000C74  5049               	movf	(___fladd@a+3)^0,w,c
  9792   000C76  2449               	addwf	(___fladd@a+3)^0,w,c
  9793   000C78  6E4F               	movwf	___fladd@aexp^0,c
  9794   000C7A  AE48               	btfss	(___fladd@a+2)^0,7,c
  9795   000C7C  EF42  F006         	goto	u6391
  9796   000C80  EF44  F006         	goto	u6390
  9797   000C84                     u6391:
  9798   000C84  EF45  F006         	goto	l5857
  9799   000C88                     u6390:
  9800   000C88  804F               	bsf	___fladd@aexp^0,0,c
  9801   000C8A                     l5857:
  9802   000C8A  504F               	movf	___fladd@aexp^0,w,c
  9803   000C8C  B4D8               	btfsc	status,2,c
  9804   000C8E  EF4B  F006         	goto	u6401
  9805   000C92  EF4D  F006         	goto	u6400
  9806   000C96                     u6401:
  9807   000C96  EF62  F006         	goto	l5867
  9808   000C9A                     u6400:
  9809   000C9A  284F               	incf	___fladd@aexp^0,w,c
  9810   000C9C  A4D8               	btfss	status,2,c
  9811   000C9E  EF53  F006         	goto	u6411
  9812   000CA2  EF55  F006         	goto	u6410
  9813   000CA6                     u6411:
  9814   000CA6  EF5D  F006         	goto	l5863
  9815   000CAA                     u6410:
  9816   000CAA  0E00               	movlw	0
  9817   000CAC  6E46               	movwf	___fladd@a^0,c
  9818   000CAE  0E00               	movlw	0
  9819   000CB0  6E47               	movwf	(___fladd@a+1)^0,c
  9820   000CB2  0E00               	movlw	0
  9821   000CB4  6E48               	movwf	(___fladd@a+2)^0,c
  9822   000CB6  0E00               	movlw	0
  9823   000CB8  6E49               	movwf	(___fladd@a+3)^0,c
  9824   000CBA                     l5863:
  9825   000CBA  8E48               	bsf	(___fladd@a+2)^0,7,c
  9826   000CBC  0E00               	movlw	0
  9827   000CBE  6E49               	movwf	(___fladd@a+3)^0,c
  9828   000CC0  EF6A  F006         	goto	l5869
  9829   000CC4                     l5867:
  9830   000CC4  0E00               	movlw	0
  9831   000CC6  6E46               	movwf	___fladd@a^0,c
  9832   000CC8  0E00               	movlw	0
  9833   000CCA  6E47               	movwf	(___fladd@a+1)^0,c
  9834   000CCC  0E00               	movlw	0
  9835   000CCE  6E48               	movwf	(___fladd@a+2)^0,c
  9836   000CD0  0E00               	movlw	0
  9837   000CD2  6E49               	movwf	(___fladd@a+3)^0,c
  9838   000CD4                     l5869:
  9839   000CD4  5050               	movf	___fladd@bexp^0,w,c
  9840   000CD6  5C4F               	subwf	___fladd@aexp^0,w,c
  9841   000CD8  B0D8               	btfsc	status,0,c
  9842   000CDA  EF71  F006         	goto	u6421
  9843   000CDE  EF73  F006         	goto	u6420
  9844   000CE2                     u6421:
  9845   000CE2  EF9A  F006         	goto	l5905
  9846   000CE6                     u6420:
  9847   000CE6  AC4E               	btfss	___fladd@signs^0,6,c
  9848   000CE8  EF78  F006         	goto	u6431
  9849   000CEC  EF7A  F006         	goto	u6430
  9850   000CF0                     u6431:
  9851   000CF0  EF7C  F006         	goto	l5875
  9852   000CF4                     u6430:
  9853   000CF4  0E80               	movlw	128
  9854   000CF6  1A4E               	xorwf	___fladd@signs^0,f,c
  9855   000CF8                     l5875:
  9856   000CF8  C050  F051         	movff	___fladd@bexp,___fladd@grs
  9857   000CFC  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  9858   000D00  C051  F04F         	movff	___fladd@grs,___fladd@aexp
  9859   000D04  C042  F051         	movff	___fladd@b,___fladd@grs
  9860   000D08  C046  F042         	movff	___fladd@a,___fladd@b
  9861   000D0C  C051  F046         	movff	___fladd@grs,___fladd@a
  9862   000D10  C043  F051         	movff	___fladd@b+1,___fladd@grs
  9863   000D14  C047  F043         	movff	___fladd@a+1,___fladd@b+1
  9864   000D18  C051  F047         	movff	___fladd@grs,___fladd@a+1
  9865   000D1C  C044  F051         	movff	___fladd@b+2,___fladd@grs
  9866   000D20  C048  F044         	movff	___fladd@a+2,___fladd@b+2
  9867   000D24  C051  F048         	movff	___fladd@grs,___fladd@a+2
  9868   000D28  C045  F051         	movff	___fladd@b+3,___fladd@grs
  9869   000D2C  C049  F045         	movff	___fladd@a+3,___fladd@b+3
  9870   000D30  C051  F049         	movff	___fladd@grs,___fladd@a+3
  9871   000D34                     l5905:
  9872   000D34  0E00               	movlw	0
  9873   000D36  6E51               	movwf	___fladd@grs^0,c
  9874   000D38  5050               	movf	___fladd@bexp^0,w,c
  9875   000D3A  C04F  F04A         	movff	___fladd@aexp,??___fladd
  9876   000D3E  6A4B               	clrf	(??___fladd+1)^0,c
  9877   000D40  5E4A               	subwf	??___fladd^0,f,c
  9878   000D42  0E00               	movlw	0
  9879   000D44  5A4B               	subwfb	(??___fladd+1)^0,f,c
  9880   000D46  BE4B               	btfsc	(??___fladd+1)^0,7,c
  9881   000D48  EFAF  F006         	goto	u6441
  9882   000D4C  504B               	movf	(??___fladd+1)^0,w,c
  9883   000D4E  E109               	bnz	u6440
  9884   000D50  0E1A               	movlw	26
  9885   000D52  5C4A               	subwf	??___fladd^0,w,c
  9886   000D54  A0D8               	btfss	status,0,c
  9887   000D56  EFAF  F006         	goto	u6441
  9888   000D5A  EFB1  F006         	goto	u6440
  9889   000D5E                     u6441:
  9890   000D5E  EFE8  F006         	goto	l1100
  9891   000D62                     u6440:
  9892   000D62  5042               	movf	___fladd@b^0,w,c
  9893   000D64  1043               	iorwf	(___fladd@b+1)^0,w,c
  9894   000D66  1044               	iorwf	(___fladd@b+2)^0,w,c
  9895   000D68  1045               	iorwf	(___fladd@b+3)^0,w,c
  9896   000D6A  A4D8               	btfss	status,2,c
  9897   000D6C  EFBA  F006         	goto	u6451
  9898   000D70  EFBD  F006         	goto	u6450
  9899   000D74                     u6451:
  9900   000D74  0E01               	movlw	1
  9901   000D76  EFBE  F006         	goto	u6460
  9902   000D7A                     u6450:
  9903   000D7A  0E00               	movlw	0
  9904   000D7C                     u6460:
  9905   000D7C  6E51               	movwf	___fladd@grs^0,c
  9906   000D7E  0E00               	movlw	0
  9907   000D80  6E42               	movwf	___fladd@b^0,c
  9908   000D82  0E00               	movlw	0
  9909   000D84  6E43               	movwf	(___fladd@b+1)^0,c
  9910   000D86  0E00               	movlw	0
  9911   000D88  6E44               	movwf	(___fladd@b+2)^0,c
  9912   000D8A  0E00               	movlw	0
  9913   000D8C  6E45               	movwf	(___fladd@b+3)^0,c
  9914   000D8E  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  9915   000D92  EFF1  F006         	goto	l1099
  9916   000D96                     l1101:
  9917   000D96  A051               	btfss	___fladd@grs^0,0,c
  9918   000D98  EFD0  F006         	goto	u6471
  9919   000D9C  EFD2  F006         	goto	u6470
  9920   000DA0                     u6471:
  9921   000DA0  EFD8  F006         	goto	l5917
  9922   000DA4                     u6470:
  9923   000DA4  90D8               	bcf	status,0,c
  9924   000DA6  3051               	rrcf	___fladd@grs^0,w,c
  9925   000DA8  0901               	iorlw	1
  9926   000DAA  6E51               	movwf	___fladd@grs^0,c
  9927   000DAC  EFDA  F006         	goto	l5919
  9928   000DB0                     l5917:
  9929   000DB0  90D8               	bcf	status,0,c
  9930   000DB2  3251               	rrcf	___fladd@grs^0,f,c
  9931   000DB4                     l5919:
  9932   000DB4  A042               	btfss	___fladd@b^0,0,c
  9933   000DB6  EFDF  F006         	goto	u6481
  9934   000DBA  EFE1  F006         	goto	u6480
  9935   000DBE                     u6481:
  9936   000DBE  EFE2  F006         	goto	l5923
  9937   000DC2                     u6480:
  9938   000DC2  8E51               	bsf	___fladd@grs^0,7,c
  9939   000DC4                     l5923:
  9940   000DC4  3445               	rlcf	(___fladd@b+3)^0,w,c
  9941   000DC6  3245               	rrcf	(___fladd@b+3)^0,f,c
  9942   000DC8  3244               	rrcf	(___fladd@b+2)^0,f,c
  9943   000DCA  3243               	rrcf	(___fladd@b+1)^0,f,c
  9944   000DCC  3242               	rrcf	___fladd@b^0,f,c
  9945   000DCE  2A50               	incf	___fladd@bexp^0,f,c
  9946   000DD0                     l1100:
  9947   000DD0  504F               	movf	___fladd@aexp^0,w,c
  9948   000DD2  5C50               	subwf	___fladd@bexp^0,w,c
  9949   000DD4  A0D8               	btfss	status,0,c
  9950   000DD6  EFEF  F006         	goto	u6491
  9951   000DDA  EFF1  F006         	goto	u6490
  9952   000DDE                     u6491:
  9953   000DDE  EFCB  F006         	goto	l1101
  9954   000DE2                     u6490:
  9955   000DE2                     l1099:
  9956   000DE2  BC4E               	btfsc	___fladd@signs^0,6,c
  9957   000DE4  EFF6  F006         	goto	u6501
  9958   000DE8  EFF8  F006         	goto	u6500
  9959   000DEC                     u6501:
  9960   000DEC  EF38  F007         	goto	l5951
  9961   000DF0                     u6500:
  9962   000DF0  5050               	movf	___fladd@bexp^0,w,c
  9963   000DF2  A4D8               	btfss	status,2,c
  9964   000DF4  EFFE  F006         	goto	u6511
  9965   000DF8  EF00  F007         	goto	u6510
  9966   000DFC                     u6511:
  9967   000DFC  EF0A  F007         	goto	l5933
  9968   000E00                     u6510:
  9969   000E00  0E00               	movlw	0
  9970   000E02  6E42               	movwf	?___fladd^0,c
  9971   000E04  0E00               	movlw	0
  9972   000E06  6E43               	movwf	(?___fladd+1)^0,c
  9973   000E08  0E00               	movlw	0
  9974   000E0A  6E44               	movwf	(?___fladd+2)^0,c
  9975   000E0C  0E00               	movlw	0
  9976   000E0E  6E45               	movwf	(?___fladd+3)^0,c
  9977   000E10  EF59  F008         	goto	l1108
  9978   000E14                     l5933:
  9979   000E14  5046               	movf	___fladd@a^0,w,c
  9980   000E16  2642               	addwf	___fladd@b^0,f,c
  9981   000E18  5047               	movf	(___fladd@a+1)^0,w,c
  9982   000E1A  2243               	addwfc	(___fladd@b+1)^0,f,c
  9983   000E1C  5048               	movf	(___fladd@a+2)^0,w,c
  9984   000E1E  2244               	addwfc	(___fladd@b+2)^0,f,c
  9985   000E20  5049               	movf	(___fladd@a+3)^0,w,c
  9986   000E22  2245               	addwfc	(___fladd@b+3)^0,f,c
  9987   000E24  A045               	btfss	(___fladd@b+3)^0,0,c
  9988   000E26  EF17  F007         	goto	u6521
  9989   000E2A  EF19  F007         	goto	u6520
  9990   000E2E                     u6521:
  9991   000E2E  EFC5  F007         	goto	l5987
  9992   000E32                     u6520:
  9993   000E32  A051               	btfss	___fladd@grs^0,0,c
  9994   000E34  EF1E  F007         	goto	u6531
  9995   000E38  EF20  F007         	goto	u6530
  9996   000E3C                     u6531:
  9997   000E3C  EF26  F007         	goto	l5941
  9998   000E40                     u6530:
  9999   000E40  90D8               	bcf	status,0,c
 10000   000E42  3051               	rrcf	___fladd@grs^0,w,c
 10001   000E44  0901               	iorlw	1
 10002   000E46  6E51               	movwf	___fladd@grs^0,c
 10003   000E48  EF28  F007         	goto	l5943
 10004   000E4C                     l5941:
 10005   000E4C  90D8               	bcf	status,0,c
 10006   000E4E  3251               	rrcf	___fladd@grs^0,f,c
 10007   000E50                     l5943:
 10008   000E50  A042               	btfss	___fladd@b^0,0,c
 10009   000E52  EF2D  F007         	goto	u6541
 10010   000E56  EF2F  F007         	goto	u6540
 10011   000E5A                     u6541:
 10012   000E5A  EF30  F007         	goto	l5947
 10013   000E5E                     u6540:
 10014   000E5E  8E51               	bsf	___fladd@grs^0,7,c
 10015   000E60                     l5947:
 10016   000E60  3445               	rlcf	(___fladd@b+3)^0,w,c
 10017   000E62  3245               	rrcf	(___fladd@b+3)^0,f,c
 10018   000E64  3244               	rrcf	(___fladd@b+2)^0,f,c
 10019   000E66  3243               	rrcf	(___fladd@b+1)^0,f,c
 10020   000E68  3242               	rrcf	___fladd@b^0,f,c
 10021   000E6A  2A50               	incf	___fladd@bexp^0,f,c
 10022   000E6C  EFC5  F007         	goto	l5987
 10023   000E70                     l5951:
 10024   000E70  5046               	movf	___fladd@a^0,w,c
 10025   000E72  5C42               	subwf	___fladd@b^0,w,c
 10026   000E74  5047               	movf	(___fladd@a+1)^0,w,c
 10027   000E76  5843               	subwfb	(___fladd@b+1)^0,w,c
 10028   000E78  5048               	movf	(___fladd@a+2)^0,w,c
 10029   000E7A  5844               	subwfb	(___fladd@b+2)^0,w,c
 10030   000E7C  5045               	movf	(___fladd@b+3)^0,w,c
 10031   000E7E  0A80               	xorlw	128
 10032   000E80  6E4A               	movwf	??___fladd^0,c
 10033   000E82  5049               	movf	(___fladd@a+3)^0,w,c
 10034   000E84  0A80               	xorlw	128
 10035   000E86  584A               	subwfb	??___fladd^0,w,c
 10036   000E88  B0D8               	btfsc	status,0,c
 10037   000E8A  EF49  F007         	goto	u6551
 10038   000E8E  EF4B  F007         	goto	u6550
 10039   000E92                     u6551:
 10040   000E92  EF76  F007         	goto	l5961
 10041   000E96                     u6550:
 10042   000E96  5042               	movf	___fladd@b^0,w,c
 10043   000E98  5C46               	subwf	___fladd@a^0,w,c
 10044   000E9A  6E4A               	movwf	??___fladd^0,c
 10045   000E9C  5043               	movf	(___fladd@b+1)^0,w,c
 10046   000E9E  5847               	subwfb	(___fladd@a+1)^0,w,c
 10047   000EA0  6E4B               	movwf	(??___fladd+1)^0,c
 10048   000EA2  5044               	movf	(___fladd@b+2)^0,w,c
 10049   000EA4  5848               	subwfb	(___fladd@a+2)^0,w,c
 10050   000EA6  6E4C               	movwf	(??___fladd+2)^0,c
 10051   000EA8  5045               	movf	(___fladd@b+3)^0,w,c
 10052   000EAA  5849               	subwfb	(___fladd@a+3)^0,w,c
 10053   000EAC  6E4D               	movwf	(??___fladd+3)^0,c
 10054   000EAE  0EFF               	movlw	255
 10055   000EB0  244A               	addwf	??___fladd^0,w,c
 10056   000EB2  6E42               	movwf	___fladd@b^0,c
 10057   000EB4  0EFF               	movlw	255
 10058   000EB6  204B               	addwfc	(??___fladd+1)^0,w,c
 10059   000EB8  6E43               	movwf	(___fladd@b+1)^0,c
 10060   000EBA  0EFF               	movlw	255
 10061   000EBC  204C               	addwfc	(??___fladd+2)^0,w,c
 10062   000EBE  6E44               	movwf	(___fladd@b+2)^0,c
 10063   000EC0  0EFF               	movlw	255
 10064   000EC2  204D               	addwfc	(??___fladd+3)^0,w,c
 10065   000EC4  6E45               	movwf	(___fladd@b+3)^0,c
 10066   000EC6  0E80               	movlw	128
 10067   000EC8  1A4E               	xorwf	___fladd@signs^0,f,c
 10068   000ECA  6C51               	negf	___fladd@grs^0,c
 10069   000ECC  5051               	movf	___fladd@grs^0,w,c
 10070   000ECE  A4D8               	btfss	status,2,c
 10071   000ED0  EF6C  F007         	goto	u6561
 10072   000ED4  EF6E  F007         	goto	u6560
 10073   000ED8                     u6561:
 10074   000ED8  EF7E  F007         	goto	l1116
 10075   000EDC                     u6560:
 10076   000EDC  0E01               	movlw	1
 10077   000EDE  2642               	addwf	___fladd@b^0,f,c
 10078   000EE0  0E00               	movlw	0
 10079   000EE2  2243               	addwfc	(___fladd@b+1)^0,f,c
 10080   000EE4  2244               	addwfc	(___fladd@b+2)^0,f,c
 10081   000EE6  2245               	addwfc	(___fladd@b+3)^0,f,c
 10082   000EE8  EF7E  F007         	goto	l1116
 10083   000EEC                     l5961:
 10084   000EEC  5046               	movf	___fladd@a^0,w,c
 10085   000EEE  5E42               	subwf	___fladd@b^0,f,c
 10086   000EF0  5047               	movf	(___fladd@a+1)^0,w,c
 10087   000EF2  5A43               	subwfb	(___fladd@b+1)^0,f,c
 10088   000EF4  5048               	movf	(___fladd@a+2)^0,w,c
 10089   000EF6  5A44               	subwfb	(___fladd@b+2)^0,f,c
 10090   000EF8  5049               	movf	(___fladd@a+3)^0,w,c
 10091   000EFA  5A45               	subwfb	(___fladd@b+3)^0,f,c
 10092   000EFC                     l1116:
 10093   000EFC  5042               	movf	___fladd@b^0,w,c
 10094   000EFE  1043               	iorwf	(___fladd@b+1)^0,w,c
 10095   000F00  1044               	iorwf	(___fladd@b+2)^0,w,c
 10096   000F02  1045               	iorwf	(___fladd@b+3)^0,w,c
 10097   000F04  A4D8               	btfss	status,2,c
 10098   000F06  EF87  F007         	goto	u6571
 10099   000F0A  EF89  F007         	goto	u6570
 10100   000F0E                     u6571:
 10101   000F0E  EFBE  F007         	goto	l5985
 10102   000F12                     u6570:
 10103   000F12  5051               	movf	___fladd@grs^0,w,c
 10104   000F14  A4D8               	btfss	status,2,c
 10105   000F16  EF8F  F007         	goto	u6581
 10106   000F1A  EF91  F007         	goto	u6580
 10107   000F1E                     u6581:
 10108   000F1E  EFBE  F007         	goto	l5985
 10109   000F22                     u6580:
 10110   000F22  0E00               	movlw	0
 10111   000F24  6E42               	movwf	?___fladd^0,c
 10112   000F26  0E00               	movlw	0
 10113   000F28  6E43               	movwf	(?___fladd+1)^0,c
 10114   000F2A  0E00               	movlw	0
 10115   000F2C  6E44               	movwf	(?___fladd+2)^0,c
 10116   000F2E  0E00               	movlw	0
 10117   000F30  6E45               	movwf	(?___fladd+3)^0,c
 10118   000F32  EF59  F008         	goto	l1108
 10119   000F36                     l5969:
 10120   000F36  90D8               	bcf	status,0,c
 10121   000F38  3642               	rlcf	___fladd@b^0,f,c
 10122   000F3A  3643               	rlcf	(___fladd@b+1)^0,f,c
 10123   000F3C  3644               	rlcf	(___fladd@b+2)^0,f,c
 10124   000F3E  3645               	rlcf	(___fladd@b+3)^0,f,c
 10125   000F40  AE51               	btfss	___fladd@grs^0,7,c
 10126   000F42  EFA5  F007         	goto	u6591
 10127   000F46  EFA7  F007         	goto	u6590
 10128   000F4A                     u6591:
 10129   000F4A  EFA8  F007         	goto	l5975
 10130   000F4E                     u6590:
 10131   000F4E  8042               	bsf	___fladd@b^0,0,c
 10132   000F50                     l5975:
 10133   000F50  A051               	btfss	___fladd@grs^0,0,c
 10134   000F52  EFAD  F007         	goto	u6601
 10135   000F56  EFAF  F007         	goto	u6600
 10136   000F5A                     u6601:
 10137   000F5A  EFB3  F007         	goto	l5979
 10138   000F5E                     u6600:
 10139   000F5E  80D8               	bsf	status,0,c
 10140   000F60  3651               	rlcf	___fladd@grs^0,f,c
 10141   000F62  EFB5  F007         	goto	l5981
 10142   000F66                     l5979:
 10143   000F66  90D8               	bcf	status,0,c
 10144   000F68  3651               	rlcf	___fladd@grs^0,f,c
 10145   000F6A                     l5981:
 10146   000F6A  5050               	movf	___fladd@bexp^0,w,c
 10147   000F6C  B4D8               	btfsc	status,2,c
 10148   000F6E  EFBB  F007         	goto	u6611
 10149   000F72  EFBD  F007         	goto	u6610
 10150   000F76                     u6611:
 10151   000F76  EFBE  F007         	goto	l5985
 10152   000F7A                     u6610:
 10153   000F7A  0650               	decf	___fladd@bexp^0,f,c
 10154   000F7C                     l5985:
 10155   000F7C  AE44               	btfss	(___fladd@b+2)^0,7,c
 10156   000F7E  EFC3  F007         	goto	u6621
 10157   000F82  EFC5  F007         	goto	u6620
 10158   000F86                     u6621:
 10159   000F86  EF9B  F007         	goto	l5969
 10160   000F8A                     u6620:
 10161   000F8A                     l5987:
 10162   000F8A  0E00               	movlw	0
 10163   000F8C  6E4F               	movwf	___fladd@aexp^0,c
 10164   000F8E  AE51               	btfss	___fladd@grs^0,7,c
 10165   000F90  EFCC  F007         	goto	u6631
 10166   000F94  EFCE  F007         	goto	u6630
 10167   000F98                     u6631:
 10168   000F98  EFE6  F007         	goto	l1125
 10169   000F9C                     u6630:
 10170   000F9C  C051  F04A         	movff	___fladd@grs,??___fladd
 10171   000FA0  0E7F               	movlw	127
 10172   000FA2  164A               	andwf	??___fladd^0,f,c
 10173   000FA4  B4D8               	btfsc	status,2,c
 10174   000FA6  EFD7  F007         	goto	u6641
 10175   000FAA  EFD9  F007         	goto	u6640
 10176   000FAE                     u6641:
 10177   000FAE  EFDD  F007         	goto	l1126
 10178   000FB2                     u6640:
 10179   000FB2                     l5993:
 10180   000FB2  0E01               	movlw	1
 10181   000FB4  6E4F               	movwf	___fladd@aexp^0,c
 10182   000FB6  EFE6  F007         	goto	l1125
 10183   000FBA                     l1126:
 10184   000FBA  A042               	btfss	___fladd@b^0,0,c
 10185   000FBC  EFE2  F007         	goto	u6651
 10186   000FC0  EFE4  F007         	goto	u6650
 10187   000FC4                     u6651:
 10188   000FC4  EFE6  F007         	goto	l1125
 10189   000FC8                     u6650:
 10190   000FC8  EFD9  F007         	goto	l5993
 10191   000FCC                     l1125:
 10192   000FCC  504F               	movf	___fladd@aexp^0,w,c
 10193   000FCE  B4D8               	btfsc	status,2,c
 10194   000FD0  EFEC  F007         	goto	u6661
 10195   000FD4  EFEE  F007         	goto	u6660
 10196   000FD8                     u6661:
 10197   000FD8  EF19  F008         	goto	l6005
 10198   000FDC                     u6660:
 10199   000FDC  0E01               	movlw	1
 10200   000FDE  2642               	addwf	___fladd@b^0,f,c
 10201   000FE0  0E00               	movlw	0
 10202   000FE2  2243               	addwfc	(___fladd@b+1)^0,f,c
 10203   000FE4  2244               	addwfc	(___fladd@b+2)^0,f,c
 10204   000FE6  2245               	addwfc	(___fladd@b+3)^0,f,c
 10205   000FE8  A045               	btfss	(___fladd@b+3)^0,0,c
 10206   000FEA  EFF9  F007         	goto	u6671
 10207   000FEE  EFFB  F007         	goto	u6670
 10208   000FF2                     u6671:
 10209   000FF2  EF19  F008         	goto	l6005
 10210   000FF6                     u6670:
 10211   000FF6  C042  F04A         	movff	___fladd@b,??___fladd
 10212   000FFA  C043  F04B         	movff	___fladd@b+1,??___fladd+1
 10213   000FFE  C044  F04C         	movff	___fladd@b+2,??___fladd+2
 10214   001002  C045  F04D         	movff	___fladd@b+3,??___fladd+3
 10215   001006  344D               	rlcf	(??___fladd+3)^0,w,c
 10216   001008  324D               	rrcf	(??___fladd+3)^0,f,c
 10217   00100A  324C               	rrcf	(??___fladd+2)^0,f,c
 10218   00100C  324B               	rrcf	(??___fladd+1)^0,f,c
 10219   00100E  324A               	rrcf	??___fladd^0,f,c
 10220   001010  C04A  F042         	movff	??___fladd,___fladd@b
 10221   001014  C04B  F043         	movff	??___fladd+1,___fladd@b+1
 10222   001018  C04C  F044         	movff	??___fladd+2,___fladd@b+2
 10223   00101C  C04D  F045         	movff	??___fladd+3,___fladd@b+3
 10224   001020  2850               	incf	___fladd@bexp^0,w,c
 10225   001022  B4D8               	btfsc	status,2,c
 10226   001024  EF16  F008         	goto	u6681
 10227   001028  EF18  F008         	goto	u6680
 10228   00102C                     u6681:
 10229   00102C  EF19  F008         	goto	l6005
 10230   001030                     u6680:
 10231   001030  2A50               	incf	___fladd@bexp^0,f,c
 10232   001032                     l6005:
 10233   001032  2850               	incf	___fladd@bexp^0,w,c
 10234   001034  B4D8               	btfsc	status,2,c
 10235   001036  EF1F  F008         	goto	u6691
 10236   00103A  EF21  F008         	goto	u6690
 10237   00103E                     u6691:
 10238   00103E  EF29  F008         	goto	l6009
 10239   001042                     u6690:
 10240   001042  5050               	movf	___fladd@bexp^0,w,c
 10241   001044  A4D8               	btfss	status,2,c
 10242   001046  EF27  F008         	goto	u6701
 10243   00104A  EF29  F008         	goto	u6700
 10244   00104E                     u6701:
 10245   00104E  EF3B  F008         	goto	l6013
 10246   001052                     u6700:
 10247   001052                     l6009:
 10248   001052  0E00               	movlw	0
 10249   001054  6E42               	movwf	___fladd@b^0,c
 10250   001056  0E00               	movlw	0
 10251   001058  6E43               	movwf	(___fladd@b+1)^0,c
 10252   00105A  0E00               	movlw	0
 10253   00105C  6E44               	movwf	(___fladd@b+2)^0,c
 10254   00105E  0E00               	movlw	0
 10255   001060  6E45               	movwf	(___fladd@b+3)^0,c
 10256   001062  5050               	movf	___fladd@bexp^0,w,c
 10257   001064  A4D8               	btfss	status,2,c
 10258   001066  EF37  F008         	goto	u6711
 10259   00106A  EF39  F008         	goto	u6710
 10260   00106E                     u6711:
 10261   00106E  EF3B  F008         	goto	l6013
 10262   001072                     u6710:
 10263   001072  0E00               	movlw	0
 10264   001074  6E4E               	movwf	___fladd@signs^0,c
 10265   001076                     l6013:
 10266   001076  A050               	btfss	___fladd@bexp^0,0,c
 10267   001078  EF40  F008         	goto	u6721
 10268   00107C  EF42  F008         	goto	u6720
 10269   001080                     u6721:
 10270   001080  EF45  F008         	goto	l6017
 10271   001084                     u6720:
 10272   001084  8E44               	bsf	(___fladd@b+2)^0,7,c
 10273   001086  EF46  F008         	goto	l6019
 10274   00108A                     l6017:
 10275   00108A  9E44               	bcf	(___fladd@b+2)^0,7,c
 10276   00108C                     l6019:
 10277   00108C  90D8               	bcf	status,0,c
 10278   00108E  3050               	rrcf	___fladd@bexp^0,w,c
 10279   001090  6E45               	movwf	(___fladd@b+3)^0,c
 10280   001092  AE4E               	btfss	___fladd@signs^0,7,c
 10281   001094  EF4E  F008         	goto	u6731
 10282   001098  EF50  F008         	goto	u6730
 10283   00109C                     u6731:
 10284   00109C  EF51  F008         	goto	l6025
 10285   0010A0                     u6730:
 10286   0010A0  8E45               	bsf	(___fladd@b+3)^0,7,c
 10287   0010A2                     l6025:
 10288   0010A2  C042  F042         	movff	___fladd@b,?___fladd
 10289   0010A6  C043  F043         	movff	___fladd@b+1,?___fladd+1
 10290   0010AA  C044  F044         	movff	___fladd@b+2,?___fladd+2
 10291   0010AE  C045  F045         	movff	___fladd@b+3,?___fladd+3
 10292   0010B2                     l1108:
 10293   0010B2  0012               	return		;funcret
 10294   0010B4                     __end_of___fladd:
 10295                           	callstack 0
 10296                           
 10297 ;; *************** function ___flneg *****************
 10298 ;; Defined at:
 10299 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;  f1              4    1[COMRAM] unsigned char 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  4    1[COMRAM] unsigned char 
 10306 ;; Registers used:
 10307 ;;		wreg, status,2, status,0
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;Total ram usage:        4 bytes
 10318 ;; Hardware stack levels used: 1
 10319 ;; Hardware stack levels required when called: 1
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_efgtoa
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text38
 10328   00431C                     __ptext38:
 10329                           	callstack 0
 10330   00431C                     ___flneg:
 10331                           	callstack 24
 10332   00431C  5002               	movf	___flneg@f1^0,w,c
 10333   00431E  1003               	iorwf	(___flneg@f1+1)^0,w,c
 10334   004320  1004               	iorwf	(___flneg@f1+2)^0,w,c
 10335   004322  1005               	iorwf	(___flneg@f1+3)^0,w,c
 10336   004324  B4D8               	btfsc	status,2,c
 10337   004326  EF97  F021         	goto	u4261
 10338   00432A  EF99  F021         	goto	u4260
 10339   00432E                     u4261:
 10340   00432E  EFA1  F021         	goto	l4291
 10341   004332                     u4260:
 10342   004332  0E00               	movlw	0
 10343   004334  1A02               	xorwf	___flneg@f1^0,f,c
 10344   004336  0E00               	movlw	0
 10345   004338  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 10346   00433A  0E00               	movlw	0
 10347   00433C  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 10348   00433E  0E80               	movlw	128
 10349   004340  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 10350   004342                     l4291:
 10351   004342  C002  F002         	movff	___flneg@f1,?___flneg
 10352   004346  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 10353   00434A  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 10354   00434E  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 10355   004352  0012               	return		;funcret
 10356   004354                     __end_of___flneg:
 10357                           	callstack 0
 10358                           
 10359 ;; *************** function ___flmul *****************
 10360 ;; Defined at:
 10361 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  b               4   40[COMRAM] unsigned char 
 10364 ;;  a               4   44[COMRAM] unsigned char 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;  prod            4   59[COMRAM] struct .
 10367 ;;  grs             4   53[COMRAM] unsigned long 
 10368 ;;  temp            2   63[COMRAM] struct .
 10369 ;;  bexp            1   58[COMRAM] unsigned char 
 10370 ;;  aexp            1   57[COMRAM] unsigned char 
 10371 ;;  sign            1   52[COMRAM] unsigned char 
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  4   40[COMRAM] unsigned char 
 10374 ;; Registers used:
 10375 ;;		wreg, status,2, status,0, prodl, prodh
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10381 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10385 ;;Total ram usage:       25 bytes
 10386 ;; Hardware stack levels used: 1
 10387 ;; Hardware stack levels required when called: 1
 10388 ;; This function calls:
 10389 ;;		Nothing
 10390 ;; This function is called by:
 10391 ;;		_ADC_main
 10392 ;;		_DAC_main
 10393 ;;		_reprak_main
 10394 ;;		_efgtoa
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text39
 10399   0010B4                     __ptext39:
 10400                           	callstack 0
 10401   0010B4                     ___flmul:
 10402                           	callstack 28
 10403   0010B4  502C               	movf	(___flmul@b+3)^0,w,c
 10404   0010B6  0B80               	andlw	128
 10405   0010B8  6E35               	movwf	___flmul@sign^0,c
 10406   0010BA  502C               	movf	(___flmul@b+3)^0,w,c
 10407   0010BC  242C               	addwf	(___flmul@b+3)^0,w,c
 10408   0010BE  6E3B               	movwf	___flmul@bexp^0,c
 10409   0010C0  AE2B               	btfss	(___flmul@b+2)^0,7,c
 10410   0010C2  EF65  F008         	goto	u3871
 10411   0010C6  EF67  F008         	goto	u3870
 10412   0010CA                     u3871:
 10413   0010CA  EF68  F008         	goto	l4039
 10414   0010CE                     u3870:
 10415   0010CE  803B               	bsf	___flmul@bexp^0,0,c
 10416   0010D0                     l4039:
 10417   0010D0  503B               	movf	___flmul@bexp^0,w,c
 10418   0010D2  B4D8               	btfsc	status,2,c
 10419   0010D4  EF6E  F008         	goto	u3881
 10420   0010D8  EF70  F008         	goto	u3880
 10421   0010DC                     u3881:
 10422   0010DC  EF83  F008         	goto	l4047
 10423   0010E0                     u3880:
 10424   0010E0  283B               	incf	___flmul@bexp^0,w,c
 10425   0010E2  A4D8               	btfss	status,2,c
 10426   0010E4  EF76  F008         	goto	u3891
 10427   0010E8  EF78  F008         	goto	u3890
 10428   0010EC                     u3891:
 10429   0010EC  EF80  F008         	goto	l4045
 10430   0010F0                     u3890:
 10431   0010F0  0E00               	movlw	0
 10432   0010F2  6E29               	movwf	___flmul@b^0,c
 10433   0010F4  0E00               	movlw	0
 10434   0010F6  6E2A               	movwf	(___flmul@b+1)^0,c
 10435   0010F8  0E00               	movlw	0
 10436   0010FA  6E2B               	movwf	(___flmul@b+2)^0,c
 10437   0010FC  0E00               	movlw	0
 10438   0010FE  6E2C               	movwf	(___flmul@b+3)^0,c
 10439   001100                     l4045:
 10440   001100  8E2B               	bsf	(___flmul@b+2)^0,7,c
 10441   001102  EF8B  F008         	goto	l4049
 10442   001106                     l4047:
 10443   001106  0E00               	movlw	0
 10444   001108  6E29               	movwf	___flmul@b^0,c
 10445   00110A  0E00               	movlw	0
 10446   00110C  6E2A               	movwf	(___flmul@b+1)^0,c
 10447   00110E  0E00               	movlw	0
 10448   001110  6E2B               	movwf	(___flmul@b+2)^0,c
 10449   001112  0E00               	movlw	0
 10450   001114  6E2C               	movwf	(___flmul@b+3)^0,c
 10451   001116                     l4049:
 10452   001116  5030               	movf	(___flmul@a+3)^0,w,c
 10453   001118  0B80               	andlw	128
 10454   00111A  1A35               	xorwf	___flmul@sign^0,f,c
 10455   00111C  5030               	movf	(___flmul@a+3)^0,w,c
 10456   00111E  2430               	addwf	(___flmul@a+3)^0,w,c
 10457   001120  6E3A               	movwf	___flmul@aexp^0,c
 10458   001122  AE2F               	btfss	(___flmul@a+2)^0,7,c
 10459   001124  EF96  F008         	goto	u3901
 10460   001128  EF98  F008         	goto	u3900
 10461   00112C                     u3901:
 10462   00112C  EF99  F008         	goto	l4057
 10463   001130                     u3900:
 10464   001130  803A               	bsf	___flmul@aexp^0,0,c
 10465   001132                     l4057:
 10466   001132  503A               	movf	___flmul@aexp^0,w,c
 10467   001134  B4D8               	btfsc	status,2,c
 10468   001136  EF9F  F008         	goto	u3911
 10469   00113A  EFA1  F008         	goto	u3910
 10470   00113E                     u3911:
 10471   00113E  EFB4  F008         	goto	l4065
 10472   001142                     u3910:
 10473   001142  283A               	incf	___flmul@aexp^0,w,c
 10474   001144  A4D8               	btfss	status,2,c
 10475   001146  EFA7  F008         	goto	u3921
 10476   00114A  EFA9  F008         	goto	u3920
 10477   00114E                     u3921:
 10478   00114E  EFB1  F008         	goto	l4063
 10479   001152                     u3920:
 10480   001152  0E00               	movlw	0
 10481   001154  6E2D               	movwf	___flmul@a^0,c
 10482   001156  0E00               	movlw	0
 10483   001158  6E2E               	movwf	(___flmul@a+1)^0,c
 10484   00115A  0E00               	movlw	0
 10485   00115C  6E2F               	movwf	(___flmul@a+2)^0,c
 10486   00115E  0E00               	movlw	0
 10487   001160  6E30               	movwf	(___flmul@a+3)^0,c
 10488   001162                     l4063:
 10489   001162  8E2F               	bsf	(___flmul@a+2)^0,7,c
 10490   001164  EFBC  F008         	goto	l1185
 10491   001168                     l4065:
 10492   001168  0E00               	movlw	0
 10493   00116A  6E2D               	movwf	___flmul@a^0,c
 10494   00116C  0E00               	movlw	0
 10495   00116E  6E2E               	movwf	(___flmul@a+1)^0,c
 10496   001170  0E00               	movlw	0
 10497   001172  6E2F               	movwf	(___flmul@a+2)^0,c
 10498   001174  0E00               	movlw	0
 10499   001176  6E30               	movwf	(___flmul@a+3)^0,c
 10500   001178                     l1185:
 10501   001178  503A               	movf	___flmul@aexp^0,w,c
 10502   00117A  B4D8               	btfsc	status,2,c
 10503   00117C  EFC2  F008         	goto	u3931
 10504   001180  EFC4  F008         	goto	u3930
 10505   001184                     u3931:
 10506   001184  EFCC  F008         	goto	l4069
 10507   001188                     u3930:
 10508   001188  503B               	movf	___flmul@bexp^0,w,c
 10509   00118A  A4D8               	btfss	status,2,c
 10510   00118C  EFCA  F008         	goto	u3941
 10511   001190  EFCC  F008         	goto	u3940
 10512   001194                     u3941:
 10513   001194  EFD6  F008         	goto	l4073
 10514   001198                     u3940:
 10515   001198                     l4069:
 10516   001198  0E00               	movlw	0
 10517   00119A  6E29               	movwf	?___flmul^0,c
 10518   00119C  0E00               	movlw	0
 10519   00119E  6E2A               	movwf	(?___flmul+1)^0,c
 10520   0011A0  0E00               	movlw	0
 10521   0011A2  6E2B               	movwf	(?___flmul+2)^0,c
 10522   0011A4  0E00               	movlw	0
 10523   0011A6  6E2C               	movwf	(?___flmul+3)^0,c
 10524   0011A8  EF6E  F00A         	goto	l1189
 10525   0011AC                     l4073:
 10526   0011AC  502F               	movf	(___flmul@a+2)^0,w,c
 10527   0011AE  0229               	mulwf	___flmul@b^0,c
 10528   0011B0  CFF3 F040          	movff	prodl,___flmul@temp
 10529   0011B4  CFF4 F041          	movff	prodh,___flmul@temp+1
 10530   0011B8  5040               	movf	___flmul@temp^0,w,c
 10531   0011BA  6E36               	movwf	___flmul@grs^0,c
 10532   0011BC  6A37               	clrf	(___flmul@grs+1)^0,c
 10533   0011BE  6A38               	clrf	(___flmul@grs+2)^0,c
 10534   0011C0  6A39               	clrf	(___flmul@grs+3)^0,c
 10535   0011C2  5041               	movf	(___flmul@temp+1)^0,w,c
 10536   0011C4  6E3C               	movwf	___flmul@prod^0,c
 10537   0011C6  6A3D               	clrf	(___flmul@prod+1)^0,c
 10538   0011C8  6A3E               	clrf	(___flmul@prod+2)^0,c
 10539   0011CA  6A3F               	clrf	(___flmul@prod+3)^0,c
 10540   0011CC  502E               	movf	(___flmul@a+1)^0,w,c
 10541   0011CE  022A               	mulwf	(___flmul@b+1)^0,c
 10542   0011D0  CFF3 F040          	movff	prodl,___flmul@temp
 10543   0011D4  CFF4 F041          	movff	prodh,___flmul@temp+1
 10544   0011D8  5040               	movf	___flmul@temp^0,w,c
 10545   0011DA  2636               	addwf	___flmul@grs^0,f,c
 10546   0011DC  0E00               	movlw	0
 10547   0011DE  2237               	addwfc	(___flmul@grs+1)^0,f,c
 10548   0011E0  2238               	addwfc	(___flmul@grs+2)^0,f,c
 10549   0011E2  2239               	addwfc	(___flmul@grs+3)^0,f,c
 10550   0011E4  5041               	movf	(___flmul@temp+1)^0,w,c
 10551   0011E6  263C               	addwf	___flmul@prod^0,f,c
 10552   0011E8  0E00               	movlw	0
 10553   0011EA  223D               	addwfc	(___flmul@prod+1)^0,f,c
 10554   0011EC  223E               	addwfc	(___flmul@prod+2)^0,f,c
 10555   0011EE  223F               	addwfc	(___flmul@prod+3)^0,f,c
 10556   0011F0  502D               	movf	___flmul@a^0,w,c
 10557   0011F2  022B               	mulwf	(___flmul@b+2)^0,c
 10558   0011F4  CFF3 F040          	movff	prodl,___flmul@temp
 10559   0011F8  CFF4 F041          	movff	prodh,___flmul@temp+1
 10560   0011FC  5040               	movf	___flmul@temp^0,w,c
 10561   0011FE  2636               	addwf	___flmul@grs^0,f,c
 10562   001200  0E00               	movlw	0
 10563   001202  2237               	addwfc	(___flmul@grs+1)^0,f,c
 10564   001204  2238               	addwfc	(___flmul@grs+2)^0,f,c
 10565   001206  2239               	addwfc	(___flmul@grs+3)^0,f,c
 10566   001208  5041               	movf	(___flmul@temp+1)^0,w,c
 10567   00120A  263C               	addwf	___flmul@prod^0,f,c
 10568   00120C  0E00               	movlw	0
 10569   00120E  223D               	addwfc	(___flmul@prod+1)^0,f,c
 10570   001210  223E               	addwfc	(___flmul@prod+2)^0,f,c
 10571   001212  223F               	addwfc	(___flmul@prod+3)^0,f,c
 10572   001214  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
 10573   001218  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
 10574   00121C  C036  F037         	movff	___flmul@grs,___flmul@grs+1
 10575   001220  6A36               	clrf	___flmul@grs^0,c
 10576   001222  502D               	movf	___flmul@a^0,w,c
 10577   001224  022A               	mulwf	(___flmul@b+1)^0,c
 10578   001226  CFF3 F040          	movff	prodl,___flmul@temp
 10579   00122A  CFF4 F041          	movff	prodh,___flmul@temp+1
 10580   00122E  5040               	movf	___flmul@temp^0,w,c
 10581   001230  2636               	addwf	___flmul@grs^0,f,c
 10582   001232  5041               	movf	(___flmul@temp+1)^0,w,c
 10583   001234  2237               	addwfc	(___flmul@grs+1)^0,f,c
 10584   001236  0E00               	movlw	0
 10585   001238  2238               	addwfc	(___flmul@grs+2)^0,f,c
 10586   00123A  0E00               	movlw	0
 10587   00123C  2239               	addwfc	(___flmul@grs+3)^0,f,c
 10588   00123E  502E               	movf	(___flmul@a+1)^0,w,c
 10589   001240  0229               	mulwf	___flmul@b^0,c
 10590   001242  CFF3 F040          	movff	prodl,___flmul@temp
 10591   001246  CFF4 F041          	movff	prodh,___flmul@temp+1
 10592   00124A  5040               	movf	___flmul@temp^0,w,c
 10593   00124C  2636               	addwf	___flmul@grs^0,f,c
 10594   00124E  5041               	movf	(___flmul@temp+1)^0,w,c
 10595   001250  2237               	addwfc	(___flmul@grs+1)^0,f,c
 10596   001252  0E00               	movlw	0
 10597   001254  2238               	addwfc	(___flmul@grs+2)^0,f,c
 10598   001256  0E00               	movlw	0
 10599   001258  2239               	addwfc	(___flmul@grs+3)^0,f,c
 10600   00125A  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
 10601   00125E  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
 10602   001262  C036  F037         	movff	___flmul@grs,___flmul@grs+1
 10603   001266  6A36               	clrf	___flmul@grs^0,c
 10604   001268  502D               	movf	___flmul@a^0,w,c
 10605   00126A  0229               	mulwf	___flmul@b^0,c
 10606   00126C  CFF3 F040          	movff	prodl,___flmul@temp
 10607   001270  CFF4 F041          	movff	prodh,___flmul@temp+1
 10608   001274  5040               	movf	___flmul@temp^0,w,c
 10609   001276  2636               	addwf	___flmul@grs^0,f,c
 10610   001278  5041               	movf	(___flmul@temp+1)^0,w,c
 10611   00127A  2237               	addwfc	(___flmul@grs+1)^0,f,c
 10612   00127C  0E00               	movlw	0
 10613   00127E  2238               	addwfc	(___flmul@grs+2)^0,f,c
 10614   001280  0E00               	movlw	0
 10615   001282  2239               	addwfc	(___flmul@grs+3)^0,f,c
 10616   001284  502F               	movf	(___flmul@a+2)^0,w,c
 10617   001286  022A               	mulwf	(___flmul@b+1)^0,c
 10618   001288  CFF3 F040          	movff	prodl,___flmul@temp
 10619   00128C  CFF4 F041          	movff	prodh,___flmul@temp+1
 10620   001290  5040               	movf	___flmul@temp^0,w,c
 10621   001292  263C               	addwf	___flmul@prod^0,f,c
 10622   001294  5041               	movf	(___flmul@temp+1)^0,w,c
 10623   001296  223D               	addwfc	(___flmul@prod+1)^0,f,c
 10624   001298  0E00               	movlw	0
 10625   00129A  223E               	addwfc	(___flmul@prod+2)^0,f,c
 10626   00129C  0E00               	movlw	0
 10627   00129E  223F               	addwfc	(___flmul@prod+3)^0,f,c
 10628   0012A0  502E               	movf	(___flmul@a+1)^0,w,c
 10629   0012A2  022B               	mulwf	(___flmul@b+2)^0,c
 10630   0012A4  CFF3 F040          	movff	prodl,___flmul@temp
 10631   0012A8  CFF4 F041          	movff	prodh,___flmul@temp+1
 10632   0012AC  5040               	movf	___flmul@temp^0,w,c
 10633   0012AE  263C               	addwf	___flmul@prod^0,f,c
 10634   0012B0  5041               	movf	(___flmul@temp+1)^0,w,c
 10635   0012B2  223D               	addwfc	(___flmul@prod+1)^0,f,c
 10636   0012B4  0E00               	movlw	0
 10637   0012B6  223E               	addwfc	(___flmul@prod+2)^0,f,c
 10638   0012B8  0E00               	movlw	0
 10639   0012BA  223F               	addwfc	(___flmul@prod+3)^0,f,c
 10640   0012BC  502F               	movf	(___flmul@a+2)^0,w,c
 10641   0012BE  022B               	mulwf	(___flmul@b+2)^0,c
 10642   0012C0  CFF3 F040          	movff	prodl,___flmul@temp
 10643   0012C4  CFF4 F041          	movff	prodh,___flmul@temp+1
 10644   0012C8  5040               	movf	___flmul@temp^0,w,c
 10645   0012CA  6E31               	movwf	??___flmul^0,c
 10646   0012CC  5041               	movf	(___flmul@temp+1)^0,w,c
 10647   0012CE  6E32               	movwf	(??___flmul+1)^0,c
 10648   0012D0  6A33               	clrf	(??___flmul+2)^0,c
 10649   0012D2  6A34               	clrf	(??___flmul+3)^0,c
 10650   0012D4  C033  F034         	movff	??___flmul+2,??___flmul+3
 10651   0012D8  C032  F033         	movff	??___flmul+1,??___flmul+2
 10652   0012DC  C031  F032         	movff	??___flmul,??___flmul+1
 10653   0012E0  6A31               	clrf	??___flmul^0,c
 10654   0012E2  5031               	movf	??___flmul^0,w,c
 10655   0012E4  263C               	addwf	___flmul@prod^0,f,c
 10656   0012E6  5032               	movf	(??___flmul+1)^0,w,c
 10657   0012E8  223D               	addwfc	(___flmul@prod+1)^0,f,c
 10658   0012EA  5033               	movf	(??___flmul+2)^0,w,c
 10659   0012EC  223E               	addwfc	(___flmul@prod+2)^0,f,c
 10660   0012EE  5034               	movf	(??___flmul+3)^0,w,c
 10661   0012F0  223F               	addwfc	(___flmul@prod+3)^0,f,c
 10662   0012F2  C036  F031         	movff	___flmul@grs,??___flmul
 10663   0012F6  C037  F032         	movff	___flmul@grs+1,??___flmul+1
 10664   0012FA  C038  F033         	movff	___flmul@grs+2,??___flmul+2
 10665   0012FE  C039  F034         	movff	___flmul@grs+3,??___flmul+3
 10666   001302  0E19               	movlw	25
 10667   001304  EF89  F009         	goto	u3950
 10668   001308                     u3955:
 10669   001308  90D8               	bcf	status,0,c
 10670   00130A  3234               	rrcf	(??___flmul+3)^0,f,c
 10671   00130C  3233               	rrcf	(??___flmul+2)^0,f,c
 10672   00130E  3232               	rrcf	(??___flmul+1)^0,f,c
 10673   001310  3231               	rrcf	??___flmul^0,f,c
 10674   001312                     u3950:
 10675   001312  2EE8               	decfsz	wreg,f,c
 10676   001314  EF84  F009         	goto	u3955
 10677   001318  5031               	movf	??___flmul^0,w,c
 10678   00131A  263C               	addwf	___flmul@prod^0,f,c
 10679   00131C  5032               	movf	(??___flmul+1)^0,w,c
 10680   00131E  223D               	addwfc	(___flmul@prod+1)^0,f,c
 10681   001320  5033               	movf	(??___flmul+2)^0,w,c
 10682   001322  223E               	addwfc	(___flmul@prod+2)^0,f,c
 10683   001324  5034               	movf	(??___flmul+3)^0,w,c
 10684   001326  223F               	addwfc	(___flmul@prod+3)^0,f,c
 10685   001328  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
 10686   00132C  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
 10687   001330  C036  F037         	movff	___flmul@grs,___flmul@grs+1
 10688   001334  6A36               	clrf	___flmul@grs^0,c
 10689   001336  503A               	movf	___flmul@aexp^0,w,c
 10690   001338  C03B  F031         	movff	___flmul@bexp,??___flmul
 10691   00133C  6A32               	clrf	(??___flmul+1)^0,c
 10692   00133E  2631               	addwf	??___flmul^0,f,c
 10693   001340  0E00               	movlw	0
 10694   001342  2232               	addwfc	(??___flmul+1)^0,f,c
 10695   001344  0E82               	movlw	130
 10696   001346  2431               	addwf	??___flmul^0,w,c
 10697   001348  6E40               	movwf	___flmul@temp^0,c
 10698   00134A  0EFF               	movlw	255
 10699   00134C  2032               	addwfc	(??___flmul+1)^0,w,c
 10700   00134E  6E41               	movwf	(___flmul@temp+1)^0,c
 10701   001350  EFBF  F009         	goto	l4121
 10702   001354                     l4115:
 10703   001354  90D8               	bcf	status,0,c
 10704   001356  363C               	rlcf	___flmul@prod^0,f,c
 10705   001358  363D               	rlcf	(___flmul@prod+1)^0,f,c
 10706   00135A  363E               	rlcf	(___flmul@prod+2)^0,f,c
 10707   00135C  363F               	rlcf	(___flmul@prod+3)^0,f,c
 10708   00135E  AE39               	btfss	(___flmul@grs+3)^0,7,c
 10709   001360  EFB4  F009         	goto	u3961
 10710   001364  EFB6  F009         	goto	u3960
 10711   001368                     u3961:
 10712   001368  EFB7  F009         	goto	l1192
 10713   00136C                     u3960:
 10714   00136C  803C               	bsf	___flmul@prod^0,0,c
 10715   00136E                     l1192:
 10716   00136E  90D8               	bcf	status,0,c
 10717   001370  3636               	rlcf	___flmul@grs^0,f,c
 10718   001372  3637               	rlcf	(___flmul@grs+1)^0,f,c
 10719   001374  3638               	rlcf	(___flmul@grs+2)^0,f,c
 10720   001376  3639               	rlcf	(___flmul@grs+3)^0,f,c
 10721   001378  0640               	decf	___flmul@temp^0,f,c
 10722   00137A  A0D8               	btfss	status,0,c
 10723   00137C  0641               	decf	(___flmul@temp+1)^0,f,c
 10724   00137E                     l4121:
 10725   00137E  AE3E               	btfss	(___flmul@prod+2)^0,7,c
 10726   001380  EFC4  F009         	goto	u3971
 10727   001384  EFC6  F009         	goto	u3970
 10728   001388                     u3971:
 10729   001388  EFAA  F009         	goto	l4115
 10730   00138C                     u3970:
 10731   00138C  0E00               	movlw	0
 10732   00138E  6E3A               	movwf	___flmul@aexp^0,c
 10733   001390  AE39               	btfss	(___flmul@grs+3)^0,7,c
 10734   001392  EFCD  F009         	goto	u3981
 10735   001396  EFCF  F009         	goto	u3980
 10736   00139A                     u3981:
 10737   00139A  EFF3  F009         	goto	l1194
 10738   00139E                     u3980:
 10739   00139E  0EFF               	movlw	255
 10740   0013A0  1436               	andwf	___flmul@grs^0,w,c
 10741   0013A2  6E31               	movwf	??___flmul^0,c
 10742   0013A4  0EFF               	movlw	255
 10743   0013A6  1437               	andwf	(___flmul@grs+1)^0,w,c
 10744   0013A8  6E32               	movwf	(??___flmul+1)^0,c
 10745   0013AA  0EFF               	movlw	255
 10746   0013AC  1438               	andwf	(___flmul@grs+2)^0,w,c
 10747   0013AE  6E33               	movwf	(??___flmul+2)^0,c
 10748   0013B0  0E7F               	movlw	127
 10749   0013B2  1439               	andwf	(___flmul@grs+3)^0,w,c
 10750   0013B4  6E34               	movwf	(??___flmul+3)^0,c
 10751   0013B6  5031               	movf	??___flmul^0,w,c
 10752   0013B8  1032               	iorwf	(??___flmul+1)^0,w,c
 10753   0013BA  1033               	iorwf	(??___flmul+2)^0,w,c
 10754   0013BC  1034               	iorwf	(??___flmul+3)^0,w,c
 10755   0013BE  B4D8               	btfsc	status,2,c
 10756   0013C0  EFE4  F009         	goto	u3991
 10757   0013C4  EFE6  F009         	goto	u3990
 10758   0013C8                     u3991:
 10759   0013C8  EFEA  F009         	goto	l1195
 10760   0013CC                     u3990:
 10761   0013CC                     l4129:
 10762   0013CC  0E01               	movlw	1
 10763   0013CE  6E3A               	movwf	___flmul@aexp^0,c
 10764   0013D0  EFF3  F009         	goto	l1194
 10765   0013D4                     l1195:
 10766   0013D4  A03C               	btfss	___flmul@prod^0,0,c
 10767   0013D6  EFEF  F009         	goto	u4001
 10768   0013DA  EFF1  F009         	goto	u4000
 10769   0013DE                     u4001:
 10770   0013DE  EFF3  F009         	goto	l1194
 10771   0013E2                     u4000:
 10772   0013E2  EFE6  F009         	goto	l4129
 10773   0013E6                     l1194:
 10774   0013E6  503A               	movf	___flmul@aexp^0,w,c
 10775   0013E8  B4D8               	btfsc	status,2,c
 10776   0013EA  EFF9  F009         	goto	u4011
 10777   0013EE  EFFB  F009         	goto	u4010
 10778   0013F2                     u4011:
 10779   0013F2  EF1F  F00A         	goto	l4141
 10780   0013F6                     u4010:
 10781   0013F6  0E01               	movlw	1
 10782   0013F8  263C               	addwf	___flmul@prod^0,f,c
 10783   0013FA  0E00               	movlw	0
 10784   0013FC  223D               	addwfc	(___flmul@prod+1)^0,f,c
 10785   0013FE  223E               	addwfc	(___flmul@prod+2)^0,f,c
 10786   001400  223F               	addwfc	(___flmul@prod+3)^0,f,c
 10787   001402  A03F               	btfss	(___flmul@prod+3)^0,0,c
 10788   001404  EF06  F00A         	goto	u4021
 10789   001408  EF08  F00A         	goto	u4020
 10790   00140C                     u4021:
 10791   00140C  EF1F  F00A         	goto	l4141
 10792   001410                     u4020:
 10793   001410  C03C  F031         	movff	___flmul@prod,??___flmul
 10794   001414  C03D  F032         	movff	___flmul@prod+1,??___flmul+1
 10795   001418  C03E  F033         	movff	___flmul@prod+2,??___flmul+2
 10796   00141C  C03F  F034         	movff	___flmul@prod+3,??___flmul+3
 10797   001420  3434               	rlcf	(??___flmul+3)^0,w,c
 10798   001422  3234               	rrcf	(??___flmul+3)^0,f,c
 10799   001424  3233               	rrcf	(??___flmul+2)^0,f,c
 10800   001426  3232               	rrcf	(??___flmul+1)^0,f,c
 10801   001428  3231               	rrcf	??___flmul^0,f,c
 10802   00142A  C031  F03C         	movff	??___flmul,___flmul@prod
 10803   00142E  C032  F03D         	movff	??___flmul+1,___flmul@prod+1
 10804   001432  C033  F03E         	movff	??___flmul+2,___flmul@prod+2
 10805   001436  C034  F03F         	movff	??___flmul+3,___flmul@prod+3
 10806   00143A  4A40               	infsnz	___flmul@temp^0,f,c
 10807   00143C  2A41               	incf	(___flmul@temp+1)^0,f,c
 10808   00143E                     l4141:
 10809   00143E  BE41               	btfsc	(___flmul@temp+1)^0,7,c
 10810   001440  EF2A  F00A         	goto	u4031
 10811   001444  5041               	movf	(___flmul@temp+1)^0,w,c
 10812   001446  E108               	bnz	u4030
 10813   001448  2840               	incf	___flmul@temp^0,w,c
 10814   00144A  A0D8               	btfss	status,0,c
 10815   00144C  EF2A  F00A         	goto	u4031
 10816   001450  EF2C  F00A         	goto	u4030
 10817   001454                     u4031:
 10818   001454  EF36  F00A         	goto	l4145
 10819   001458                     u4030:
 10820   001458  0E00               	movlw	0
 10821   00145A  6E3C               	movwf	___flmul@prod^0,c
 10822   00145C  0E00               	movlw	0
 10823   00145E  6E3D               	movwf	(___flmul@prod+1)^0,c
 10824   001460  0E80               	movlw	128
 10825   001462  6E3E               	movwf	(___flmul@prod+2)^0,c
 10826   001464  0E7F               	movlw	127
 10827   001466  6E3F               	movwf	(___flmul@prod+3)^0,c
 10828   001468  EF64  F00A         	goto	l4157
 10829   00146C                     l4145:
 10830   00146C  BE41               	btfsc	(___flmul@temp+1)^0,7,c
 10831   00146E  EF43  F00A         	goto	u4040
 10832   001472  5041               	movf	(___flmul@temp+1)^0,w,c
 10833   001474  E106               	bnz	u4041
 10834   001476  0440               	decf	___flmul@temp^0,w,c
 10835   001478  B0D8               	btfsc	status,0,c
 10836   00147A  EF41  F00A         	goto	u4041
 10837   00147E  EF43  F00A         	goto	u4040
 10838   001482                     u4041:
 10839   001482  EF4F  F00A         	goto	l1202
 10840   001486                     u4040:
 10841   001486  0E00               	movlw	0
 10842   001488  6E3C               	movwf	___flmul@prod^0,c
 10843   00148A  0E00               	movlw	0
 10844   00148C  6E3D               	movwf	(___flmul@prod+1)^0,c
 10845   00148E  0E00               	movlw	0
 10846   001490  6E3E               	movwf	(___flmul@prod+2)^0,c
 10847   001492  0E00               	movlw	0
 10848   001494  6E3F               	movwf	(___flmul@prod+3)^0,c
 10849   001496  0E00               	movlw	0
 10850   001498  6E35               	movwf	___flmul@sign^0,c
 10851   00149A  EF64  F00A         	goto	l4157
 10852   00149E                     l1202:
 10853   00149E  C040  F03B         	movff	___flmul@temp,___flmul@bexp
 10854   0014A2  0EFF               	movlw	255
 10855   0014A4  163C               	andwf	___flmul@prod^0,f,c
 10856   0014A6  0EFF               	movlw	255
 10857   0014A8  163D               	andwf	(___flmul@prod+1)^0,f,c
 10858   0014AA  0E7F               	movlw	127
 10859   0014AC  163E               	andwf	(___flmul@prod+2)^0,f,c
 10860   0014AE  0E00               	movlw	0
 10861   0014B0  163F               	andwf	(___flmul@prod+3)^0,f,c
 10862   0014B2  A03B               	btfss	___flmul@bexp^0,0,c
 10863   0014B4  EF5E  F00A         	goto	u4051
 10864   0014B8  EF60  F00A         	goto	u4050
 10865   0014BC                     u4051:
 10866   0014BC  EF61  F00A         	goto	l4155
 10867   0014C0                     u4050:
 10868   0014C0  8E3E               	bsf	(___flmul@prod+2)^0,7,c
 10869   0014C2                     l4155:
 10870   0014C2  90D8               	bcf	status,0,c
 10871   0014C4  303B               	rrcf	___flmul@bexp^0,w,c
 10872   0014C6  6E3F               	movwf	(___flmul@prod+3)^0,c
 10873   0014C8                     l4157:
 10874   0014C8  5035               	movf	___flmul@sign^0,w,c
 10875   0014CA  123F               	iorwf	(___flmul@prod+3)^0,f,c
 10876   0014CC  C03C  F029         	movff	___flmul@prod,?___flmul
 10877   0014D0  C03D  F02A         	movff	___flmul@prod+1,?___flmul+1
 10878   0014D4  C03E  F02B         	movff	___flmul@prod+2,?___flmul+2
 10879   0014D8  C03F  F02C         	movff	___flmul@prod+3,?___flmul+3
 10880   0014DC                     l1189:
 10881   0014DC  0012               	return		;funcret
 10882   0014DE                     __end_of___flmul:
 10883                           	callstack 0
 10884                           
 10885 ;; *************** function ___flge *****************
 10886 ;; Defined at:
 10887 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;  ff1             4   65[COMRAM] unsigned char 
 10890 ;;  ff2             4   69[COMRAM] unsigned char 
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;		None
 10893 ;; Return value:  Size  Location     Type
 10894 ;;		None               void
 10895 ;; Registers used:
 10896 ;;		wreg, status,2, status,0
 10897 ;; Tracked objects:
 10898 ;;		On entry : 0/0
 10899 ;;		On exit  : 0/0
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10902 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;Total ram usage:       12 bytes
 10907 ;; Hardware stack levels used: 1
 10908 ;; Hardware stack levels required when called: 1
 10909 ;; This function calls:
 10910 ;;		Nothing
 10911 ;; This function is called by:
 10912 ;;		_efgtoa
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text40
 10917   0032FA                     __ptext40:
 10918                           	callstack 0
 10919   0032FA                     ___flge:
 10920                           	callstack 24
 10921   0032FA  0E00               	movlw	0
 10922   0032FC  1442               	andwf	___flge@ff1^0,w,c
 10923   0032FE  6E4A               	movwf	??___flge^0,c
 10924   003300  0E00               	movlw	0
 10925   003302  1443               	andwf	(___flge@ff1+1)^0,w,c
 10926   003304  6E4B               	movwf	(??___flge+1)^0,c
 10927   003306  0E80               	movlw	128
 10928   003308  1444               	andwf	(___flge@ff1+2)^0,w,c
 10929   00330A  6E4C               	movwf	(??___flge+2)^0,c
 10930   00330C  0E7F               	movlw	127
 10931   00330E  1445               	andwf	(___flge@ff1+3)^0,w,c
 10932   003310  6E4D               	movwf	(??___flge+3)^0,c
 10933   003312  504A               	movf	??___flge^0,w,c
 10934   003314  104B               	iorwf	(??___flge+1)^0,w,c
 10935   003316  104C               	iorwf	(??___flge+2)^0,w,c
 10936   003318  104D               	iorwf	(??___flge+3)^0,w,c
 10937   00331A  A4D8               	btfss	status,2,c
 10938   00331C  EF92  F019         	goto	u4211
 10939   003320  EF94  F019         	goto	u4210
 10940   003324                     u4211:
 10941   003324  EF9C  F019         	goto	l4269
 10942   003328                     u4210:
 10943   003328  0E00               	movlw	0
 10944   00332A  6E42               	movwf	___flge@ff1^0,c
 10945   00332C  0E00               	movlw	0
 10946   00332E  6E43               	movwf	(___flge@ff1+1)^0,c
 10947   003330  0E00               	movlw	0
 10948   003332  6E44               	movwf	(___flge@ff1+2)^0,c
 10949   003334  0E00               	movlw	0
 10950   003336  6E45               	movwf	(___flge@ff1+3)^0,c
 10951   003338                     l4269:
 10952   003338  0E00               	movlw	0
 10953   00333A  1446               	andwf	___flge@ff2^0,w,c
 10954   00333C  6E4A               	movwf	??___flge^0,c
 10955   00333E  0E00               	movlw	0
 10956   003340  1447               	andwf	(___flge@ff2+1)^0,w,c
 10957   003342  6E4B               	movwf	(??___flge+1)^0,c
 10958   003344  0E80               	movlw	128
 10959   003346  1448               	andwf	(___flge@ff2+2)^0,w,c
 10960   003348  6E4C               	movwf	(??___flge+2)^0,c
 10961   00334A  0E7F               	movlw	127
 10962   00334C  1449               	andwf	(___flge@ff2+3)^0,w,c
 10963   00334E  6E4D               	movwf	(??___flge+3)^0,c
 10964   003350  504A               	movf	??___flge^0,w,c
 10965   003352  104B               	iorwf	(??___flge+1)^0,w,c
 10966   003354  104C               	iorwf	(??___flge+2)^0,w,c
 10967   003356  104D               	iorwf	(??___flge+3)^0,w,c
 10968   003358  A4D8               	btfss	status,2,c
 10969   00335A  EFB1  F019         	goto	u4221
 10970   00335E  EFB3  F019         	goto	u4220
 10971   003362                     u4221:
 10972   003362  EFBB  F019         	goto	l4273
 10973   003366                     u4220:
 10974   003366  0E00               	movlw	0
 10975   003368  6E46               	movwf	___flge@ff2^0,c
 10976   00336A  0E00               	movlw	0
 10977   00336C  6E47               	movwf	(___flge@ff2+1)^0,c
 10978   00336E  0E00               	movlw	0
 10979   003370  6E48               	movwf	(___flge@ff2+2)^0,c
 10980   003372  0E00               	movlw	0
 10981   003374  6E49               	movwf	(___flge@ff2+3)^0,c
 10982   003376                     l4273:
 10983   003376  AE45               	btfss	(___flge@ff1+3)^0,7,c
 10984   003378  EFC0  F019         	goto	u4231
 10985   00337C  EFC2  F019         	goto	u4230
 10986   003380                     u4231:
 10987   003380  EFCB  F019         	goto	l4277
 10988   003384                     u4230:
 10989   003384  6C42               	negf	___flge@ff1^0,c
 10990   003386  1E43               	comf	(___flge@ff1+1)^0,f,c
 10991   003388  B0D8               	btfsc	status,0,c
 10992   00338A  2A43               	incf	(___flge@ff1+1)^0,f,c
 10993   00338C  1E44               	comf	(___flge@ff1+2)^0,f,c
 10994   00338E  B0D8               	btfsc	status,0,c
 10995   003390  2A44               	incf	(___flge@ff1+2)^0,f,c
 10996   003392  0E80               	movlw	128
 10997   003394  5645               	subfwb	(___flge@ff1+3)^0,f,c
 10998   003396                     l4277:
 10999   003396  AE49               	btfss	(___flge@ff2+3)^0,7,c
 11000   003398  EFD0  F019         	goto	u4241
 11001   00339C  EFD2  F019         	goto	u4240
 11002   0033A0                     u4241:
 11003   0033A0  EFDB  F019         	goto	l836
 11004   0033A4                     u4240:
 11005   0033A4  6C46               	negf	___flge@ff2^0,c
 11006   0033A6  1E47               	comf	(___flge@ff2+1)^0,f,c
 11007   0033A8  B0D8               	btfsc	status,0,c
 11008   0033AA  2A47               	incf	(___flge@ff2+1)^0,f,c
 11009   0033AC  1E48               	comf	(___flge@ff2+2)^0,f,c
 11010   0033AE  B0D8               	btfsc	status,0,c
 11011   0033B0  2A48               	incf	(___flge@ff2+2)^0,f,c
 11012   0033B2  0E80               	movlw	128
 11013   0033B4  5649               	subfwb	(___flge@ff2+3)^0,f,c
 11014   0033B6                     l836:
 11015   0033B6  0E00               	movlw	0
 11016   0033B8  1A42               	xorwf	___flge@ff1^0,f,c
 11017   0033BA  0E00               	movlw	0
 11018   0033BC  1A43               	xorwf	(___flge@ff1+1)^0,f,c
 11019   0033BE  0E00               	movlw	0
 11020   0033C0  1A44               	xorwf	(___flge@ff1+2)^0,f,c
 11021   0033C2  0E80               	movlw	128
 11022   0033C4  1A45               	xorwf	(___flge@ff1+3)^0,f,c
 11023   0033C6  0E00               	movlw	0
 11024   0033C8  1A46               	xorwf	___flge@ff2^0,f,c
 11025   0033CA  0E00               	movlw	0
 11026   0033CC  1A47               	xorwf	(___flge@ff2+1)^0,f,c
 11027   0033CE  0E00               	movlw	0
 11028   0033D0  1A48               	xorwf	(___flge@ff2+2)^0,f,c
 11029   0033D2  0E80               	movlw	128
 11030   0033D4  1A49               	xorwf	(___flge@ff2+3)^0,f,c
 11031   0033D6  5046               	movf	___flge@ff2^0,w,c
 11032   0033D8  5C42               	subwf	___flge@ff1^0,w,c
 11033   0033DA  5047               	movf	(___flge@ff2+1)^0,w,c
 11034   0033DC  5843               	subwfb	(___flge@ff1+1)^0,w,c
 11035   0033DE  5048               	movf	(___flge@ff2+2)^0,w,c
 11036   0033E0  5844               	subwfb	(___flge@ff1+2)^0,w,c
 11037   0033E2  5049               	movf	(___flge@ff2+3)^0,w,c
 11038   0033E4  5845               	subwfb	(___flge@ff1+3)^0,w,c
 11039   0033E6  B0D8               	btfsc	status,0,c
 11040   0033E8  EFF8  F019         	goto	u4251
 11041   0033EC  EFFA  F019         	goto	u4250
 11042   0033F0                     u4251:
 11043   0033F0  EFFD  F019         	goto	l4283
 11044   0033F4                     u4250:
 11045   0033F4  90D8               	bcf	status,0,c
 11046   0033F6  EFFE  F019         	goto	l841
 11047   0033FA                     l4283:
 11048   0033FA  80D8               	bsf	status,0,c
 11049   0033FC                     l841:
 11050   0033FC  0012               	return		;funcret
 11051   0033FE                     __end_of___flge:
 11052                           	callstack 0
 11053                           
 11054 ;; *************** function ___fleq *****************
 11055 ;; Defined at:
 11056 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  ff1             4    1[COMRAM] unsigned char 
 11059 ;;  ff2             4    5[COMRAM] unsigned char 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;		None
 11062 ;; Return value:  Size  Location     Type
 11063 ;;		None               void
 11064 ;; Registers used:
 11065 ;;		wreg, status,2, status,0
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;Total ram usage:       12 bytes
 11076 ;; Hardware stack levels used: 1
 11077 ;; Hardware stack levels required when called: 1
 11078 ;; This function calls:
 11079 ;;		Nothing
 11080 ;; This function is called by:
 11081 ;;		_efgtoa
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           	psect	text41
 11086   003B46                     __ptext41:
 11087                           	callstack 0
 11088   003B46                     ___fleq:
 11089                           	callstack 24
 11090   003B46  0E00               	movlw	0
 11091   003B48  1402               	andwf	___fleq@ff1^0,w,c
 11092   003B4A  6E0A               	movwf	??___fleq^0,c
 11093   003B4C  0E00               	movlw	0
 11094   003B4E  1403               	andwf	(___fleq@ff1+1)^0,w,c
 11095   003B50  6E0B               	movwf	(??___fleq+1)^0,c
 11096   003B52  0E80               	movlw	128
 11097   003B54  1404               	andwf	(___fleq@ff1+2)^0,w,c
 11098   003B56  6E0C               	movwf	(??___fleq+2)^0,c
 11099   003B58  0E7F               	movlw	127
 11100   003B5A  1405               	andwf	(___fleq@ff1+3)^0,w,c
 11101   003B5C  6E0D               	movwf	(??___fleq+3)^0,c
 11102   003B5E  500A               	movf	??___fleq^0,w,c
 11103   003B60  100B               	iorwf	(??___fleq+1)^0,w,c
 11104   003B62  100C               	iorwf	(??___fleq+2)^0,w,c
 11105   003B64  100D               	iorwf	(??___fleq+3)^0,w,c
 11106   003B66  A4D8               	btfss	status,2,c
 11107   003B68  EFB8  F01D         	goto	u4181
 11108   003B6C  EFBA  F01D         	goto	u4180
 11109   003B70                     u4181:
 11110   003B70  EFC2  F01D         	goto	l4253
 11111   003B74                     u4180:
 11112   003B74  0E00               	movlw	0
 11113   003B76  6E02               	movwf	___fleq@ff1^0,c
 11114   003B78  0E00               	movlw	0
 11115   003B7A  6E03               	movwf	(___fleq@ff1+1)^0,c
 11116   003B7C  0E00               	movlw	0
 11117   003B7E  6E04               	movwf	(___fleq@ff1+2)^0,c
 11118   003B80  0E00               	movlw	0
 11119   003B82  6E05               	movwf	(___fleq@ff1+3)^0,c
 11120   003B84                     l4253:
 11121   003B84  0E00               	movlw	0
 11122   003B86  1406               	andwf	___fleq@ff2^0,w,c
 11123   003B88  6E0A               	movwf	??___fleq^0,c
 11124   003B8A  0E00               	movlw	0
 11125   003B8C  1407               	andwf	(___fleq@ff2+1)^0,w,c
 11126   003B8E  6E0B               	movwf	(??___fleq+1)^0,c
 11127   003B90  0E80               	movlw	128
 11128   003B92  1408               	andwf	(___fleq@ff2+2)^0,w,c
 11129   003B94  6E0C               	movwf	(??___fleq+2)^0,c
 11130   003B96  0E7F               	movlw	127
 11131   003B98  1409               	andwf	(___fleq@ff2+3)^0,w,c
 11132   003B9A  6E0D               	movwf	(??___fleq+3)^0,c
 11133   003B9C  500A               	movf	??___fleq^0,w,c
 11134   003B9E  100B               	iorwf	(??___fleq+1)^0,w,c
 11135   003BA0  100C               	iorwf	(??___fleq+2)^0,w,c
 11136   003BA2  100D               	iorwf	(??___fleq+3)^0,w,c
 11137   003BA4  A4D8               	btfss	status,2,c
 11138   003BA6  EFD7  F01D         	goto	u4191
 11139   003BAA  EFD9  F01D         	goto	u4190
 11140   003BAE                     u4191:
 11141   003BAE  EFE1  F01D         	goto	l4257
 11142   003BB2                     u4190:
 11143   003BB2  0E00               	movlw	0
 11144   003BB4  6E06               	movwf	___fleq@ff2^0,c
 11145   003BB6  0E00               	movlw	0
 11146   003BB8  6E07               	movwf	(___fleq@ff2+1)^0,c
 11147   003BBA  0E00               	movlw	0
 11148   003BBC  6E08               	movwf	(___fleq@ff2+2)^0,c
 11149   003BBE  0E00               	movlw	0
 11150   003BC0  6E09               	movwf	(___fleq@ff2+3)^0,c
 11151   003BC2                     l4257:
 11152   003BC2  5006               	movf	___fleq@ff2^0,w,c
 11153   003BC4  1802               	xorwf	___fleq@ff1^0,w,c
 11154   003BC6  E10F               	bnz	u4200
 11155   003BC8  5007               	movf	(___fleq@ff2+1)^0,w,c
 11156   003BCA  1803               	xorwf	(___fleq@ff1+1)^0,w,c
 11157   003BCC  E10C               	bnz	u4200
 11158   003BCE  5008               	movf	(___fleq@ff2+2)^0,w,c
 11159   003BD0  1804               	xorwf	(___fleq@ff1+2)^0,w,c
 11160   003BD2  E109               	bnz	u4200
 11161   003BD4  5009               	movf	(___fleq@ff2+3)^0,w,c
 11162   003BD6  1805               	xorwf	(___fleq@ff1+3)^0,w,c
 11163   003BD8  B4D8               	btfsc	status,2,c
 11164   003BDA  EFF1  F01D         	goto	u4201
 11165   003BDE  EFF3  F01D         	goto	u4200
 11166   003BE2                     u4201:
 11167   003BE2  EFF6  F01D         	goto	l4261
 11168   003BE6                     u4200:
 11169   003BE6  90D8               	bcf	status,0,c
 11170   003BE8  EFF7  F01D         	goto	l830
 11171   003BEC                     l4261:
 11172   003BEC  80D8               	bsf	status,0,c
 11173   003BEE                     l830:
 11174   003BEE  0012               	return		;funcret
 11175   003BF0                     __end_of___fleq:
 11176                           	callstack 0
 11177                           
 11178 ;; *************** function ___fldiv *****************
 11179 ;; Defined at:
 11180 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  b               4   15[COMRAM] unsigned char 
 11183 ;;  a               4   19[COMRAM] unsigned char 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  grs             4   34[COMRAM] unsigned long 
 11186 ;;  rem             4   27[COMRAM] unsigned long 
 11187 ;;  new_exp         2   32[COMRAM] short 
 11188 ;;  aexp            1   39[COMRAM] unsigned char 
 11189 ;;  bexp            1   38[COMRAM] unsigned char 
 11190 ;;  sign            1   31[COMRAM] unsigned char 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  4   15[COMRAM] unsigned char 
 11193 ;; Registers used:
 11194 ;;		wreg, status,2, status,0
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11200 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;Total ram usage:       25 bytes
 11205 ;; Hardware stack levels used: 1
 11206 ;; Hardware stack levels required when called: 1
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		_ADC_main
 11211 ;;		_DAC_main
 11212 ;;		_reprak_main
 11213 ;;		_efgtoa
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text42
 11218   0014DE                     __ptext42:
 11219                           	callstack 0
 11220   0014DE                     ___fldiv:
 11221                           	callstack 28
 11222   0014DE  5013               	movf	(___fldiv@b+3)^0,w,c
 11223   0014E0  0B80               	andlw	128
 11224   0014E2  6E20               	movwf	___fldiv@sign^0,c
 11225   0014E4  5013               	movf	(___fldiv@b+3)^0,w,c
 11226   0014E6  2413               	addwf	(___fldiv@b+3)^0,w,c
 11227   0014E8  6E27               	movwf	___fldiv@bexp^0,c
 11228   0014EA  AE12               	btfss	(___fldiv@b+2)^0,7,c
 11229   0014EC  EF7A  F00A         	goto	u3641
 11230   0014F0  EF7C  F00A         	goto	u3640
 11231   0014F4                     u3641:
 11232   0014F4  EF7D  F00A         	goto	l3901
 11233   0014F8                     u3640:
 11234   0014F8  8027               	bsf	___fldiv@bexp^0,0,c
 11235   0014FA                     l3901:
 11236   0014FA  5027               	movf	___fldiv@bexp^0,w,c
 11237   0014FC  B4D8               	btfsc	status,2,c
 11238   0014FE  EF83  F00A         	goto	u3651
 11239   001502  EF85  F00A         	goto	u3650
 11240   001506                     u3651:
 11241   001506  EF9A  F00A         	goto	l3911
 11242   00150A                     u3650:
 11243   00150A  2827               	incf	___fldiv@bexp^0,w,c
 11244   00150C  A4D8               	btfss	status,2,c
 11245   00150E  EF8B  F00A         	goto	u3661
 11246   001512  EF8D  F00A         	goto	u3660
 11247   001516                     u3661:
 11248   001516  EF95  F00A         	goto	l3907
 11249   00151A                     u3660:
 11250   00151A  0E00               	movlw	0
 11251   00151C  6E10               	movwf	___fldiv@b^0,c
 11252   00151E  0E00               	movlw	0
 11253   001520  6E11               	movwf	(___fldiv@b+1)^0,c
 11254   001522  0E00               	movlw	0
 11255   001524  6E12               	movwf	(___fldiv@b+2)^0,c
 11256   001526  0E00               	movlw	0
 11257   001528  6E13               	movwf	(___fldiv@b+3)^0,c
 11258   00152A                     l3907:
 11259   00152A  8E12               	bsf	(___fldiv@b+2)^0,7,c
 11260   00152C  0E00               	movlw	0
 11261   00152E  6E13               	movwf	(___fldiv@b+3)^0,c
 11262   001530  EFA2  F00A         	goto	l3913
 11263   001534                     l3911:
 11264   001534  0E00               	movlw	0
 11265   001536  6E10               	movwf	___fldiv@b^0,c
 11266   001538  0E00               	movlw	0
 11267   00153A  6E11               	movwf	(___fldiv@b+1)^0,c
 11268   00153C  0E00               	movlw	0
 11269   00153E  6E12               	movwf	(___fldiv@b+2)^0,c
 11270   001540  0E00               	movlw	0
 11271   001542  6E13               	movwf	(___fldiv@b+3)^0,c
 11272   001544                     l3913:
 11273   001544  5017               	movf	(___fldiv@a+3)^0,w,c
 11274   001546  0B80               	andlw	128
 11275   001548  1A20               	xorwf	___fldiv@sign^0,f,c
 11276   00154A  5017               	movf	(___fldiv@a+3)^0,w,c
 11277   00154C  2417               	addwf	(___fldiv@a+3)^0,w,c
 11278   00154E  6E28               	movwf	___fldiv@aexp^0,c
 11279   001550  AE16               	btfss	(___fldiv@a+2)^0,7,c
 11280   001552  EFAD  F00A         	goto	u3671
 11281   001556  EFAF  F00A         	goto	u3670
 11282   00155A                     u3671:
 11283   00155A  EFB0  F00A         	goto	l3921
 11284   00155E                     u3670:
 11285   00155E  8028               	bsf	___fldiv@aexp^0,0,c
 11286   001560                     l3921:
 11287   001560  5028               	movf	___fldiv@aexp^0,w,c
 11288   001562  B4D8               	btfsc	status,2,c
 11289   001564  EFB6  F00A         	goto	u3681
 11290   001568  EFB8  F00A         	goto	u3680
 11291   00156C                     u3681:
 11292   00156C  EFCD  F00A         	goto	l3931
 11293   001570                     u3680:
 11294   001570  2828               	incf	___fldiv@aexp^0,w,c
 11295   001572  A4D8               	btfss	status,2,c
 11296   001574  EFBE  F00A         	goto	u3691
 11297   001578  EFC0  F00A         	goto	u3690
 11298   00157C                     u3691:
 11299   00157C  EFC8  F00A         	goto	l3927
 11300   001580                     u3690:
 11301   001580  0E00               	movlw	0
 11302   001582  6E14               	movwf	___fldiv@a^0,c
 11303   001584  0E00               	movlw	0
 11304   001586  6E15               	movwf	(___fldiv@a+1)^0,c
 11305   001588  0E00               	movlw	0
 11306   00158A  6E16               	movwf	(___fldiv@a+2)^0,c
 11307   00158C  0E00               	movlw	0
 11308   00158E  6E17               	movwf	(___fldiv@a+3)^0,c
 11309   001590                     l3927:
 11310   001590  8E16               	bsf	(___fldiv@a+2)^0,7,c
 11311   001592  0E00               	movlw	0
 11312   001594  6E17               	movwf	(___fldiv@a+3)^0,c
 11313   001596  EFD5  F00A         	goto	l3933
 11314   00159A                     l3931:
 11315   00159A  0E00               	movlw	0
 11316   00159C  6E14               	movwf	___fldiv@a^0,c
 11317   00159E  0E00               	movlw	0
 11318   0015A0  6E15               	movwf	(___fldiv@a+1)^0,c
 11319   0015A2  0E00               	movlw	0
 11320   0015A4  6E16               	movwf	(___fldiv@a+2)^0,c
 11321   0015A6  0E00               	movlw	0
 11322   0015A8  6E17               	movwf	(___fldiv@a+3)^0,c
 11323   0015AA                     l3933:
 11324   0015AA  5014               	movf	___fldiv@a^0,w,c
 11325   0015AC  1015               	iorwf	(___fldiv@a+1)^0,w,c
 11326   0015AE  1016               	iorwf	(___fldiv@a+2)^0,w,c
 11327   0015B0  1017               	iorwf	(___fldiv@a+3)^0,w,c
 11328   0015B2  A4D8               	btfss	status,2,c
 11329   0015B4  EFDE  F00A         	goto	u3701
 11330   0015B8  EFE0  F00A         	goto	u3700
 11331   0015BC                     u3701:
 11332   0015BC  EFF8  F00A         	goto	l3945
 11333   0015C0                     u3700:
 11334   0015C0  0E00               	movlw	0
 11335   0015C2  6E10               	movwf	___fldiv@b^0,c
 11336   0015C4  0E00               	movlw	0
 11337   0015C6  6E11               	movwf	(___fldiv@b+1)^0,c
 11338   0015C8  0E00               	movlw	0
 11339   0015CA  6E12               	movwf	(___fldiv@b+2)^0,c
 11340   0015CC  0E00               	movlw	0
 11341   0015CE  6E13               	movwf	(___fldiv@b+3)^0,c
 11342   0015D0  0E80               	movlw	128
 11343   0015D2  1212               	iorwf	(___fldiv@b+2)^0,f,c
 11344   0015D4  0E7F               	movlw	127
 11345   0015D6  1213               	iorwf	(___fldiv@b+3)^0,f,c
 11346   0015D8                     l3939:
 11347   0015D8  5020               	movf	___fldiv@sign^0,w,c
 11348   0015DA  1213               	iorwf	(___fldiv@b+3)^0,f,c
 11349   0015DC  C010  F010         	movff	___fldiv@b,?___fldiv
 11350   0015E0  C011  F011         	movff	___fldiv@b+1,?___fldiv+1
 11351   0015E4  C012  F012         	movff	___fldiv@b+2,?___fldiv+2
 11352   0015E8  C013  F013         	movff	___fldiv@b+3,?___fldiv+3
 11353   0015EC  EF3B  F00C         	goto	l1153
 11354   0015F0                     l3945:
 11355   0015F0  5027               	movf	___fldiv@bexp^0,w,c
 11356   0015F2  A4D8               	btfss	status,2,c
 11357   0015F4  EFFE  F00A         	goto	u3711
 11358   0015F8  EF00  F00B         	goto	u3710
 11359   0015FC                     u3711:
 11360   0015FC  EF0A  F00B         	goto	l3953
 11361   001600                     u3710:
 11362   001600  0E00               	movlw	0
 11363   001602  6E10               	movwf	?___fldiv^0,c
 11364   001604  0E00               	movlw	0
 11365   001606  6E11               	movwf	(?___fldiv+1)^0,c
 11366   001608  0E00               	movlw	0
 11367   00160A  6E12               	movwf	(?___fldiv+2)^0,c
 11368   00160C  0E00               	movlw	0
 11369   00160E  6E13               	movwf	(?___fldiv+3)^0,c
 11370   001610  EF3B  F00C         	goto	l1153
 11371   001614                     l3953:
 11372   001614  5028               	movf	___fldiv@aexp^0,w,c
 11373   001616  C027  F018         	movff	___fldiv@bexp,??___fldiv
 11374   00161A  6A19               	clrf	(??___fldiv+1)^0,c
 11375   00161C  5E18               	subwf	??___fldiv^0,f,c
 11376   00161E  0E00               	movlw	0
 11377   001620  5A19               	subwfb	(??___fldiv+1)^0,f,c
 11378   001622  0E7F               	movlw	127
 11379   001624  2418               	addwf	??___fldiv^0,w,c
 11380   001626  6E21               	movwf	___fldiv@new_exp^0,c
 11381   001628  0E00               	movlw	0
 11382   00162A  2019               	addwfc	(??___fldiv+1)^0,w,c
 11383   00162C  6E22               	movwf	(___fldiv@new_exp+1)^0,c
 11384   00162E  C010  F01C         	movff	___fldiv@b,___fldiv@rem
 11385   001632  C011  F01D         	movff	___fldiv@b+1,___fldiv@rem+1
 11386   001636  C012  F01E         	movff	___fldiv@b+2,___fldiv@rem+2
 11387   00163A  C013  F01F         	movff	___fldiv@b+3,___fldiv@rem+3
 11388   00163E  0E00               	movlw	0
 11389   001640  6E10               	movwf	___fldiv@b^0,c
 11390   001642  0E00               	movlw	0
 11391   001644  6E11               	movwf	(___fldiv@b+1)^0,c
 11392   001646  0E00               	movlw	0
 11393   001648  6E12               	movwf	(___fldiv@b+2)^0,c
 11394   00164A  0E00               	movlw	0
 11395   00164C  6E13               	movwf	(___fldiv@b+3)^0,c
 11396   00164E  0E00               	movlw	0
 11397   001650  6E23               	movwf	___fldiv@grs^0,c
 11398   001652  0E00               	movlw	0
 11399   001654  6E24               	movwf	(___fldiv@grs+1)^0,c
 11400   001656  0E00               	movlw	0
 11401   001658  6E25               	movwf	(___fldiv@grs+2)^0,c
 11402   00165A  0E00               	movlw	0
 11403   00165C  6E26               	movwf	(___fldiv@grs+3)^0,c
 11404   00165E  0E00               	movlw	0
 11405   001660  6E28               	movwf	___fldiv@aexp^0,c
 11406   001662  EF6B  F00B         	goto	l1155
 11407   001666                     l3963:
 11408   001666  5028               	movf	___fldiv@aexp^0,w,c
 11409   001668  B4D8               	btfsc	status,2,c
 11410   00166A  EF39  F00B         	goto	u3721
 11411   00166E  EF3B  F00B         	goto	u3720
 11412   001672                     u3721:
 11413   001672  EF52  F00B         	goto	l3971
 11414   001676                     u3720:
 11415   001676  90D8               	bcf	status,0,c
 11416   001678  361C               	rlcf	___fldiv@rem^0,f,c
 11417   00167A  361D               	rlcf	(___fldiv@rem+1)^0,f,c
 11418   00167C  361E               	rlcf	(___fldiv@rem+2)^0,f,c
 11419   00167E  361F               	rlcf	(___fldiv@rem+3)^0,f,c
 11420   001680  90D8               	bcf	status,0,c
 11421   001682  3610               	rlcf	___fldiv@b^0,f,c
 11422   001684  3611               	rlcf	(___fldiv@b+1)^0,f,c
 11423   001686  3612               	rlcf	(___fldiv@b+2)^0,f,c
 11424   001688  3613               	rlcf	(___fldiv@b+3)^0,f,c
 11425   00168A  AE26               	btfss	(___fldiv@grs+3)^0,7,c
 11426   00168C  EF4A  F00B         	goto	u3731
 11427   001690  EF4C  F00B         	goto	u3730
 11428   001694                     u3731:
 11429   001694  EF4D  F00B         	goto	l1158
 11430   001698                     u3730:
 11431   001698  8010               	bsf	___fldiv@b^0,0,c
 11432   00169A                     l1158:
 11433   00169A  90D8               	bcf	status,0,c
 11434   00169C  3623               	rlcf	___fldiv@grs^0,f,c
 11435   00169E  3624               	rlcf	(___fldiv@grs+1)^0,f,c
 11436   0016A0  3625               	rlcf	(___fldiv@grs+2)^0,f,c
 11437   0016A2  3626               	rlcf	(___fldiv@grs+3)^0,f,c
 11438   0016A4                     l3971:
 11439   0016A4  5014               	movf	___fldiv@a^0,w,c
 11440   0016A6  5C1C               	subwf	___fldiv@rem^0,w,c
 11441   0016A8  5015               	movf	(___fldiv@a+1)^0,w,c
 11442   0016AA  581D               	subwfb	(___fldiv@rem+1)^0,w,c
 11443   0016AC  5016               	movf	(___fldiv@a+2)^0,w,c
 11444   0016AE  581E               	subwfb	(___fldiv@rem+2)^0,w,c
 11445   0016B0  5017               	movf	(___fldiv@a+3)^0,w,c
 11446   0016B2  581F               	subwfb	(___fldiv@rem+3)^0,w,c
 11447   0016B4  A0D8               	btfss	status,0,c
 11448   0016B6  EF5F  F00B         	goto	u3741
 11449   0016BA  EF61  F00B         	goto	u3740
 11450   0016BE                     u3741:
 11451   0016BE  EF6A  F00B         	goto	l3977
 11452   0016C2                     u3740:
 11453   0016C2  8C26               	bsf	(___fldiv@grs+3)^0,6,c
 11454   0016C4  5014               	movf	___fldiv@a^0,w,c
 11455   0016C6  5E1C               	subwf	___fldiv@rem^0,f,c
 11456   0016C8  5015               	movf	(___fldiv@a+1)^0,w,c
 11457   0016CA  5A1D               	subwfb	(___fldiv@rem+1)^0,f,c
 11458   0016CC  5016               	movf	(___fldiv@a+2)^0,w,c
 11459   0016CE  5A1E               	subwfb	(___fldiv@rem+2)^0,f,c
 11460   0016D0  5017               	movf	(___fldiv@a+3)^0,w,c
 11461   0016D2  5A1F               	subwfb	(___fldiv@rem+3)^0,f,c
 11462   0016D4                     l3977:
 11463   0016D4  2A28               	incf	___fldiv@aexp^0,f,c
 11464   0016D6                     l1155:
 11465   0016D6  0E19               	movlw	25
 11466   0016D8  6428               	cpfsgt	___fldiv@aexp^0,c
 11467   0016DA  EF71  F00B         	goto	u3751
 11468   0016DE  EF73  F00B         	goto	u3750
 11469   0016E2                     u3751:
 11470   0016E2  EF33  F00B         	goto	l3963
 11471   0016E6                     u3750:
 11472   0016E6  501C               	movf	___fldiv@rem^0,w,c
 11473   0016E8  101D               	iorwf	(___fldiv@rem+1)^0,w,c
 11474   0016EA  101E               	iorwf	(___fldiv@rem+2)^0,w,c
 11475   0016EC  101F               	iorwf	(___fldiv@rem+3)^0,w,c
 11476   0016EE  B4D8               	btfsc	status,2,c
 11477   0016F0  EF7C  F00B         	goto	u3761
 11478   0016F4  EF7E  F00B         	goto	u3760
 11479   0016F8                     u3761:
 11480   0016F8  EF96  F00B         	goto	l3989
 11481   0016FC                     u3760:
 11482   0016FC  8023               	bsf	___fldiv@grs^0,0,c
 11483   0016FE  EF96  F00B         	goto	l3989
 11484   001702                     l3983:
 11485   001702  90D8               	bcf	status,0,c
 11486   001704  3610               	rlcf	___fldiv@b^0,f,c
 11487   001706  3611               	rlcf	(___fldiv@b+1)^0,f,c
 11488   001708  3612               	rlcf	(___fldiv@b+2)^0,f,c
 11489   00170A  3613               	rlcf	(___fldiv@b+3)^0,f,c
 11490   00170C  AE26               	btfss	(___fldiv@grs+3)^0,7,c
 11491   00170E  EF8B  F00B         	goto	u3771
 11492   001712  EF8D  F00B         	goto	u3770
 11493   001716                     u3771:
 11494   001716  EF8E  F00B         	goto	l1164
 11495   00171A                     u3770:
 11496   00171A  8010               	bsf	___fldiv@b^0,0,c
 11497   00171C                     l1164:
 11498   00171C  90D8               	bcf	status,0,c
 11499   00171E  3623               	rlcf	___fldiv@grs^0,f,c
 11500   001720  3624               	rlcf	(___fldiv@grs+1)^0,f,c
 11501   001722  3625               	rlcf	(___fldiv@grs+2)^0,f,c
 11502   001724  3626               	rlcf	(___fldiv@grs+3)^0,f,c
 11503   001726  0621               	decf	___fldiv@new_exp^0,f,c
 11504   001728  A0D8               	btfss	status,0,c
 11505   00172A  0622               	decf	(___fldiv@new_exp+1)^0,f,c
 11506   00172C                     l3989:
 11507   00172C  AE12               	btfss	(___fldiv@b+2)^0,7,c
 11508   00172E  EF9B  F00B         	goto	u3781
 11509   001732  EF9D  F00B         	goto	u3780
 11510   001736                     u3781:
 11511   001736  EF81  F00B         	goto	l3983
 11512   00173A                     u3780:
 11513   00173A  0E00               	movlw	0
 11514   00173C  6E28               	movwf	___fldiv@aexp^0,c
 11515   00173E  AE26               	btfss	(___fldiv@grs+3)^0,7,c
 11516   001740  EFA4  F00B         	goto	u3791
 11517   001744  EFA6  F00B         	goto	u3790
 11518   001748                     u3791:
 11519   001748  EFCA  F00B         	goto	l1166
 11520   00174C                     u3790:
 11521   00174C  0EFF               	movlw	255
 11522   00174E  1423               	andwf	___fldiv@grs^0,w,c
 11523   001750  6E18               	movwf	??___fldiv^0,c
 11524   001752  0EFF               	movlw	255
 11525   001754  1424               	andwf	(___fldiv@grs+1)^0,w,c
 11526   001756  6E19               	movwf	(??___fldiv+1)^0,c
 11527   001758  0EFF               	movlw	255
 11528   00175A  1425               	andwf	(___fldiv@grs+2)^0,w,c
 11529   00175C  6E1A               	movwf	(??___fldiv+2)^0,c
 11530   00175E  0E7F               	movlw	127
 11531   001760  1426               	andwf	(___fldiv@grs+3)^0,w,c
 11532   001762  6E1B               	movwf	(??___fldiv+3)^0,c
 11533   001764  5018               	movf	??___fldiv^0,w,c
 11534   001766  1019               	iorwf	(??___fldiv+1)^0,w,c
 11535   001768  101A               	iorwf	(??___fldiv+2)^0,w,c
 11536   00176A  101B               	iorwf	(??___fldiv+3)^0,w,c
 11537   00176C  B4D8               	btfsc	status,2,c
 11538   00176E  EFBB  F00B         	goto	u3801
 11539   001772  EFBD  F00B         	goto	u3800
 11540   001776                     u3801:
 11541   001776  EFC1  F00B         	goto	l1167
 11542   00177A                     u3800:
 11543   00177A                     l3997:
 11544   00177A  0E01               	movlw	1
 11545   00177C  6E28               	movwf	___fldiv@aexp^0,c
 11546   00177E  EFCA  F00B         	goto	l1166
 11547   001782                     l1167:
 11548   001782  A010               	btfss	___fldiv@b^0,0,c
 11549   001784  EFC6  F00B         	goto	u3811
 11550   001788  EFC8  F00B         	goto	u3810
 11551   00178C                     u3811:
 11552   00178C  EFCA  F00B         	goto	l1166
 11553   001790                     u3810:
 11554   001790  EFBD  F00B         	goto	l3997
 11555   001794                     l1166:
 11556   001794  5028               	movf	___fldiv@aexp^0,w,c
 11557   001796  B4D8               	btfsc	status,2,c
 11558   001798  EFD0  F00B         	goto	u3821
 11559   00179C  EFD2  F00B         	goto	u3820
 11560   0017A0                     u3821:
 11561   0017A0  EFF6  F00B         	goto	l4009
 11562   0017A4                     u3820:
 11563   0017A4  0E01               	movlw	1
 11564   0017A6  2610               	addwf	___fldiv@b^0,f,c
 11565   0017A8  0E00               	movlw	0
 11566   0017AA  2211               	addwfc	(___fldiv@b+1)^0,f,c
 11567   0017AC  2212               	addwfc	(___fldiv@b+2)^0,f,c
 11568   0017AE  2213               	addwfc	(___fldiv@b+3)^0,f,c
 11569   0017B0  A013               	btfss	(___fldiv@b+3)^0,0,c
 11570   0017B2  EFDD  F00B         	goto	u3831
 11571   0017B6  EFDF  F00B         	goto	u3830
 11572   0017BA                     u3831:
 11573   0017BA  EFF6  F00B         	goto	l4009
 11574   0017BE                     u3830:
 11575   0017BE  C010  F018         	movff	___fldiv@b,??___fldiv
 11576   0017C2  C011  F019         	movff	___fldiv@b+1,??___fldiv+1
 11577   0017C6  C012  F01A         	movff	___fldiv@b+2,??___fldiv+2
 11578   0017CA  C013  F01B         	movff	___fldiv@b+3,??___fldiv+3
 11579   0017CE  341B               	rlcf	(??___fldiv+3)^0,w,c
 11580   0017D0  321B               	rrcf	(??___fldiv+3)^0,f,c
 11581   0017D2  321A               	rrcf	(??___fldiv+2)^0,f,c
 11582   0017D4  3219               	rrcf	(??___fldiv+1)^0,f,c
 11583   0017D6  3218               	rrcf	??___fldiv^0,f,c
 11584   0017D8  C018  F010         	movff	??___fldiv,___fldiv@b
 11585   0017DC  C019  F011         	movff	??___fldiv+1,___fldiv@b+1
 11586   0017E0  C01A  F012         	movff	??___fldiv+2,___fldiv@b+2
 11587   0017E4  C01B  F013         	movff	??___fldiv+3,___fldiv@b+3
 11588   0017E8  4A21               	infsnz	___fldiv@new_exp^0,f,c
 11589   0017EA  2A22               	incf	(___fldiv@new_exp+1)^0,f,c
 11590   0017EC                     l4009:
 11591   0017EC  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11592   0017EE  EF01  F00C         	goto	u3841
 11593   0017F2  5022               	movf	(___fldiv@new_exp+1)^0,w,c
 11594   0017F4  E108               	bnz	u3840
 11595   0017F6  2821               	incf	___fldiv@new_exp^0,w,c
 11596   0017F8  A0D8               	btfss	status,0,c
 11597   0017FA  EF01  F00C         	goto	u3841
 11598   0017FE  EF03  F00C         	goto	u3840
 11599   001802                     u3841:
 11600   001802  EF0E  F00C         	goto	l4013
 11601   001806                     u3840:
 11602   001806  0E00               	movlw	0
 11603   001808  6E22               	movwf	(___fldiv@new_exp+1)^0,c
 11604   00180A  6821               	setf	___fldiv@new_exp^0,c
 11605   00180C  0E00               	movlw	0
 11606   00180E  6E10               	movwf	___fldiv@b^0,c
 11607   001810  0E00               	movlw	0
 11608   001812  6E11               	movwf	(___fldiv@b+1)^0,c
 11609   001814  0E00               	movlw	0
 11610   001816  6E12               	movwf	(___fldiv@b+2)^0,c
 11611   001818  0E00               	movlw	0
 11612   00181A  6E13               	movwf	(___fldiv@b+3)^0,c
 11613   00181C                     l4013:
 11614   00181C  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11615   00181E  EF1B  F00C         	goto	u3850
 11616   001822  5022               	movf	(___fldiv@new_exp+1)^0,w,c
 11617   001824  E106               	bnz	u3851
 11618   001826  0421               	decf	___fldiv@new_exp^0,w,c
 11619   001828  B0D8               	btfsc	status,0,c
 11620   00182A  EF19  F00C         	goto	u3851
 11621   00182E  EF1B  F00C         	goto	u3850
 11622   001832                     u3851:
 11623   001832  EF29  F00C         	goto	l4017
 11624   001836                     u3850:
 11625   001836  0E00               	movlw	0
 11626   001838  6E22               	movwf	(___fldiv@new_exp+1)^0,c
 11627   00183A  0E00               	movlw	0
 11628   00183C  6E21               	movwf	___fldiv@new_exp^0,c
 11629   00183E  0E00               	movlw	0
 11630   001840  6E10               	movwf	___fldiv@b^0,c
 11631   001842  0E00               	movlw	0
 11632   001844  6E11               	movwf	(___fldiv@b+1)^0,c
 11633   001846  0E00               	movlw	0
 11634   001848  6E12               	movwf	(___fldiv@b+2)^0,c
 11635   00184A  0E00               	movlw	0
 11636   00184C  6E13               	movwf	(___fldiv@b+3)^0,c
 11637   00184E  0E00               	movlw	0
 11638   001850  6E20               	movwf	___fldiv@sign^0,c
 11639   001852                     l4017:
 11640   001852  C021  F027         	movff	___fldiv@new_exp,___fldiv@bexp
 11641   001856  A027               	btfss	___fldiv@bexp^0,0,c
 11642   001858  EF30  F00C         	goto	u3861
 11643   00185C  EF32  F00C         	goto	u3860
 11644   001860                     u3861:
 11645   001860  EF35  F00C         	goto	l4023
 11646   001864                     u3860:
 11647   001864  8E12               	bsf	(___fldiv@b+2)^0,7,c
 11648   001866  EF36  F00C         	goto	l4025
 11649   00186A                     l4023:
 11650   00186A  9E12               	bcf	(___fldiv@b+2)^0,7,c
 11651   00186C                     l4025:
 11652   00186C  90D8               	bcf	status,0,c
 11653   00186E  3027               	rrcf	___fldiv@bexp^0,w,c
 11654   001870  6E13               	movwf	(___fldiv@b+3)^0,c
 11655   001872  EFEC  F00A         	goto	l3939
 11656   001876                     l1153:
 11657   001876  0012               	return		;funcret
 11658   001878                     __end_of___fldiv:
 11659                           	callstack 0
 11660                           
 11661 ;; *************** function _dtoa *****************
 11662 ;; Defined at:
 11663 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 11666 ;;		 -> NULL(0), sprintf@f(12), 
 11667 ;;  d               2   31[COMRAM] int 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  i               2   39[COMRAM] int 
 11670 ;;  w               2   37[COMRAM] int 
 11671 ;;  p               2   35[COMRAM] int 
 11672 ;;  s               1   41[COMRAM] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      void 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11686 ;;Total ram usage:       13 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 5
 11689 ;; This function calls:
 11690 ;;		___awdiv
 11691 ;;		___awmod
 11692 ;;		_abs
 11693 ;;		_pad
 11694 ;; This function is called by:
 11695 ;;		_vfpfcnvrt
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	text43
 11700   002B56                     __ptext43:
 11701                           	callstack 0
 11702   002B56                     _dtoa:
 11703                           	callstack 21
 11704   002B56                     
 11705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
 11706   002B56  BE21               	btfsc	(dtoa@d+1)^0,7,c
 11707   002B58  EFB0  F015         	goto	u4561
 11708   002B5C  EFB3  F015         	goto	u4560
 11709   002B60                     u4561:
 11710   002B60  0E01               	movlw	1
 11711   002B62  EFB4  F015         	goto	u4570
 11712   002B66                     u4560:
 11713   002B66  0E00               	movlw	0
 11714   002B68                     u4570:
 11715   002B68  6E2A               	movwf	dtoa@s^0,c
 11716   002B6A                     
 11717                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
 11718   002B6A  502A               	movf	dtoa@s^0,w,c
 11719   002B6C  B4D8               	btfsc	status,2,c
 11720   002B6E  EFBB  F015         	goto	u4581
 11721   002B72  EFBD  F015         	goto	u4580
 11722   002B76                     u4581:
 11723   002B76  EFC1  F015         	goto	l4429
 11724   002B7A                     u4580:
 11725   002B7A                     
 11726                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
 11727   002B7A  6C20               	negf	dtoa@d^0,c
 11728   002B7C  1E21               	comf	(dtoa@d+1)^0,f,c
 11729   002B7E  B0D8               	btfsc	status,0,c
 11730   002B80  2A21               	incf	(dtoa@d+1)^0,f,c
 11731   002B82                     l4429:
 11732                           
 11733                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
 11734   002B82  BE5B               	btfsc	(_prec+1)^0,7,c
 11735   002B84  EFC8  F015         	goto	u4590
 11736   002B88  EFC6  F015         	goto	u4591
 11737   002B8C                     u4591:
 11738   002B8C  EFCE  F015         	goto	l1300
 11739   002B90                     u4590:
 11740   002B90  0E00               	movlw	0
 11741   002B92  6E25               	movwf	(dtoa@p+1)^0,c
 11742   002B94  0E01               	movlw	1
 11743   002B96  6E24               	movwf	dtoa@p^0,c
 11744   002B98  EFD2  F015         	goto	l1302
 11745   002B9C                     l1300:
 11746   002B9C  C05A  F024         	movff	_prec,dtoa@p
 11747   002BA0  C05B  F025         	movff	_prec+1,dtoa@p+1
 11748   002BA4                     l1302:
 11749                           
 11750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
 11751   002BA4  C058  F026         	movff	_width,dtoa@w
 11752   002BA8  C059  F027         	movff	_width+1,dtoa@w+1
 11753   002BAC                     
 11754                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
 11755   002BAC  502A               	movf	dtoa@s^0,w,c
 11756   002BAE  B4D8               	btfsc	status,2,c
 11757   002BB0  EFDC  F015         	goto	u4601
 11758   002BB4  EFDE  F015         	goto	u4600
 11759   002BB8                     u4601:
 11760   002BB8  EFF5  F015         	goto	l1303
 11761   002BBC                     u4600:
 11762   002BBC                     
 11763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
 11764   002BBC  0626               	decf	dtoa@w^0,f,c
 11765   002BBE  A0D8               	btfss	status,0,c
 11766   002BC0  0627               	decf	(dtoa@w+1)^0,f,c
 11767   002BC2                     
 11768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
 11769   002BC2  502A               	movf	dtoa@s^0,w,c
 11770   002BC4  A4D8               	btfss	status,2,c
 11771   002BC6  EFE7  F015         	goto	u4611
 11772   002BCA  EFE9  F015         	goto	u4610
 11773   002BCE                     u4611:
 11774   002BCE  EFEF  F015         	goto	l4441
 11775   002BD2                     u4610:
 11776   002BD2  0E00               	movlw	0
 11777   002BD4  6E23               	movwf	(_dtoa$3259+1)^0,c
 11778   002BD6  0E2B               	movlw	43
 11779   002BD8  6E22               	movwf	_dtoa$3259^0,c
 11780   002BDA  EFF3  F015         	goto	l4443
 11781   002BDE                     l4441:
 11782   002BDE  0E00               	movlw	0
 11783   002BE0  6E23               	movwf	(_dtoa$3259+1)^0,c
 11784   002BE2  0E2D               	movlw	45
 11785   002BE4  6E22               	movwf	_dtoa$3259^0,c
 11786   002BE6                     l4443:
 11787   002BE6  C022  F02A         	movff	_dtoa$3259,dtoa@s
 11788   002BEA                     l1303:
 11789                           
 11790                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
 11791   002BEA  0E00               	movlw	0
 11792   002BEC  6E29               	movwf	(dtoa@i+1)^0,c
 11793   002BEE  0E4F               	movlw	79
 11794   002BF0  6E28               	movwf	dtoa@i^0,c
 11795   002BF2                     
 11796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
 11797   002BF2  0E00               	movlw	0
 11798   002BF4  0101               	movlb	1	; () banked
 11799   002BF6  6FC2               	movwf	(_dbuf+79)& (0+255),b
 11800                           
 11801                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
 11802   002BF8  EF2E  F016         	goto	l4457
 11803   002BFC                     l4447:
 11804                           
 11805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
 11806   002BFC  0628               	decf	dtoa@i^0,f,c
 11807   002BFE  A0D8               	btfss	status,0,c
 11808   002C00  0629               	decf	(dtoa@i+1)^0,f,c
 11809   002C02                     
 11810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 11811   002C02  0E73               	movlw	low _dbuf
 11812   002C04  2428               	addwf	dtoa@i^0,w,c
 11813   002C06  6ED9               	movwf	fsr2l,c
 11814   002C08  0E01               	movlw	high _dbuf
 11815   002C0A  2029               	addwfc	(dtoa@i+1)^0,w,c
 11816   002C0C  6EDA               	movwf	fsr2h,c
 11817   002C0E  C020  F002         	movff	dtoa@d,___awmod@dividend
 11818   002C12  C021  F003         	movff	dtoa@d+1,___awmod@dividend+1
 11819   002C16  0E00               	movlw	0
 11820   002C18  6E05               	movwf	(___awmod@divisor+1)^0,c
 11821   002C1A  0E0A               	movlw	10
 11822   002C1C  6E04               	movwf	___awmod@divisor^0,c
 11823   002C1E  EC4B  F01D         	call	___awmod	;wreg free
 11824   002C22  C002  F008         	movff	?___awmod,abs@a
 11825   002C26  C003  F009         	movff	?___awmod+1,abs@a+1
 11826   002C2A  EC6E  F021         	call	_abs	;wreg free
 11827   002C2E  5008               	movf	?_abs^0,w,c
 11828   002C30  0F30               	addlw	48
 11829   002C32  6EDF               	movwf	indf2,c
 11830   002C34                     
 11831                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
 11832   002C34  0624               	decf	dtoa@p^0,f,c
 11833   002C36  A0D8               	btfss	status,0,c
 11834   002C38  0625               	decf	(dtoa@p+1)^0,f,c
 11835   002C3A                     
 11836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
 11837   002C3A  0626               	decf	dtoa@w^0,f,c
 11838   002C3C  A0D8               	btfss	status,0,c
 11839   002C3E  0627               	decf	(dtoa@w+1)^0,f,c
 11840   002C40                     
 11841                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
 11842   002C40  C020  F002         	movff	dtoa@d,___awdiv@dividend
 11843   002C44  C021  F003         	movff	dtoa@d+1,___awdiv@dividend+1
 11844   002C48  0E00               	movlw	0
 11845   002C4A  6E05               	movwf	(___awdiv@divisor+1)^0,c
 11846   002C4C  0E0A               	movlw	10
 11847   002C4E  6E04               	movwf	___awdiv@divisor^0,c
 11848   002C50  EC33  F01C         	call	___awdiv	;wreg free
 11849   002C54  C002  F020         	movff	?___awdiv,dtoa@d
 11850   002C58  C003  F021         	movff	?___awdiv+1,dtoa@d+1
 11851   002C5C                     l4457:
 11852                           
 11853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
 11854   002C5C  BE29               	btfsc	(dtoa@i+1)^0,7,c
 11855   002C5E  EF39  F016         	goto	u4621
 11856   002C62  5029               	movf	(dtoa@i+1)^0,w,c
 11857   002C64  E108               	bnz	u4620
 11858   002C66  0428               	decf	dtoa@i^0,w,c
 11859   002C68  A0D8               	btfss	status,0,c
 11860   002C6A  EF39  F016         	goto	u4621
 11861   002C6E  EF3B  F016         	goto	u4620
 11862   002C72                     u4621:
 11863   002C72  EF51  F016         	goto	l4463
 11864   002C76                     u4620:
 11865   002C76  5020               	movf	dtoa@d^0,w,c
 11866   002C78  1021               	iorwf	(dtoa@d+1)^0,w,c
 11867   002C7A  A4D8               	btfss	status,2,c
 11868   002C7C  EF42  F016         	goto	u4631
 11869   002C80  EF44  F016         	goto	u4630
 11870   002C84                     u4631:
 11871   002C84  EFFE  F015         	goto	l4447
 11872   002C88                     u4630:
 11873   002C88  BE25               	btfsc	(dtoa@p+1)^0,7,c
 11874   002C8A  EF51  F016         	goto	u4640
 11875   002C8E  5025               	movf	(dtoa@p+1)^0,w,c
 11876   002C90  E106               	bnz	u4641
 11877   002C92  0424               	decf	dtoa@p^0,w,c
 11878   002C94  B0D8               	btfsc	status,0,c
 11879   002C96  EF4F  F016         	goto	u4641
 11880   002C9A  EF51  F016         	goto	u4640
 11881   002C9E                     u4641:
 11882   002C9E  EFFE  F015         	goto	l4447
 11883   002CA2                     u4640:
 11884   002CA2                     l4463:
 11885                           
 11886                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
 11887   002CA2  502A               	movf	dtoa@s^0,w,c
 11888   002CA4  B4D8               	btfsc	status,2,c
 11889   002CA6  EF57  F016         	goto	u4651
 11890   002CAA  EF59  F016         	goto	u4650
 11891   002CAE                     u4651:
 11892   002CAE  EF64  F016         	goto	l4469
 11893   002CB2                     u4650:
 11894   002CB2                     
 11895                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
 11896   002CB2  0628               	decf	dtoa@i^0,f,c
 11897   002CB4  A0D8               	btfss	status,0,c
 11898   002CB6  0629               	decf	(dtoa@i+1)^0,f,c
 11899   002CB8                     
 11900                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
 11901   002CB8  0E73               	movlw	low _dbuf
 11902   002CBA  2428               	addwf	dtoa@i^0,w,c
 11903   002CBC  6ED9               	movwf	fsr2l,c
 11904   002CBE  0E01               	movlw	high _dbuf
 11905   002CC0  2029               	addwfc	(dtoa@i+1)^0,w,c
 11906   002CC2  6EDA               	movwf	fsr2h,c
 11907   002CC4  C02A  FFDF         	movff	dtoa@s,indf2
 11908   002CC8                     l4469:
 11909                           
 11910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11911   002CC8  C01E  F013         	movff	dtoa@fp,pad@fp
 11912   002CCC  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
 11913   002CD0  0E73               	movlw	low _dbuf
 11914   002CD2  2428               	addwf	dtoa@i^0,w,c
 11915   002CD4  6E15               	movwf	pad@buf^0,c
 11916   002CD6  0E01               	movlw	high _dbuf
 11917   002CD8  2029               	addwfc	(dtoa@i+1)^0,w,c
 11918   002CDA  6E16               	movwf	(pad@buf+1)^0,c
 11919   002CDC  C026  F017         	movff	dtoa@w,pad@p
 11920   002CE0  C027  F018         	movff	dtoa@w+1,pad@p+1
 11921   002CE4  EC37  F01E         	call	_pad	;wreg free
 11922   002CE8  0012               	return		;funcret
 11923   002CEA                     __end_of_dtoa:
 11924                           	callstack 0
 11925                           
 11926 ;; *************** function _pad *****************
 11927 ;; Defined at:
 11928 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 11931 ;;		 -> NULL(0), sprintf@f(12), 
 11932 ;;  buf             2   20[COMRAM] PTR unsigned char 
 11933 ;;		 -> dbuf(80), 
 11934 ;;  p               2   22[COMRAM] int 
 11935 ;; Auto vars:     Size  Location     Type
 11936 ;;  w               2   27[COMRAM] int 
 11937 ;;  i               2   25[COMRAM] int 
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;Total ram usage:       11 bytes
 11952 ;; Hardware stack levels used: 1
 11953 ;; Hardware stack levels required when called: 4
 11954 ;; This function calls:
 11955 ;;		_fputc
 11956 ;;		_fputs
 11957 ;; This function is called by:
 11958 ;;		_dtoa
 11959 ;;		_efgtoa
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           	psect	text44
 11964   003C6E                     __ptext44:
 11965                           	callstack 0
 11966   003C6E                     _pad:
 11967                           	callstack 21
 11968   003C6E                     
 11969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
 11970   003C6E  BE18               	btfsc	(pad@p+1)^0,7,c
 11971   003C70  EF3C  F01E         	goto	u4341
 11972   003C74  EF3E  F01E         	goto	u4340
 11973   003C78                     u4341:
 11974   003C78  EF44  F01E         	goto	l4343
 11975   003C7C                     u4340:
 11976   003C7C  C017  F01C         	movff	pad@p,pad@w
 11977   003C80  C018  F01D         	movff	pad@p+1,pad@w+1
 11978   003C84  EF48  F01E         	goto	l1291
 11979   003C88                     l4343:
 11980   003C88  0E00               	movlw	0
 11981   003C8A  6E1D               	movwf	(pad@w+1)^0,c
 11982   003C8C  0E00               	movlw	0
 11983   003C8E  6E1C               	movwf	pad@w^0,c
 11984   003C90                     l1291:
 11985                           
 11986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
 11987   003C90  0E00               	movlw	0
 11988   003C92  6E1B               	movwf	(pad@i+1)^0,c
 11989   003C94  0E00               	movlw	0
 11990   003C96  6E1A               	movwf	pad@i^0,c
 11991                           
 11992                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 11993   003C98  EF5A  F01E         	goto	l4349
 11994   003C9C                     l4345:
 11995                           
 11996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
 11997   003C9C  0E00               	movlw	0
 11998   003C9E  6E04               	movwf	(fputc@c+1)^0,c
 11999   003CA0  0E20               	movlw	32
 12000   003CA2  6E03               	movwf	fputc@c^0,c
 12001   003CA4  C013  F005         	movff	pad@fp,fputc@fp
 12002   003CA8  C014  F006         	movff	pad@fp+1,fputc@fp+1
 12003   003CAC  EC6B  F01B         	call	_fputc	;wreg free
 12004   003CB0                     
 12005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
 12006   003CB0  4A1A               	infsnz	pad@i^0,f,c
 12007   003CB2  2A1B               	incf	(pad@i+1)^0,f,c
 12008   003CB4                     l4349:
 12009                           
 12010                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 12011   003CB4  501C               	movf	pad@w^0,w,c
 12012   003CB6  5C1A               	subwf	pad@i^0,w,c
 12013   003CB8  501B               	movf	(pad@i+1)^0,w,c
 12014   003CBA  0A80               	xorlw	128
 12015   003CBC  6E19               	movwf	??_pad^0,c
 12016   003CBE  501D               	movf	(pad@w+1)^0,w,c
 12017   003CC0  0A80               	xorlw	128
 12018   003CC2  5819               	subwfb	??_pad^0,w,c
 12019   003CC4  A0D8               	btfss	status,0,c
 12020   003CC6  EF67  F01E         	goto	u4351
 12021   003CCA  EF69  F01E         	goto	u4350
 12022   003CCE                     u4351:
 12023   003CCE  EF4E  F01E         	goto	l4345
 12024   003CD2                     u4350:
 12025   003CD2                     
 12026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
 12027   003CD2  C015  F00C         	movff	pad@buf,fputs@s
 12028   003CD6  C016  F00D         	movff	pad@buf+1,fputs@s+1
 12029   003CDA  C013  F00E         	movff	pad@fp,fputs@fp
 12030   003CDE  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 12031   003CE2  ECEB  F020         	call	_fputs	;wreg free
 12032   003CE6  0012               	return		;funcret
 12033   003CE8                     __end_of_pad:
 12034                           	callstack 0
 12035                           
 12036 ;; *************** function _fputs *****************
 12037 ;; Defined at:
 12038 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
 12039 ;; Parameters:    Size  Location     Type
 12040 ;;  s               2   11[COMRAM] PTR const unsigned char 
 12041 ;;		 -> dbuf(80), 
 12042 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 12043 ;;		 -> NULL(0), sprintf@f(12), 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  i               2   16[COMRAM] int 
 12046 ;;  c               1   15[COMRAM] unsigned char 
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  2   11[COMRAM] int 
 12049 ;; Registers used:
 12050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12060 ;;Total ram usage:        7 bytes
 12061 ;; Hardware stack levels used: 1
 12062 ;; Hardware stack levels required when called: 3
 12063 ;; This function calls:
 12064 ;;		_fputc
 12065 ;; This function is called by:
 12066 ;;		_pad
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           	psect	text45
 12071   0041D6                     __ptext45:
 12072                           	callstack 0
 12073   0041D6                     _fputs:
 12074                           	callstack 21
 12075   0041D6  0E00               	movlw	0
 12076   0041D8  6E12               	movwf	(fputs@i+1)^0,c
 12077   0041DA  0E00               	movlw	0
 12078   0041DC  6E11               	movwf	fputs@i^0,c
 12079   0041DE  EFFC  F020         	goto	l3883
 12080   0041E2                     l3879:
 12081   0041E2  C010  F003         	movff	fputs@c,fputc@c
 12082   0041E6  6A04               	clrf	(fputc@c+1)^0,c
 12083   0041E8  C00E  F005         	movff	fputs@fp,fputc@fp
 12084   0041EC  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
 12085   0041F0  EC6B  F01B         	call	_fputc	;wreg free
 12086   0041F4  4A11               	infsnz	fputs@i^0,f,c
 12087   0041F6  2A12               	incf	(fputs@i+1)^0,f,c
 12088   0041F8                     l3883:
 12089   0041F8  5011               	movf	fputs@i^0,w,c
 12090   0041FA  240C               	addwf	fputs@s^0,w,c
 12091   0041FC  6ED9               	movwf	fsr2l,c
 12092   0041FE  5012               	movf	(fputs@i+1)^0,w,c
 12093   004200  200D               	addwfc	(fputs@s+1)^0,w,c
 12094   004202  6EDA               	movwf	fsr2h,c
 12095   004204  50DF               	movf	indf2,w,c
 12096   004206  6E10               	movwf	fputs@c^0,c
 12097   004208  5010               	movf	fputs@c^0,w,c
 12098   00420A  A4D8               	btfss	status,2,c
 12099   00420C  EF0A  F021         	goto	u3621
 12100   004210  EF0C  F021         	goto	u3620
 12101   004214                     u3621:
 12102   004214  EFF1  F020         	goto	l3879
 12103   004218                     u3620:
 12104   004218  0012               	return		;funcret
 12105   00421A                     __end_of_fputs:
 12106                           	callstack 0
 12107                           
 12108 ;; *************** function _fputc *****************
 12109 ;; Defined at:
 12110 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;  c               2    2[COMRAM] int 
 12113 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 12114 ;;		 -> NULL(0), sprintf@f(12), 
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;		None
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  2    2[COMRAM] int 
 12119 ;; Registers used:
 12120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12128 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12129 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12130 ;;Total ram usage:        9 bytes
 12131 ;; Hardware stack levels used: 1
 12132 ;; Hardware stack levels required when called: 2
 12133 ;; This function calls:
 12134 ;;		_putch
 12135 ;; This function is called by:
 12136 ;;		_pad
 12137 ;;		_vfpfcnvrt
 12138 ;;		_fputs
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142                           	psect	text46
 12143   0036D6                     __ptext46:
 12144                           	callstack 0
 12145   0036D6                     _fputc:
 12146                           	callstack 24
 12147   0036D6  5005               	movf	fputc@fp^0,w,c
 12148   0036D8  1006               	iorwf	(fputc@fp+1)^0,w,c
 12149   0036DA  B4D8               	btfsc	status,2,c
 12150   0036DC  EF72  F01B         	goto	u3191
 12151   0036E0  EF74  F01B         	goto	u3190
 12152   0036E4                     u3191:
 12153   0036E4  EF7D  F01B         	goto	l3665
 12154   0036E8                     u3190:
 12155   0036E8  5005               	movf	fputc@fp^0,w,c
 12156   0036EA  1006               	iorwf	(fputc@fp+1)^0,w,c
 12157   0036EC  A4D8               	btfss	status,2,c
 12158   0036EE  EF7B  F01B         	goto	u3201
 12159   0036F2  EF7D  F01B         	goto	u3200
 12160   0036F6                     u3201:
 12161   0036F6  EF82  F01B         	goto	l3667
 12162   0036FA                     u3200:
 12163   0036FA                     l3665:
 12164   0036FA  5003               	movf	fputc@c^0,w,c
 12165   0036FC  EC1E  F022         	call	_putch
 12166   003700  EFCF  F01B         	goto	l1460
 12167   003704                     l3667:
 12168   003704  EE20 F00A          	lfsr	2,10
 12169   003708  5005               	movf	fputc@fp^0,w,c
 12170   00370A  26D9               	addwf	fsr2l,f,c
 12171   00370C  5006               	movf	(fputc@fp+1)^0,w,c
 12172   00370E  22DA               	addwfc	fsr2h,f,c
 12173   003710  50DE               	movf	postinc2,w,c
 12174   003712  10DE               	iorwf	postinc2,w,c
 12175   003714  B4D8               	btfsc	status,2,c
 12176   003716  EF8F  F01B         	goto	u3211
 12177   00371A  EF91  F01B         	goto	u3210
 12178   00371E                     u3211:
 12179   00371E  EFAC  F01B         	goto	l3671
 12180   003722                     u3210:
 12181   003722  EE20 F00A          	lfsr	2,10
 12182   003726  5005               	movf	fputc@fp^0,w,c
 12183   003728  26D9               	addwf	fsr2l,f,c
 12184   00372A  5006               	movf	(fputc@fp+1)^0,w,c
 12185   00372C  22DA               	addwfc	fsr2h,f,c
 12186   00372E  EE10 F003          	lfsr	1,3
 12187   003732  5005               	movf	fputc@fp^0,w,c
 12188   003734  26E1               	addwf	fsr1l,f,c
 12189   003736  5006               	movf	(fputc@fp+1)^0,w,c
 12190   003738  22E2               	addwfc	fsr1h,f,c
 12191   00373A  50DE               	movf	postinc2,w,c
 12192   00373C  5CE6               	subwf	postinc1,w,c
 12193   00373E  50E6               	movf	postinc1,w,c
 12194   003740  0A80               	xorlw	128
 12195   003742  6E0B               	movwf	(??_fputc+4)^0,c
 12196   003744  50DE               	movf	postinc2,w,c
 12197   003746  0A80               	xorlw	128
 12198   003748  580B               	subwfb	(??_fputc+4)^0,w,c
 12199   00374A  B0D8               	btfsc	status,0,c
 12200   00374C  EFAA  F01B         	goto	u3221
 12201   003750  EFAC  F01B         	goto	u3220
 12202   003754                     u3221:
 12203   003754  EFCF  F01B         	goto	l1460
 12204   003758                     u3220:
 12205   003758                     l3671:
 12206   003758  EE20 F003          	lfsr	2,3
 12207   00375C  5005               	movf	fputc@fp^0,w,c
 12208   00375E  26D9               	addwf	fsr2l,f,c
 12209   003760  5006               	movf	(fputc@fp+1)^0,w,c
 12210   003762  22DA               	addwfc	fsr2h,f,c
 12211   003764  CFDE F007          	movff	postinc2,??_fputc
 12212   003768  CFDD F008          	movff	postdec2,??_fputc+1
 12213   00376C  C005  FFD9         	movff	fputc@fp,fsr2l
 12214   003770  C006  FFDA         	movff	fputc@fp+1,fsr2h
 12215   003774  CFDE F009          	movff	postinc2,??_fputc+2
 12216   003778  CFDD F00A          	movff	postdec2,??_fputc+3
 12217   00377C  5007               	movf	??_fputc^0,w,c
 12218   00377E  2409               	addwf	(??_fputc+2)^0,w,c
 12219   003780  6ED9               	movwf	fsr2l,c
 12220   003782  5008               	movf	(??_fputc+1)^0,w,c
 12221   003784  200A               	addwfc	(??_fputc+3)^0,w,c
 12222   003786  6EDA               	movwf	fsr2h,c
 12223   003788  C003  FFDF         	movff	fputc@c,indf2
 12224   00378C  EE20 F003          	lfsr	2,3
 12225   003790  5005               	movf	fputc@fp^0,w,c
 12226   003792  26D9               	addwf	fsr2l,f,c
 12227   003794  5006               	movf	(fputc@fp+1)^0,w,c
 12228   003796  22DA               	addwfc	fsr2h,f,c
 12229   003798  2ADE               	incf	postinc2,f,c
 12230   00379A  0E00               	movlw	0
 12231   00379C  22DD               	addwfc	postdec2,f,c
 12232   00379E                     l1460:
 12233   00379E  0012               	return		;funcret
 12234   0037A0                     __end_of_fputc:
 12235                           	callstack 0
 12236                           
 12237 ;; *************** function _putch *****************
 12238 ;; Defined at:
 12239 ;;		line 101 in file "UART.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;  data            1    wreg     unsigned char 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  data            1    1[COMRAM] unsigned char 
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		wreg
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;Total ram usage:        1 bytes
 12258 ;; Hardware stack levels used: 1
 12259 ;; Hardware stack levels required when called: 1
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_uart_write_norm
 12264 ;;		_uart_write
 12265 ;;		_fputc
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           	psect	text47
 12270   00443C                     __ptext47:
 12271                           	callstack 0
 12272   00443C                     _putch:
 12273                           	callstack 27
 12274                           
 12275                           ;incstack = 0
 12276                           ;putch@data stored from wreg
 12277   00443C  6E02               	movwf	putch@data^0,c
 12278   00443E                     l565:
 12279                           
 12280                           ;UART.c: 102:     while(!TX1IF){
 12281   00443E  A89E               	btfss	3998,4,c	;volatile
 12282   004440  EF24  F022         	goto	u3181
 12283   004444  EF26  F022         	goto	u3180
 12284   004448                     u3181:
 12285   004448  EF1F  F022         	goto	l565
 12286   00444C                     u3180:
 12287   00444C                     
 12288                           ;UART.c: 105:     TXREG1 = data;
 12289   00444C  C002  FFAD         	movff	putch@data,4013	;volatile
 12290   004450  0012               	return		;funcret
 12291   004452                     __end_of_putch:
 12292                           	callstack 0
 12293                           
 12294 ;; *************** function _abs *****************
 12295 ;; Defined at:
 12296 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  a               2    7[COMRAM] int 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  2    7[COMRAM] int 
 12303 ;; Registers used:
 12304 ;;		wreg, status,2, status,0
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12314 ;;Total ram usage:        4 bytes
 12315 ;; Hardware stack levels used: 1
 12316 ;; Hardware stack levels required when called: 1
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_dtoa
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text48
 12325   0042DC                     __ptext48:
 12326                           	callstack 0
 12327   0042DC                     _abs:
 12328                           	callstack 24
 12329   0042DC  BE09               	btfsc	(abs@a+1)^0,7,c
 12330   0042DE  EF7B  F021         	goto	u4360
 12331   0042E2  5009               	movf	(abs@a+1)^0,w,c
 12332   0042E4  E106               	bnz	u4361
 12333   0042E6  0408               	decf	abs@a^0,w,c
 12334   0042E8  B0D8               	btfsc	status,0,c
 12335   0042EA  EF79  F021         	goto	u4361
 12336   0042EE  EF7B  F021         	goto	u4360
 12337   0042F2                     u4361:
 12338   0042F2  EF89  F021         	goto	l1419
 12339   0042F6                     u4360:
 12340   0042F6  C008  F00A         	movff	abs@a,??_abs
 12341   0042FA  C009  F00B         	movff	abs@a+1,??_abs+1
 12342   0042FE  1E0A               	comf	??_abs^0,f,c
 12343   004300  1E0B               	comf	(??_abs+1)^0,f,c
 12344   004302  4A0A               	infsnz	??_abs^0,f,c
 12345   004304  2A0B               	incf	(??_abs+1)^0,f,c
 12346   004306  C00A  F008         	movff	??_abs,?_abs
 12347   00430A  C00B  F009         	movff	??_abs+1,?_abs+1
 12348   00430E  EF8D  F021         	goto	l1422
 12349   004312                     l1419:
 12350   004312  C008  F008         	movff	abs@a,?_abs
 12351   004316  C009  F009         	movff	abs@a+1,?_abs+1
 12352   00431A                     l1422:
 12353   00431A  0012               	return		;funcret
 12354   00431C                     __end_of_abs:
 12355                           	callstack 0
 12356                           
 12357 ;; *************** function ___awmod *****************
 12358 ;; Defined at:
 12359 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;  dividend        2    1[COMRAM] int 
 12362 ;;  divisor         2    3[COMRAM] int 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  sign            1    6[COMRAM] unsigned char 
 12365 ;;  counter         1    5[COMRAM] unsigned char 
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  2    1[COMRAM] int 
 12368 ;; Registers used:
 12369 ;;		wreg, status,2, status,0
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12379 ;;Total ram usage:        6 bytes
 12380 ;; Hardware stack levels used: 1
 12381 ;; Hardware stack levels required when called: 1
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_dtoa
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           	psect	text49
 12390   003A96                     __ptext49:
 12391                           	callstack 0
 12392   003A96                     ___awmod:
 12393                           	callstack 24
 12394   003A96  0E00               	movlw	0
 12395   003A98  6E07               	movwf	___awmod@sign^0,c
 12396   003A9A  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
 12397   003A9C  EF54  F01D         	goto	u4120
 12398   003AA0  EF52  F01D         	goto	u4121
 12399   003AA4                     u4121:
 12400   003AA4  EF5A  F01D         	goto	l4221
 12401   003AA8                     u4120:
 12402   003AA8  6C02               	negf	___awmod@dividend^0,c
 12403   003AAA  1E03               	comf	(___awmod@dividend+1)^0,f,c
 12404   003AAC  B0D8               	btfsc	status,0,c
 12405   003AAE  2A03               	incf	(___awmod@dividend+1)^0,f,c
 12406   003AB0  0E01               	movlw	1
 12407   003AB2  6E07               	movwf	___awmod@sign^0,c
 12408   003AB4                     l4221:
 12409   003AB4  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
 12410   003AB6  EF61  F01D         	goto	u4130
 12411   003ABA  EF5F  F01D         	goto	u4131
 12412   003ABE                     u4131:
 12413   003ABE  EF65  F01D         	goto	l4225
 12414   003AC2                     u4130:
 12415   003AC2  6C04               	negf	___awmod@divisor^0,c
 12416   003AC4  1E05               	comf	(___awmod@divisor+1)^0,f,c
 12417   003AC6  B0D8               	btfsc	status,0,c
 12418   003AC8  2A05               	incf	(___awmod@divisor+1)^0,f,c
 12419   003ACA                     l4225:
 12420   003ACA  5004               	movf	___awmod@divisor^0,w,c
 12421   003ACC  1005               	iorwf	(___awmod@divisor+1)^0,w,c
 12422   003ACE  B4D8               	btfsc	status,2,c
 12423   003AD0  EF6C  F01D         	goto	u4141
 12424   003AD4  EF6E  F01D         	goto	u4140
 12425   003AD8                     u4141:
 12426   003AD8  EF92  F01D         	goto	l4241
 12427   003ADC                     u4140:
 12428   003ADC  0E01               	movlw	1
 12429   003ADE  6E06               	movwf	___awmod@counter^0,c
 12430   003AE0  EF76  F01D         	goto	l4231
 12431   003AE4                     l4229:
 12432   003AE4  90D8               	bcf	status,0,c
 12433   003AE6  3604               	rlcf	___awmod@divisor^0,f,c
 12434   003AE8  3605               	rlcf	(___awmod@divisor+1)^0,f,c
 12435   003AEA  2A06               	incf	___awmod@counter^0,f,c
 12436   003AEC                     l4231:
 12437   003AEC  AE05               	btfss	(___awmod@divisor+1)^0,7,c
 12438   003AEE  EF7B  F01D         	goto	u4151
 12439   003AF2  EF7D  F01D         	goto	u4150
 12440   003AF6                     u4151:
 12441   003AF6  EF72  F01D         	goto	l4229
 12442   003AFA                     u4150:
 12443   003AFA                     l4233:
 12444   003AFA  5004               	movf	___awmod@divisor^0,w,c
 12445   003AFC  5C02               	subwf	___awmod@dividend^0,w,c
 12446   003AFE  5005               	movf	(___awmod@divisor+1)^0,w,c
 12447   003B00  5803               	subwfb	(___awmod@dividend+1)^0,w,c
 12448   003B02  A0D8               	btfss	status,0,c
 12449   003B04  EF86  F01D         	goto	u4161
 12450   003B08  EF88  F01D         	goto	u4160
 12451   003B0C                     u4161:
 12452   003B0C  EF8C  F01D         	goto	l4237
 12453   003B10                     u4160:
 12454   003B10  5004               	movf	___awmod@divisor^0,w,c
 12455   003B12  5E02               	subwf	___awmod@dividend^0,f,c
 12456   003B14  5005               	movf	(___awmod@divisor+1)^0,w,c
 12457   003B16  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
 12458   003B18                     l4237:
 12459   003B18  90D8               	bcf	status,0,c
 12460   003B1A  3205               	rrcf	(___awmod@divisor+1)^0,f,c
 12461   003B1C  3204               	rrcf	___awmod@divisor^0,f,c
 12462   003B1E  2E06               	decfsz	___awmod@counter^0,f,c
 12463   003B20  EF7D  F01D         	goto	l4233
 12464   003B24                     l4241:
 12465   003B24  5007               	movf	___awmod@sign^0,w,c
 12466   003B26  B4D8               	btfsc	status,2,c
 12467   003B28  EF98  F01D         	goto	u4171
 12468   003B2C  EF9A  F01D         	goto	u4170
 12469   003B30                     u4171:
 12470   003B30  EF9E  F01D         	goto	l4245
 12471   003B34                     u4170:
 12472   003B34  6C02               	negf	___awmod@dividend^0,c
 12473   003B36  1E03               	comf	(___awmod@dividend+1)^0,f,c
 12474   003B38  B0D8               	btfsc	status,0,c
 12475   003B3A  2A03               	incf	(___awmod@dividend+1)^0,f,c
 12476   003B3C                     l4245:
 12477   003B3C  C002  F002         	movff	___awmod@dividend,?___awmod
 12478   003B40  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
 12479   003B44  0012               	return		;funcret
 12480   003B46                     __end_of___awmod:
 12481                           	callstack 0
 12482                           
 12483 ;; *************** function ___awdiv *****************
 12484 ;; Defined at:
 12485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;  dividend        2    1[COMRAM] int 
 12488 ;;  divisor         2    3[COMRAM] int 
 12489 ;; Auto vars:     Size  Location     Type
 12490 ;;  quotient        2    7[COMRAM] int 
 12491 ;;  sign            1    6[COMRAM] unsigned char 
 12492 ;;  counter         1    5[COMRAM] unsigned char 
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  2    1[COMRAM] int 
 12495 ;; Registers used:
 12496 ;;		wreg, status,2, status,0
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12503 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12505 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12506 ;;Total ram usage:        8 bytes
 12507 ;; Hardware stack levels used: 1
 12508 ;; Hardware stack levels required when called: 1
 12509 ;; This function calls:
 12510 ;;		Nothing
 12511 ;; This function is called by:
 12512 ;;		_reprak_main
 12513 ;;		_dtoa
 12514 ;; This function uses a non-reentrant model
 12515 ;;
 12516                           
 12517                           	psect	text50
 12518   003866                     __ptext50:
 12519                           	callstack 0
 12520   003866                     ___awdiv:
 12521                           	callstack 28
 12522   003866  0E00               	movlw	0
 12523   003868  6E07               	movwf	___awdiv@sign^0,c
 12524   00386A  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
 12525   00386C  EF3C  F01C         	goto	u4060
 12526   003870  EF3A  F01C         	goto	u4061
 12527   003874                     u4061:
 12528   003874  EF42  F01C         	goto	l4177
 12529   003878                     u4060:
 12530   003878  6C04               	negf	___awdiv@divisor^0,c
 12531   00387A  1E05               	comf	(___awdiv@divisor+1)^0,f,c
 12532   00387C  B0D8               	btfsc	status,0,c
 12533   00387E  2A05               	incf	(___awdiv@divisor+1)^0,f,c
 12534   003880  0E01               	movlw	1
 12535   003882  6E07               	movwf	___awdiv@sign^0,c
 12536   003884                     l4177:
 12537   003884  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
 12538   003886  EF49  F01C         	goto	u4070
 12539   00388A  EF47  F01C         	goto	u4071
 12540   00388E                     u4071:
 12541   00388E  EF4F  F01C         	goto	l4183
 12542   003892                     u4070:
 12543   003892  6C02               	negf	___awdiv@dividend^0,c
 12544   003894  1E03               	comf	(___awdiv@dividend+1)^0,f,c
 12545   003896  B0D8               	btfsc	status,0,c
 12546   003898  2A03               	incf	(___awdiv@dividend+1)^0,f,c
 12547   00389A  0E01               	movlw	1
 12548   00389C  1A07               	xorwf	___awdiv@sign^0,f,c
 12549   00389E                     l4183:
 12550   00389E  0E00               	movlw	0
 12551   0038A0  6E09               	movwf	(___awdiv@quotient+1)^0,c
 12552   0038A2  0E00               	movlw	0
 12553   0038A4  6E08               	movwf	___awdiv@quotient^0,c
 12554   0038A6  5004               	movf	___awdiv@divisor^0,w,c
 12555   0038A8  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
 12556   0038AA  B4D8               	btfsc	status,2,c
 12557   0038AC  EF5A  F01C         	goto	u4081
 12558   0038B0  EF5C  F01C         	goto	u4080
 12559   0038B4                     u4081:
 12560   0038B4  EF84  F01C         	goto	l4205
 12561   0038B8                     u4080:
 12562   0038B8  0E01               	movlw	1
 12563   0038BA  6E06               	movwf	___awdiv@counter^0,c
 12564   0038BC  EF64  F01C         	goto	l4191
 12565   0038C0                     l4189:
 12566   0038C0  90D8               	bcf	status,0,c
 12567   0038C2  3604               	rlcf	___awdiv@divisor^0,f,c
 12568   0038C4  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
 12569   0038C6  2A06               	incf	___awdiv@counter^0,f,c
 12570   0038C8                     l4191:
 12571   0038C8  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
 12572   0038CA  EF69  F01C         	goto	u4091
 12573   0038CE  EF6B  F01C         	goto	u4090
 12574   0038D2                     u4091:
 12575   0038D2  EF60  F01C         	goto	l4189
 12576   0038D6                     u4090:
 12577   0038D6                     l4193:
 12578   0038D6  90D8               	bcf	status,0,c
 12579   0038D8  3608               	rlcf	___awdiv@quotient^0,f,c
 12580   0038DA  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
 12581   0038DC  5004               	movf	___awdiv@divisor^0,w,c
 12582   0038DE  5C02               	subwf	___awdiv@dividend^0,w,c
 12583   0038E0  5005               	movf	(___awdiv@divisor+1)^0,w,c
 12584   0038E2  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
 12585   0038E4  A0D8               	btfss	status,0,c
 12586   0038E6  EF77  F01C         	goto	u4101
 12587   0038EA  EF79  F01C         	goto	u4100
 12588   0038EE                     u4101:
 12589   0038EE  EF7E  F01C         	goto	l4201
 12590   0038F2                     u4100:
 12591   0038F2  5004               	movf	___awdiv@divisor^0,w,c
 12592   0038F4  5E02               	subwf	___awdiv@dividend^0,f,c
 12593   0038F6  5005               	movf	(___awdiv@divisor+1)^0,w,c
 12594   0038F8  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
 12595   0038FA  8008               	bsf	___awdiv@quotient^0,0,c
 12596   0038FC                     l4201:
 12597   0038FC  90D8               	bcf	status,0,c
 12598   0038FE  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
 12599   003900  3204               	rrcf	___awdiv@divisor^0,f,c
 12600   003902  2E06               	decfsz	___awdiv@counter^0,f,c
 12601   003904  EF6B  F01C         	goto	l4193
 12602   003908                     l4205:
 12603   003908  5007               	movf	___awdiv@sign^0,w,c
 12604   00390A  B4D8               	btfsc	status,2,c
 12605   00390C  EF8A  F01C         	goto	u4111
 12606   003910  EF8C  F01C         	goto	u4110
 12607   003914                     u4111:
 12608   003914  EF90  F01C         	goto	l4209
 12609   003918                     u4110:
 12610   003918  6C08               	negf	___awdiv@quotient^0,c
 12611   00391A  1E09               	comf	(___awdiv@quotient+1)^0,f,c
 12612   00391C  B0D8               	btfsc	status,0,c
 12613   00391E  2A09               	incf	(___awdiv@quotient+1)^0,f,c
 12614   003920                     l4209:
 12615   003920  C008  F002         	movff	___awdiv@quotient,?___awdiv
 12616   003924  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
 12617   003928  0012               	return		;funcret
 12618   00392A                     __end_of___awdiv:
 12619                           	callstack 0
 12620                           
 12621 ;; *************** function ___xxtofl *****************
 12622 ;; Defined at:
 12623 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 12624 ;; Parameters:    Size  Location     Type
 12625 ;;  sign            1    wreg     unsigned char 
 12626 ;;  val             4    1[COMRAM] long 
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;  sign            1    9[COMRAM] unsigned char 
 12629 ;;  arg             4   11[COMRAM] unsigned long 
 12630 ;;  exp             1   10[COMRAM] unsigned char 
 12631 ;; Return value:  Size  Location     Type
 12632 ;;                  4    1[COMRAM] unsigned char 
 12633 ;; Registers used:
 12634 ;;		wreg, status,2, status,0
 12635 ;; Tracked objects:
 12636 ;;		On entry : 0/0
 12637 ;;		On exit  : 0/0
 12638 ;;		Unchanged: 0/0
 12639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12641 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12643 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12644 ;;Total ram usage:       14 bytes
 12645 ;; Hardware stack levels used: 1
 12646 ;; Hardware stack levels required when called: 1
 12647 ;; This function calls:
 12648 ;;		Nothing
 12649 ;; This function is called by:
 12650 ;;		_ADC_main
 12651 ;;		_DAC_main
 12652 ;;		_reprak_main
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text51
 12657   0029A2                     __ptext51:
 12658                           	callstack 0
 12659   0029A2                     ___xxtofl:
 12660                           	callstack 28
 12661                           
 12662                           ;incstack = 0
 12663                           ;___xxtofl@sign stored from wreg
 12664   0029A2  6E0A               	movwf	___xxtofl@sign^0,c
 12665   0029A4  500A               	movf	___xxtofl@sign^0,w,c
 12666   0029A6  B4D8               	btfsc	status,2,c
 12667   0029A8  EFD8  F014         	goto	u5481
 12668   0029AC  EFDA  F014         	goto	u5480
 12669   0029B0                     u5481:
 12670   0029B0  EFFC  F014         	goto	l1226
 12671   0029B4                     u5480:
 12672   0029B4  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12673   0029B6  EFE1  F014         	goto	u5490
 12674   0029BA  EFDF  F014         	goto	u5491
 12675   0029BE                     u5491:
 12676   0029BE  EFFC  F014         	goto	l1226
 12677   0029C2                     u5490:
 12678   0029C2  C002  F006         	movff	___xxtofl@val,??___xxtofl
 12679   0029C6  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
 12680   0029CA  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
 12681   0029CE  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
 12682   0029D2  1E06               	comf	??___xxtofl^0,f,c
 12683   0029D4  1E07               	comf	(??___xxtofl+1)^0,f,c
 12684   0029D6  1E08               	comf	(??___xxtofl+2)^0,f,c
 12685   0029D8  1E09               	comf	(??___xxtofl+3)^0,f,c
 12686   0029DA  2A06               	incf	??___xxtofl^0,f,c
 12687   0029DC  0E00               	movlw	0
 12688   0029DE  2207               	addwfc	(??___xxtofl+1)^0,f,c
 12689   0029E0  2208               	addwfc	(??___xxtofl+2)^0,f,c
 12690   0029E2  2209               	addwfc	(??___xxtofl+3)^0,f,c
 12691   0029E4  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
 12692   0029E8  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
 12693   0029EC  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
 12694   0029F0  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
 12695   0029F4  EF04  F015         	goto	l5093
 12696   0029F8                     l1226:
 12697   0029F8  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
 12698   0029FC  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12699   002A00  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12700   002A04  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12701   002A08                     l5093:
 12702   002A08  5002               	movf	___xxtofl@val^0,w,c
 12703   002A0A  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 12704   002A0C  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 12705   002A0E  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 12706   002A10  A4D8               	btfss	status,2,c
 12707   002A12  EF0D  F015         	goto	u5501
 12708   002A16  EF0F  F015         	goto	u5500
 12709   002A1A                     u5501:
 12710   002A1A  EF19  F015         	goto	l5099
 12711   002A1E                     u5500:
 12712   002A1E  0E00               	movlw	0
 12713   002A20  6E02               	movwf	?___xxtofl^0,c
 12714   002A22  0E00               	movlw	0
 12715   002A24  6E03               	movwf	(?___xxtofl+1)^0,c
 12716   002A26  0E00               	movlw	0
 12717   002A28  6E04               	movwf	(?___xxtofl+2)^0,c
 12718   002A2A  0E00               	movlw	0
 12719   002A2C  6E05               	movwf	(?___xxtofl+3)^0,c
 12720   002A2E  EFAA  F015         	goto	l1229
 12721   002A32                     l5099:
 12722   002A32  0E96               	movlw	150
 12723   002A34  6E0B               	movwf	___xxtofl@exp^0,c
 12724   002A36  EF23  F015         	goto	l5103
 12725   002A3A                     l5101:
 12726   002A3A  2A0B               	incf	___xxtofl@exp^0,f,c
 12727   002A3C  90D8               	bcf	status,0,c
 12728   002A3E  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12729   002A40  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12730   002A42  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12731   002A44  320C               	rrcf	___xxtofl@arg^0,f,c
 12732   002A46                     l5103:
 12733   002A46  0E00               	movlw	0
 12734   002A48  140C               	andwf	___xxtofl@arg^0,w,c
 12735   002A4A  6E06               	movwf	??___xxtofl^0,c
 12736   002A4C  0E00               	movlw	0
 12737   002A4E  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12738   002A50  6E07               	movwf	(??___xxtofl+1)^0,c
 12739   002A52  0E00               	movlw	0
 12740   002A54  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12741   002A56  6E08               	movwf	(??___xxtofl+2)^0,c
 12742   002A58  0EFE               	movlw	254
 12743   002A5A  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12744   002A5C  6E09               	movwf	(??___xxtofl+3)^0,c
 12745   002A5E  5006               	movf	??___xxtofl^0,w,c
 12746   002A60  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12747   002A62  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12748   002A64  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12749   002A66  A4D8               	btfss	status,2,c
 12750   002A68  EF38  F015         	goto	u5511
 12751   002A6C  EF3A  F015         	goto	u5510
 12752   002A70                     u5511:
 12753   002A70  EF1D  F015         	goto	l5101
 12754   002A74                     u5510:
 12755   002A74  EF48  F015         	goto	l1233
 12756   002A78                     l5105:
 12757   002A78  2A0B               	incf	___xxtofl@exp^0,f,c
 12758   002A7A  0E01               	movlw	1
 12759   002A7C  260C               	addwf	___xxtofl@arg^0,f,c
 12760   002A7E  0E00               	movlw	0
 12761   002A80  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 12762   002A82  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 12763   002A84  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 12764   002A86  90D8               	bcf	status,0,c
 12765   002A88  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12766   002A8A  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12767   002A8C  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12768   002A8E  320C               	rrcf	___xxtofl@arg^0,f,c
 12769   002A90                     l1233:
 12770   002A90  0E00               	movlw	0
 12771   002A92  140C               	andwf	___xxtofl@arg^0,w,c
 12772   002A94  6E06               	movwf	??___xxtofl^0,c
 12773   002A96  0E00               	movlw	0
 12774   002A98  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12775   002A9A  6E07               	movwf	(??___xxtofl+1)^0,c
 12776   002A9C  0E00               	movlw	0
 12777   002A9E  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12778   002AA0  6E08               	movwf	(??___xxtofl+2)^0,c
 12779   002AA2  0EFF               	movlw	255
 12780   002AA4  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12781   002AA6  6E09               	movwf	(??___xxtofl+3)^0,c
 12782   002AA8  5006               	movf	??___xxtofl^0,w,c
 12783   002AAA  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12784   002AAC  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12785   002AAE  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12786   002AB0  A4D8               	btfss	status,2,c
 12787   002AB2  EF5D  F015         	goto	u5521
 12788   002AB6  EF5F  F015         	goto	u5520
 12789   002ABA                     u5521:
 12790   002ABA  EF3C  F015         	goto	l5105
 12791   002ABE                     u5520:
 12792   002ABE  EF67  F015         	goto	l5113
 12793   002AC2                     l5111:
 12794   002AC2  060B               	decf	___xxtofl@exp^0,f,c
 12795   002AC4  90D8               	bcf	status,0,c
 12796   002AC6  360C               	rlcf	___xxtofl@arg^0,f,c
 12797   002AC8  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 12798   002ACA  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 12799   002ACC  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 12800   002ACE                     l5113:
 12801   002ACE  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 12802   002AD0  EF6C  F015         	goto	u5531
 12803   002AD4  EF6E  F015         	goto	u5530
 12804   002AD8                     u5531:
 12805   002AD8  EF76  F015         	goto	l1240
 12806   002ADC                     u5530:
 12807   002ADC  0E02               	movlw	2
 12808   002ADE  600B               	cpfslt	___xxtofl@exp^0,c
 12809   002AE0  EF74  F015         	goto	u5541
 12810   002AE4  EF76  F015         	goto	u5540
 12811   002AE8                     u5541:
 12812   002AE8  EF61  F015         	goto	l5111
 12813   002AEC                     u5540:
 12814   002AEC                     l1240:
 12815   002AEC  B00B               	btfsc	___xxtofl@exp^0,0,c
 12816   002AEE  EF7B  F015         	goto	u5551
 12817   002AF2  EF7D  F015         	goto	u5550
 12818   002AF6                     u5551:
 12819   002AF6  EF7E  F015         	goto	l5119
 12820   002AFA                     u5550:
 12821   002AFA  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 12822   002AFC                     l5119:
 12823   002AFC  90D8               	bcf	status,0,c
 12824   002AFE  320B               	rrcf	___xxtofl@exp^0,f,c
 12825   002B00  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
 12826   002B04  6A07               	clrf	(??___xxtofl+1)^0,c
 12827   002B06  6A08               	clrf	(??___xxtofl+2)^0,c
 12828   002B08  6A09               	clrf	(??___xxtofl+3)^0,c
 12829   002B0A  C006  F009         	movff	??___xxtofl,??___xxtofl+3
 12830   002B0E  6A08               	clrf	(??___xxtofl+2)^0,c
 12831   002B10  6A07               	clrf	(??___xxtofl+1)^0,c
 12832   002B12  6A06               	clrf	??___xxtofl^0,c
 12833   002B14  5006               	movf	??___xxtofl^0,w,c
 12834   002B16  120C               	iorwf	___xxtofl@arg^0,f,c
 12835   002B18  5007               	movf	(??___xxtofl+1)^0,w,c
 12836   002B1A  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 12837   002B1C  5008               	movf	(??___xxtofl+2)^0,w,c
 12838   002B1E  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 12839   002B20  5009               	movf	(??___xxtofl+3)^0,w,c
 12840   002B22  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 12841   002B24  500A               	movf	___xxtofl@sign^0,w,c
 12842   002B26  B4D8               	btfsc	status,2,c
 12843   002B28  EF98  F015         	goto	u5561
 12844   002B2C  EF9A  F015         	goto	u5560
 12845   002B30                     u5561:
 12846   002B30  EFA2  F015         	goto	l5129
 12847   002B34                     u5560:
 12848   002B34  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12849   002B36  EFA1  F015         	goto	u5570
 12850   002B3A  EF9F  F015         	goto	u5571
 12851   002B3E                     u5571:
 12852   002B3E  EFA2  F015         	goto	l5129
 12853   002B42                     u5570:
 12854   002B42  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 12855   002B44                     l5129:
 12856   002B44  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
 12857   002B48  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
 12858   002B4C  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
 12859   002B50  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
 12860   002B54                     l1229:
 12861   002B54  0012               	return		;funcret
 12862   002B56                     __end_of___xxtofl:
 12863                           	callstack 0
 12864                           
 12865 ;; *************** function _LCD_ShowString *****************
 12866 ;; Defined at:
 12867 ;;		line 58 in file "lcd.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;  lineNum         1    wreg     unsigned char 
 12870 ;;  textData        2    2[COMRAM] PTR unsigned char 
 12871 ;;		 -> STR_35(18), STR_34(18), reprak_main@txt(17), STR_32(19), 
 12872 ;;		 -> STR_31(19), PWM_main@txt(17), STR_28(20), STR_27(18), 
 12873 ;;		 -> STR_26(18), STR_25(18), STR_23(19), GAME_main@txt_g(17), 
 12874 ;;		 -> STR_21(18), STR_20(18), STR_18(17), STR_17(17), 
 12875 ;;		 -> ADC_main@txt_pot2(17), ADC_main@txt_pot1(17), STR_14(21), STR_13(25), 
 12876 ;;		 -> STR_12(20), STR_11(19), STR_10(20), STR_9(19), 
 12877 ;;		 -> STR_8(19), STR_7(19), STR_6(19), STR_5(19), 
 12878 ;;		 -> STR_4(20), STR_3(20), STR_2(19), STR_1(19), 
 12879 ;; Auto vars:     Size  Location     Type
 12880 ;;  lineNum         1    6[COMRAM] unsigned char 
 12881 ;;  i               1    7[COMRAM] unsigned char 
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12895 ;;Total ram usage:        6 bytes
 12896 ;; Hardware stack levels used: 1
 12897 ;; Hardware stack levels required when called: 2
 12898 ;; This function calls:
 12899 ;;		_LCD_Send
 12900 ;; This function is called by:
 12901 ;;		_main
 12902 ;;		_ADC_main
 12903 ;;		_DAC_main
 12904 ;;		_GAME_main
 12905 ;;		_GPIO_main
 12906 ;;		_PWM_main
 12907 ;;		_reprak_main
 12908 ;;		_UART_main
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text52
 12913   0039E4                     __ptext52:
 12914                           	callstack 0
 12915   0039E4                     _LCD_ShowString:
 12916                           	callstack 27
 12917                           
 12918                           ;incstack = 0
 12919                           ;LCD_ShowString@lineNum stored from wreg
 12920   0039E4  6E07               	movwf	LCD_ShowString@lineNum^0,c
 12921   0039E6                     
 12922                           ;lcd.c: 63:     SSP2CON2bits.SEN = 1;
 12923   0039E6  806B               	bsf	107,0,c	;volatile
 12924   0039E8                     l367:
 12925   0039E8  B06B               	btfsc	107,0,c	;volatile
 12926   0039EA  EFF9  F01C         	goto	u5221
 12927   0039EE  EFFB  F01C         	goto	u5220
 12928   0039F2                     u5221:
 12929   0039F2  EFF4  F01C         	goto	l367
 12930   0039F6                     u5220:
 12931   0039F6                     
 12932                           ;lcd.c: 65:     SSP2IF = 0;
 12933   0039F6  9EA4               	bcf	4004,7,c	;volatile
 12934   0039F8                     
 12935                           ;lcd.c: 67:     LCD_Send(0x7c);
 12936   0039F8  0E7C               	movlw	124
 12937   0039FA  ECFF  F021         	call	_LCD_Send
 12938                           
 12939                           ;lcd.c: 69:     LCD_Send(0x80);
 12940   0039FE  0E80               	movlw	128
 12941   003A00  ECFF  F021         	call	_LCD_Send
 12942   003A04                     
 12943                           ;lcd.c: 71:     if(lineNum == 1){
 12944   003A04  0407               	decf	LCD_ShowString@lineNum^0,w,c
 12945   003A06  A4D8               	btfss	status,2,c
 12946   003A08  EF08  F01D         	goto	u5231
 12947   003A0C  EF0A  F01D         	goto	u5230
 12948   003A10                     u5231:
 12949   003A10  EF0F  F01D         	goto	l4829
 12950   003A14                     u5230:
 12951   003A14                     
 12952                           ;lcd.c: 72:         LCD_Send(0x80);
 12953   003A14  0E80               	movlw	128
 12954   003A16  ECFF  F021         	call	_LCD_Send
 12955                           
 12956                           ;lcd.c: 73:     }
 12957   003A1A  EF1B  F01D         	goto	l371
 12958   003A1E                     l4829:
 12959   003A1E  0E02               	movlw	2
 12960   003A20  1807               	xorwf	LCD_ShowString@lineNum^0,w,c
 12961   003A22  A4D8               	btfss	status,2,c
 12962   003A24  EF16  F01D         	goto	u5241
 12963   003A28  EF18  F01D         	goto	u5240
 12964   003A2C                     u5241:
 12965   003A2C  EF1B  F01D         	goto	l371
 12966   003A30                     u5240:
 12967   003A30                     
 12968                           ;lcd.c: 75:         LCD_Send(0xC0);
 12969   003A30  0EC0               	movlw	192
 12970   003A32  ECFF  F021         	call	_LCD_Send
 12971   003A36                     l371:
 12972                           
 12973                           ;lcd.c: 78:     LCD_Send(0x40);
 12974   003A36  0E40               	movlw	64
 12975   003A38  ECFF  F021         	call	_LCD_Send
 12976   003A3C                     
 12977                           ;lcd.c: 80:     for (i = 0; i<16; i++){
 12978   003A3C  0E00               	movlw	0
 12979   003A3E  6E08               	movwf	LCD_ShowString@i^0,c
 12980   003A40                     l4839:
 12981                           
 12982                           ;lcd.c: 81:         LCD_Send(textData[i]);
 12983   003A40  5008               	movf	LCD_ShowString@i^0,w,c
 12984   003A42  2403               	addwf	LCD_ShowString@textData^0,w,c
 12985   003A44  6E05               	movwf	??_LCD_ShowString^0,c
 12986   003A46  0E00               	movlw	0
 12987   003A48  2004               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 12988   003A4A  6E06               	movwf	(??_LCD_ShowString+1)^0,c
 12989   003A4C  C005  FFF6         	movff	??_LCD_ShowString,tblptrl
 12990   003A50  C006  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 12991   003A54  0E00               	movlw	low (__mediumconst shr (0+16))
 12992   003A56  6EF8               	movwf	tblptru,c
 12993   003A58  0E0F               	movlw	(high __ramtop+-1)
 12994   003A5A  64F7               	cpfsgt	tblptrh,c
 12995   003A5C  D003               	bra	u5257
 12996   003A5E  0008               	tblrd		*
 12997   003A60  50F5               	movf	tablat,w,c
 12998   003A62  D005               	bra	u5250
 12999   003A64                     u5257:
 13000   003A64  CFF6 FFE1          	movff	tblptrl,fsr1l
 13001   003A68  CFF7 FFE2          	movff	tblptrh,fsr1h
 13002   003A6C  50E7               	movf	indf1,w,c
 13003   003A6E                     u5250:
 13004   003A6E  ECFF  F021         	call	_LCD_Send
 13005   003A72                     
 13006                           ;lcd.c: 82:     }
 13007   003A72  2A08               	incf	LCD_ShowString@i^0,f,c
 13008   003A74  0E0F               	movlw	15
 13009   003A76  6408               	cpfsgt	LCD_ShowString@i^0,c
 13010   003A78  EF40  F01D         	goto	u5261
 13011   003A7C  EF42  F01D         	goto	u5260
 13012   003A80                     u5261:
 13013   003A80  EF20  F01D         	goto	l4839
 13014   003A84                     u5260:
 13015   003A84                     
 13016                           ;lcd.c: 84:     SSP2CON2bits.PEN = 1;
 13017   003A84  846B               	bsf	107,2,c	;volatile
 13018   003A86                     l375:
 13019   003A86  B46B               	btfsc	107,2,c	;volatile
 13020   003A88  EF48  F01D         	goto	u5271
 13021   003A8C  EF4A  F01D         	goto	u5270
 13022   003A90                     u5271:
 13023   003A90  EF43  F01D         	goto	l375
 13024   003A94                     u5270:
 13025   003A94  0012               	return		;funcret
 13026   003A96                     __end_of_LCD_ShowString:
 13027                           	callstack 0
 13028                           
 13029 ;; *************** function _LCD_Send *****************
 13030 ;; Defined at:
 13031 ;;		line 88 in file "lcd.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;  data            1    wreg     unsigned char 
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;  data            1    1[COMRAM] unsigned char 
 13036 ;; Return value:  Size  Location     Type
 13037 ;;                  1    wreg      void 
 13038 ;; Registers used:
 13039 ;;		wreg
 13040 ;; Tracked objects:
 13041 ;;		On entry : 0/0
 13042 ;;		On exit  : 0/0
 13043 ;;		Unchanged: 0/0
 13044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13049 ;;Total ram usage:        1 bytes
 13050 ;; Hardware stack levels used: 1
 13051 ;; Hardware stack levels required when called: 1
 13052 ;; This function calls:
 13053 ;;		Nothing
 13054 ;; This function is called by:
 13055 ;;		_LCD_Init
 13056 ;;		_LCD_ShowString
 13057 ;;		_LCD_Clear
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061                           	psect	text53
 13062   0043FE                     __ptext53:
 13063                           	callstack 0
 13064   0043FE                     _LCD_Send:
 13065                           	callstack 27
 13066                           
 13067                           ;incstack = 0
 13068                           ;LCD_Send@data stored from wreg
 13069   0043FE  6E02               	movwf	LCD_Send@data^0,c
 13070   004400                     
 13071                           ;lcd.c: 90:     SSP2BUF = data;
 13072   004400  C002  FF6F         	movff	LCD_Send@data,3951	;volatile
 13073   004404                     l381:
 13074   004404  B06D               	btfsc	109,0,c	;volatile
 13075   004406  EF07  F022         	goto	u5051
 13076   00440A  EF09  F022         	goto	u5050
 13077   00440E                     u5051:
 13078   00440E  EF02  F022         	goto	l381
 13079   004412                     u5050:
 13080   004412                     l384:
 13081   004412  AEA4               	btfss	4004,7,c	;volatile
 13082   004414  EF0E  F022         	goto	u5061
 13083   004418  EF10  F022         	goto	u5060
 13084   00441C                     u5061:
 13085   00441C  EF09  F022         	goto	l384
 13086   004420                     u5060:
 13087   004420                     
 13088                           ;lcd.c: 93:     SSP2IF = 0;
 13089   004420  9EA4               	bcf	4004,7,c	;volatile
 13090   004422  0012               	return		;funcret
 13091   004424                     __end_of_LCD_Send:
 13092                           	callstack 0
 13093                           
 13094 ;; *************** function _ADC_Init *****************
 13095 ;; Defined at:
 13096 ;;		line 60 in file "ADC.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;Total ram usage:        0 bytes
 13115 ;; Hardware stack levels used: 1
 13116 ;; Hardware stack levels required when called: 1
 13117 ;; This function calls:
 13118 ;;		Nothing
 13119 ;; This function is called by:
 13120 ;;		_ADC_main
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text54
 13125   004354                     __ptext54:
 13126                           	callstack 0
 13127   004354                     _ADC_Init:
 13128                           	callstack 28
 13129   004354                     
 13130                           ;ADC.c: 62:     ANSELAbits.ANSA5 = 1;
 13131   004354  010F               	movlb	15	; () banked
 13132   004356  8B38               	bsf	56,5,b	;volatile
 13133                           
 13134                           ;ADC.c: 63:     ANSELEbits.ANSE0 = 1;
 13135   004358  813C               	bsf	60,0,b	;volatile
 13136                           
 13137                           ;ADC.c: 65:     TRISAbits.TRISA5 = 1;
 13138   00435A  8A92               	bsf	146,5,c	;volatile
 13139                           
 13140                           ;ADC.c: 66:     TRISEbits.TRISE0 = 1;
 13141   00435C  8096               	bsf	150,0,c	;volatile
 13142   00435E                     
 13143                           ; BSR set to: 15
 13144                           ;ADC.c: 68:     ADCON2bits.ADCS = 0b010;
 13145   00435E  50C0               	movf	192,w,c	;volatile
 13146   004360  0BF8               	andlw	-8
 13147   004362  0902               	iorlw	2
 13148   004364  6EC0               	movwf	192,c	;volatile
 13149                           
 13150                           ;ADC.c: 69:     ADCON2bits.ACQT = 0b110;
 13151   004366  50C0               	movf	192,w,c	;volatile
 13152   004368  0BC7               	andlw	-57
 13153   00436A  0930               	iorlw	48
 13154   00436C  6EC0               	movwf	192,c	;volatile
 13155   00436E                     
 13156                           ; BSR set to: 15
 13157                           ;ADC.c: 70:     ADCON2bits.ADFM = 1;
 13158   00436E  8EC0               	bsf	192,7,c	;volatile
 13159                           
 13160                           ;ADC.c: 71:     ADCON1bits.PVCFG = 0b00;
 13161   004370  0EF3               	movlw	-13
 13162   004372  16C1               	andwf	193,f,c	;volatile
 13163                           
 13164                           ;ADC.c: 72:     ADCON1bits.NVCFG = 0b00;
 13165   004374  0EFC               	movlw	-4
 13166   004376  16C1               	andwf	193,f,c	;volatile
 13167                           
 13168                           ;ADC.c: 73:     ADCON0bits.CHS = 4;
 13169   004378  50C2               	movf	194,w,c	;volatile
 13170   00437A  0B83               	andlw	-125
 13171   00437C  0910               	iorlw	16
 13172   00437E  6EC2               	movwf	194,c	;volatile
 13173   004380                     
 13174                           ; BSR set to: 15
 13175                           ;ADC.c: 74:     ADON = 1;
 13176   004380  80C2               	bsf	4034,0,c	;volatile
 13177   004382                     
 13178                           ; BSR set to: 15
 13179   004382  0012               	return		;funcret
 13180   004384                     __end_of_ADC_Init:
 13181                           	callstack 0
 13182                           
 13183 ;; *************** function _ISR_HANDLER *****************
 13184 ;; Defined at:
 13185 ;;		line 17 in file "ISR.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;		None
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;		None
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1    wreg      void 
 13192 ;; Registers used:
 13193 ;;		wreg, status,2, status,0
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/0
 13196 ;;		On exit  : 0/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13203 ;;Total ram usage:        1 bytes
 13204 ;; Hardware stack levels used: 1
 13205 ;; This function calls:
 13206 ;;		Nothing
 13207 ;; This function is called by:
 13208 ;;		Interrupt level 2
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212                           	psect	intcode
 13213   000008                     __pintcode:
 13214                           	callstack 0
 13215   000008                     _ISR_HANDLER:
 13216                           	callstack 21
 13217                           
 13218                           ; BSR set to: 15
 13219                           ;incstack = 0
 13220   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13221   00000A                     
 13222                           ;ISR.c: 20:     if(TMR2IF && TMR2IE){
 13223   00000A  A29E               	btfss	3998,1,c	;volatile
 13224   00000C  EF0A  F000         	goto	i2u613_41
 13225   000010  EF0C  F000         	goto	i2u613_40
 13226   000014                     i2u613_41:
 13227   000014  EFA1  F000         	goto	i2l5687
 13228   000018                     i2u613_40:
 13229   000018  A29D               	btfss	3997,1,c	;volatile
 13230   00001A  EF11  F000         	goto	i2u614_41
 13231   00001E  EF13  F000         	goto	i2u614_40
 13232   000022                     i2u614_41:
 13233   000022  EFA1  F000         	goto	i2l5687
 13234   000026                     i2u614_40:
 13235   000026                     
 13236                           ;ISR.c: 22:         buttons.btn1_acc <<= 1;
 13237   000026  0100               	movlb	0	; () banked
 13238   000028  90D8               	bcf	status,0,c
 13239   00002A  37F0               	rlcf	_buttons& (0+255),f,b
 13240                           
 13241                           ;volatile
 13242                           ;ISR.c: 23:         buttons.btn1_acc |= PORTCbits.RC0;
 13243   00002C  B082               	btfsc	130,0,c	;volatile
 13244   00002E  EF1B  F000         	goto	i2u615_41
 13245   000032  EF1E  F000         	goto	i2u615_40
 13246   000036                     i2u615_41:
 13247   000036  0E01               	movlw	1
 13248   000038  EF1F  F000         	goto	i2u615_46
 13249   00003C                     i2u615_40:
 13250   00003C  0E00               	movlw	0
 13251   00003E                     i2u615_46:
 13252   00003E  13F0               	iorwf	_buttons& (0+255),f,b	;volatile
 13253                           
 13254                           ;ISR.c: 25:         buttons.btn2_acc <<= 1;
 13255   000040  90D8               	bcf	status,0,c
 13256   000042  37F1               	rlcf	(_buttons+1)& (0+255),f,b
 13257                           
 13258                           ;volatile
 13259                           ;ISR.c: 26:         buttons.btn2_acc |= PORTAbits.RA4;
 13260   000044  B880               	btfsc	128,4,c	;volatile
 13261   000046  EF27  F000         	goto	i2u616_41
 13262   00004A  EF2A  F000         	goto	i2u616_40
 13263   00004E                     i2u616_41:
 13264   00004E  0E01               	movlw	1
 13265   000050  EF2B  F000         	goto	i2u616_46
 13266   000054                     i2u616_40:
 13267   000054  0E00               	movlw	0
 13268   000056                     i2u616_46:
 13269   000056  13F1               	iorwf	(_buttons+1)& (0+255),f,b	;volatile
 13270                           
 13271                           ;ISR.c: 28:         buttons.btn3_acc <<= 1;
 13272   000058  90D8               	bcf	status,0,c
 13273   00005A  37F2               	rlcf	(_buttons+2)& (0+255),f,b
 13274                           
 13275                           ;volatile
 13276                           ;ISR.c: 29:         buttons.btn3_acc |= PORTAbits.RA3;
 13277   00005C  B680               	btfsc	128,3,c	;volatile
 13278   00005E  EF33  F000         	goto	i2u617_41
 13279   000062  EF36  F000         	goto	i2u617_40
 13280   000066                     i2u617_41:
 13281   000066  0E01               	movlw	1
 13282   000068  EF37  F000         	goto	i2u617_46
 13283   00006C                     i2u617_40:
 13284   00006C  0E00               	movlw	0
 13285   00006E                     i2u617_46:
 13286   00006E  13F2               	iorwf	(_buttons+2)& (0+255),f,b	;volatile
 13287                           
 13288                           ;ISR.c: 31:         buttons.btn4_acc <<= 1;
 13289   000070  90D8               	bcf	status,0,c
 13290   000072  37F3               	rlcf	(_buttons+3)& (0+255),f,b
 13291                           
 13292                           ;volatile
 13293                           ;ISR.c: 32:         buttons.btn4_acc |= PORTAbits.RA2;
 13294   000074  B480               	btfsc	128,2,c	;volatile
 13295   000076  EF3F  F000         	goto	i2u618_41
 13296   00007A  EF42  F000         	goto	i2u618_40
 13297   00007E                     i2u618_41:
 13298   00007E  0E01               	movlw	1
 13299   000080  EF43  F000         	goto	i2u618_46
 13300   000084                     i2u618_40:
 13301   000084  0E00               	movlw	0
 13302   000086                     i2u618_46:
 13303   000086  13F3               	iorwf	(_buttons+3)& (0+255),f,b	;volatile
 13304                           
 13305                           ;ISR.c: 34:         if(buttons.btn1_acc == 0b01111111){
 13306   000088  0E7F               	movlw	127
 13307   00008A  19F0               	xorwf	_buttons& (0+255),w,b	;volatile
 13308   00008C  A4D8               	btfss	status,2,c
 13309   00008E  EF4B  F000         	goto	i2u619_41
 13310   000092  EF4D  F000         	goto	i2u619_40
 13311   000096                     i2u619_41:
 13312   000096  EF51  F000         	goto	i2l5657
 13313   00009A                     i2u619_40:
 13314   00009A                     
 13315                           ; BSR set to: 0
 13316                           ;ISR.c: 35:             buttons.btn1_state = 1;
 13317   00009A  0E01               	movlw	1
 13318   00009C  6FF4               	movwf	(_buttons+4)& (0+255),b	;volatile
 13319                           
 13320                           ;ISR.c: 36:         }
 13321   00009E  EF5B  F000         	goto	i2l5661
 13322   0000A2                     i2l5657:
 13323                           
 13324                           ; BSR set to: 0
 13325   0000A2  51F0               	movf	_buttons& (0+255),w,b	;volatile
 13326   0000A4  B4D8               	btfsc	status,2,c
 13327   0000A6  EF57  F000         	goto	i2u620_41
 13328   0000AA  EF59  F000         	goto	i2u620_40
 13329   0000AE                     i2u620_41:
 13330   0000AE  EF5B  F000         	goto	i2l5661
 13331   0000B2                     i2u620_40:
 13332   0000B2                     
 13333                           ; BSR set to: 0
 13334                           ;ISR.c: 38:             buttons.btn1_state = 0;
 13335   0000B2  0E00               	movlw	0
 13336   0000B4  6FF4               	movwf	(_buttons+4)& (0+255),b	;volatile
 13337   0000B6                     i2l5661:
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;ISR.c: 40:         if(buttons.btn2_acc == 0b01111111){
 13341   0000B6  0E7F               	movlw	127
 13342   0000B8  19F1               	xorwf	(_buttons+1)& (0+255),w,b	;volatile
 13343   0000BA  A4D8               	btfss	status,2,c
 13344   0000BC  EF62  F000         	goto	i2u621_41
 13345   0000C0  EF64  F000         	goto	i2u621_40
 13346   0000C4                     i2u621_41:
 13347   0000C4  EF68  F000         	goto	i2l5665
 13348   0000C8                     i2u621_40:
 13349   0000C8                     
 13350                           ; BSR set to: 0
 13351                           ;ISR.c: 41:             buttons.btn2_state = 1;
 13352   0000C8  0E01               	movlw	1
 13353   0000CA  6FF5               	movwf	(_buttons+5)& (0+255),b	;volatile
 13354                           
 13355                           ;ISR.c: 42:         }
 13356   0000CC  EF72  F000         	goto	i2l5669
 13357   0000D0                     i2l5665:
 13358                           
 13359                           ; BSR set to: 0
 13360   0000D0  51F1               	movf	(_buttons+1)& (0+255),w,b	;volatile
 13361   0000D2  B4D8               	btfsc	status,2,c
 13362   0000D4  EF6E  F000         	goto	i2u622_41
 13363   0000D8  EF70  F000         	goto	i2u622_40
 13364   0000DC                     i2u622_41:
 13365   0000DC  EF72  F000         	goto	i2l5669
 13366   0000E0                     i2u622_40:
 13367   0000E0                     
 13368                           ; BSR set to: 0
 13369                           ;ISR.c: 44:             buttons.btn2_state = 0;
 13370   0000E0  0E00               	movlw	0
 13371   0000E2  6FF5               	movwf	(_buttons+5)& (0+255),b	;volatile
 13372   0000E4                     i2l5669:
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;ISR.c: 46:         if(buttons.btn3_acc == 0b01111111){
 13376   0000E4  0E7F               	movlw	127
 13377   0000E6  19F2               	xorwf	(_buttons+2)& (0+255),w,b	;volatile
 13378   0000E8  A4D8               	btfss	status,2,c
 13379   0000EA  EF79  F000         	goto	i2u623_41
 13380   0000EE  EF7B  F000         	goto	i2u623_40
 13381   0000F2                     i2u623_41:
 13382   0000F2  EF7F  F000         	goto	i2l5673
 13383   0000F6                     i2u623_40:
 13384   0000F6                     
 13385                           ; BSR set to: 0
 13386                           ;ISR.c: 47:             buttons.btn3_state = 1;
 13387   0000F6  0E01               	movlw	1
 13388   0000F8  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
 13389                           
 13390                           ;ISR.c: 48:         }
 13391   0000FA  EF89  F000         	goto	i2l5677
 13392   0000FE                     i2l5673:
 13393                           
 13394                           ; BSR set to: 0
 13395   0000FE  51F2               	movf	(_buttons+2)& (0+255),w,b	;volatile
 13396   000100  B4D8               	btfsc	status,2,c
 13397   000102  EF85  F000         	goto	i2u624_41
 13398   000106  EF87  F000         	goto	i2u624_40
 13399   00010A                     i2u624_41:
 13400   00010A  EF89  F000         	goto	i2l5677
 13401   00010E                     i2u624_40:
 13402   00010E                     
 13403                           ; BSR set to: 0
 13404                           ;ISR.c: 50:             buttons.btn3_state = 0;
 13405   00010E  0E00               	movlw	0
 13406   000110  6FF6               	movwf	(_buttons+6)& (0+255),b	;volatile
 13407   000112                     i2l5677:
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;ISR.c: 52:         if(buttons.btn4_acc == 0b01111111){
 13411   000112  0E7F               	movlw	127
 13412   000114  19F3               	xorwf	(_buttons+3)& (0+255),w,b	;volatile
 13413   000116  A4D8               	btfss	status,2,c
 13414   000118  EF90  F000         	goto	i2u625_41
 13415   00011C  EF92  F000         	goto	i2u625_40
 13416   000120                     i2u625_41:
 13417   000120  EF96  F000         	goto	i2l5681
 13418   000124                     i2u625_40:
 13419   000124                     
 13420                           ; BSR set to: 0
 13421                           ;ISR.c: 53:            buttons.btn4_state = 1;
 13422   000124  0E01               	movlw	1
 13423   000126  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
 13424                           
 13425                           ;ISR.c: 54:         }
 13426   000128  EFA0  F000         	goto	i2l5685
 13427   00012C                     i2l5681:
 13428                           
 13429                           ; BSR set to: 0
 13430   00012C  51F3               	movf	(_buttons+3)& (0+255),w,b	;volatile
 13431   00012E  B4D8               	btfsc	status,2,c
 13432   000130  EF9C  F000         	goto	i2u626_41
 13433   000134  EF9E  F000         	goto	i2u626_40
 13434   000138                     i2u626_41:
 13435   000138  EFA0  F000         	goto	i2l5685
 13436   00013C                     i2u626_40:
 13437   00013C                     
 13438                           ; BSR set to: 0
 13439                           ;ISR.c: 56:             buttons.btn4_state = 0;
 13440   00013C  0E00               	movlw	0
 13441   00013E  6FF7               	movwf	(_buttons+7)& (0+255),b	;volatile
 13442   000140                     i2l5685:
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;ISR.c: 59:         TMR2IF = 0;
 13446   000140  929E               	bcf	3998,1,c	;volatile
 13447   000142                     i2l5687:
 13448                           
 13449                           ;ISR.c: 63:     static int t_c2 = 0;;ISR.c: 66:     if(TMR3IE && TMR3IF){
 13450   000142  A2A0               	btfss	4000,1,c	;volatile
 13451   000144  EFA6  F000         	goto	i2u627_41
 13452   000148  EFA8  F000         	goto	i2u627_40
 13453   00014C                     i2u627_41:
 13454   00014C  EFB6  F000         	goto	i2l5695
 13455   000150                     i2u627_40:
 13456   000150  A2A1               	btfss	4001,1,c	;volatile
 13457   000152  EFAD  F000         	goto	i2u628_41
 13458   000156  EFAF  F000         	goto	i2u628_40
 13459   00015A                     i2u628_41:
 13460   00015A  EFB6  F000         	goto	i2l5695
 13461   00015E                     i2u628_40:
 13462   00015E                     
 13463                           ;ISR.c: 67:         LATBbits.LATB5 ^= 1;
 13464   00015E  7A8A               	btg	138,5,c	;volatile
 13465                           
 13466                           ;ISR.c: 68:         TMR3 = 0xFFFF - reprak.freq;
 13467   000160  0100               	movlb	0	; () banked
 13468   000162  1DE7               	comf	_reprak& (0+255),w,b	;volatile
 13469   000164  6EB2               	movwf	178,c	;volatile
 13470   000166  1DE8               	comf	(_reprak+1)& (0+255),w,b	;volatile
 13471   000168  6EB3               	movwf	179,c	;volatile
 13472   00016A                     
 13473                           ; BSR set to: 0
 13474                           ;ISR.c: 69:         TMR3IF = 0;
 13475   00016A  92A1               	bcf	4001,1,c	;volatile
 13476   00016C                     i2l5695:
 13477                           
 13478                           ;ISR.c: 72:     if(TMR4IF && TMR4IE){
 13479   00016C  A07E               	btfss	3966,0,c	;volatile
 13480   00016E  EFBB  F000         	goto	i2u629_41
 13481   000172  EFBD  F000         	goto	i2u629_40
 13482   000176                     i2u629_41:
 13483   000176  EFF9  F000         	goto	i2l331
 13484   00017A                     i2u629_40:
 13485   00017A  A07D               	btfss	3965,0,c	;volatile
 13486   00017C  EFC2  F000         	goto	i2u630_41
 13487   000180  EFC4  F000         	goto	i2u630_40
 13488   000184                     i2u630_41:
 13489   000184  EFF9  F000         	goto	i2l331
 13490   000188                     i2u630_40:
 13491   000188                     
 13492                           ;ISR.c: 73:         if(t_c2 > reprak.full_note){
 13493   000188  505C               	movf	ISR_HANDLER@t_c2^0,w,c
 13494   00018A  0100               	movlb	0	; () banked
 13495   00018C  5DE9               	subwf	(_reprak+2)& (0+255),w,b	;volatile
 13496   00018E  51EA               	movf	(_reprak+3)& (0+255),w,b	;volatile
 13497   000190  0A80               	xorlw	128
 13498   000192  6E01               	movwf	??_ISR_HANDLER^0,c
 13499   000194  505D               	movf	(ISR_HANDLER@t_c2+1)^0,w,c
 13500   000196  0A80               	xorlw	128
 13501   000198  5801               	subwfb	??_ISR_HANDLER^0,w,c
 13502   00019A  B0D8               	btfsc	status,0,c
 13503   00019C  EFD2  F000         	goto	i2u631_41
 13504   0001A0  EFD4  F000         	goto	i2u631_40
 13505   0001A4                     i2u631_41:
 13506   0001A4  EFF3  F000         	goto	i2l5705
 13507   0001A8                     i2u631_40:
 13508   0001A8                     
 13509                           ; BSR set to: 0
 13510                           ;ISR.c: 74:             reprak.counter = reprak.counter + 2;
 13511   0001A8  0E02               	movlw	2
 13512   0001AA  25EC               	addwf	(_reprak+5)& (0+255),w,b	;volatile
 13513   0001AC  6FEC               	movwf	(_reprak+5)& (0+255),b	;volatile
 13514   0001AE  0E00               	movlw	0
 13515   0001B0  21ED               	addwfc	(_reprak+6)& (0+255),w,b	;volatile
 13516   0001B2  6FED               	movwf	(_reprak+6)& (0+255),b	;volatile
 13517                           
 13518                           ;ISR.c: 75:             if(reprak.counter > reprak.array_len){
 13519   0001B4  51EC               	movf	(_reprak+5)& (0+255),w,b	;volatile
 13520   0001B6  5DEE               	subwf	(_reprak+7)& (0+255),w,b	;volatile
 13521   0001B8  51EF               	movf	(_reprak+8)& (0+255),w,b	;volatile
 13522   0001BA  0A80               	xorlw	128
 13523   0001BC  6E01               	movwf	??_ISR_HANDLER^0,c
 13524   0001BE  51ED               	movf	(_reprak+6)& (0+255),w,b	;volatile
 13525   0001C0  0A80               	xorlw	128
 13526   0001C2  5801               	subwfb	??_ISR_HANDLER^0,w,c
 13527   0001C4  B0D8               	btfsc	status,0,c
 13528   0001C6  EFE7  F000         	goto	i2u632_41
 13529   0001CA  EFE9  F000         	goto	i2u632_40
 13530   0001CE                     i2u632_41:
 13531   0001CE  EFED  F000         	goto	i2l330
 13532   0001D2                     i2u632_40:
 13533   0001D2                     
 13534                           ; BSR set to: 0
 13535                           ;ISR.c: 76:                 reprak.counter = 0;
 13536   0001D2  0E00               	movlw	0
 13537   0001D4  6FED               	movwf	(_reprak+6)& (0+255),b	;volatile
 13538   0001D6  0E00               	movlw	0
 13539   0001D8  6FEC               	movwf	(_reprak+5)& (0+255),b	;volatile
 13540   0001DA                     i2l330:
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;ISR.c: 78:             t_c2 = 0;
 13544   0001DA  0E00               	movlw	0
 13545   0001DC  6E5D               	movwf	(ISR_HANDLER@t_c2+1)^0,c
 13546   0001DE  0E00               	movlw	0
 13547   0001E0  6E5C               	movwf	ISR_HANDLER@t_c2^0,c
 13548                           
 13549                           ;ISR.c: 79:             reprak.flag = 1;
 13550   0001E2  0E01               	movlw	1
 13551   0001E4  6FEB               	movwf	(_reprak+4)& (0+255),b	;volatile
 13552   0001E6                     i2l5705:
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;ISR.c: 81:         t_c2++;
 13556   0001E6  4A5C               	infsnz	ISR_HANDLER@t_c2^0,f,c
 13557   0001E8  2A5D               	incf	(ISR_HANDLER@t_c2+1)^0,f,c
 13558   0001EA                     
 13559                           ; BSR set to: 0
 13560                           ;ISR.c: 82:         TMR4 = 0;
 13561   0001EA  0E00               	movlw	0
 13562   0001EC  010F               	movlb	15	; () banked
 13563   0001EE  6F53               	movwf	83,b	;volatile
 13564   0001F0                     
 13565                           ; BSR set to: 15
 13566                           ;ISR.c: 83:         TMR4IF = 0;
 13567   0001F0  907E               	bcf	3966,0,c	;volatile
 13568   0001F2                     i2l331:
 13569   0001F2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13570   0001F4  0011               	retfie		f
 13571   0001F6                     __end_of_ISR_HANDLER:
 13572                           	callstack 0
 13573                           
 13574                           	psect	rparam
 13575   000000                     
 13576                           	psect	temp
 13577   00005E                     btemp:
 13578                           	callstack 0
 13579   00005E                     	ds	1
 13580   000000                     int$flags	set	btemp
 13581   000000                     wtemp8	set	btemp+1
 13582   000000                     ttemp5	set	btemp+1
 13583   000000                     ttemp6	set	btemp+4
 13584   000000                     ttemp7	set	btemp+8
 13585                           
 13586                           	psect	idloc
 13587                           
 13588                           ;Config register IDLOC0 @ 0x200000
 13589                           ;	unspecified, using default values
 13590   200000                     	org	2097152
 13591   200000  FF                 	db	255
 13592                           
 13593                           ;Config register IDLOC1 @ 0x200001
 13594                           ;	unspecified, using default values
 13595   200001                     	org	2097153
 13596   200001  FF                 	db	255
 13597                           
 13598                           ;Config register IDLOC2 @ 0x200002
 13599                           ;	unspecified, using default values
 13600   200002                     	org	2097154
 13601   200002  FF                 	db	255
 13602                           
 13603                           ;Config register IDLOC3 @ 0x200003
 13604                           ;	unspecified, using default values
 13605   200003                     	org	2097155
 13606   200003  FF                 	db	255
 13607                           
 13608                           ;Config register IDLOC4 @ 0x200004
 13609                           ;	unspecified, using default values
 13610   200004                     	org	2097156
 13611   200004  FF                 	db	255
 13612                           
 13613                           ;Config register IDLOC5 @ 0x200005
 13614                           ;	unspecified, using default values
 13615   200005                     	org	2097157
 13616   200005  FF                 	db	255
 13617                           
 13618                           ;Config register IDLOC6 @ 0x200006
 13619                           ;	unspecified, using default values
 13620   200006                     	org	2097158
 13621   200006  FF                 	db	255
 13622                           
 13623                           ;Config register IDLOC7 @ 0x200007
 13624                           ;	unspecified, using default values
 13625   200007                     	org	2097159
 13626   200007  FF                 	db	255
 13627                           
 13628                           	psect	config
 13629                           
 13630                           ; Padding undefined space
 13631   300000                     	org	3145728
 13632   300000  FF                 	db	255
 13633                           
 13634                           ;Config register CONFIG1H @ 0x300001
 13635                           ;	Oscillator Selection bits
 13636                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 13637                           ;	4X PLL Enable
 13638                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13639                           ;	Primary clock enable bit
 13640                           ;	PRICLKEN = ON, Primary clock is always enabled
 13641                           ;	Fail-Safe Clock Monitor Enable bit
 13642                           ;	FCMEN = 0x0, unprogrammed default
 13643                           ;	Internal/External Oscillator Switchover bit
 13644                           ;	IESO = 0x0, unprogrammed default
 13645   300001                     	org	3145729
 13646   300001  33                 	db	51
 13647                           
 13648                           ;Config register CONFIG2L @ 0x300002
 13649                           ;	unspecified, using default values
 13650                           ;	Power-up Timer Enable bit
 13651                           ;	PWRTEN = 0x1, unprogrammed default
 13652                           ;	Brown-out Reset Enable bits
 13653                           ;	BOREN = 0x3, unprogrammed default
 13654                           ;	Brown Out Reset Voltage bits
 13655                           ;	BORV = 0x3, unprogrammed default
 13656   300002                     	org	3145730
 13657   300002  1F                 	db	31
 13658                           
 13659                           ;Config register CONFIG2H @ 0x300003
 13660                           ;	Watchdog Timer Enable bits
 13661                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13662                           ;	Watchdog Timer Postscale Select bits
 13663                           ;	WDTPS = 0xF, unprogrammed default
 13664   300003                     	org	3145731
 13665   300003  3C                 	db	60
 13666                           
 13667                           ; Padding undefined space
 13668   300004                     	org	3145732
 13669   300004  FF                 	db	255
 13670                           
 13671                           ;Config register CONFIG3H @ 0x300005
 13672                           ;	unspecified, using default values
 13673                           ;	CCP2 MUX bit
 13674                           ;	CCP2MX = 0x1, unprogrammed default
 13675                           ;	PORTB A/D Enable bit
 13676                           ;	PBADEN = 0x1, unprogrammed default
 13677                           ;	P3A/CCP3 Mux bit
 13678                           ;	CCP3MX = 0x1, unprogrammed default
 13679                           ;	HFINTOSC Fast Start-up
 13680                           ;	HFOFST = 0x1, unprogrammed default
 13681                           ;	Timer3 Clock input mux bit
 13682                           ;	T3CMX = 0x1, unprogrammed default
 13683                           ;	ECCP2 B output mux bit
 13684                           ;	P2BMX = 0x1, unprogrammed default
 13685                           ;	MCLR Pin Enable bit
 13686                           ;	MCLRE = 0x1, unprogrammed default
 13687   300005                     	org	3145733
 13688   300005  BF                 	db	191
 13689                           
 13690                           ;Config register CONFIG4L @ 0x300006
 13691                           ;	unspecified, using default values
 13692                           ;	Stack Full/Underflow Reset Enable bit
 13693                           ;	STVREN = 0x1, unprogrammed default
 13694                           ;	Single-Supply ICSP Enable bit
 13695                           ;	LVP = 0x1, unprogrammed default
 13696                           ;	Extended Instruction Set Enable bit
 13697                           ;	XINST = 0x0, unprogrammed default
 13698                           ;	Background Debug
 13699                           ;	DEBUG = 0x1, unprogrammed default
 13700   300006                     	org	3145734
 13701   300006  85                 	db	133
 13702                           
 13703                           ; Padding undefined space
 13704   300007                     	org	3145735
 13705   300007  FF                 	db	255
 13706                           
 13707                           ;Config register CONFIG5L @ 0x300008
 13708                           ;	unspecified, using default values
 13709                           ;	Code Protection Block 0
 13710                           ;	CP0 = 0x1, unprogrammed default
 13711                           ;	Code Protection Block 1
 13712                           ;	CP1 = 0x1, unprogrammed default
 13713                           ;	Code Protection Block 2
 13714                           ;	CP2 = 0x1, unprogrammed default
 13715                           ;	Code Protection Block 3
 13716                           ;	CP3 = 0x1, unprogrammed default
 13717   300008                     	org	3145736
 13718   300008  0F                 	db	15
 13719                           
 13720                           ;Config register CONFIG5H @ 0x300009
 13721                           ;	unspecified, using default values
 13722                           ;	Boot Block Code Protection bit
 13723                           ;	CPB = 0x1, unprogrammed default
 13724                           ;	Data EEPROM Code Protection bit
 13725                           ;	CPD = 0x1, unprogrammed default
 13726   300009                     	org	3145737
 13727   300009  C0                 	db	192
 13728                           
 13729                           ;Config register CONFIG6L @ 0x30000A
 13730                           ;	unspecified, using default values
 13731                           ;	Write Protection Block 0
 13732                           ;	WRT0 = 0x1, unprogrammed default
 13733                           ;	Write Protection Block 1
 13734                           ;	WRT1 = 0x1, unprogrammed default
 13735                           ;	Write Protection Block 2
 13736                           ;	WRT2 = 0x1, unprogrammed default
 13737                           ;	Write Protection Block 3
 13738                           ;	WRT3 = 0x1, unprogrammed default
 13739   30000A                     	org	3145738
 13740   30000A  0F                 	db	15
 13741                           
 13742                           ;Config register CONFIG6H @ 0x30000B
 13743                           ;	unspecified, using default values
 13744                           ;	Configuration Register Write Protection bit
 13745                           ;	WRTC = 0x1, unprogrammed default
 13746                           ;	Boot Block Write Protection bit
 13747                           ;	WRTB = 0x1, unprogrammed default
 13748                           ;	Data EEPROM Write Protection bit
 13749                           ;	WRTD = 0x1, unprogrammed default
 13750   30000B                     	org	3145739
 13751   30000B  E0                 	db	224
 13752                           
 13753                           ;Config register CONFIG7L @ 0x30000C
 13754                           ;	unspecified, using default values
 13755                           ;	Table Read Protection Block 0
 13756                           ;	EBTR0 = 0x1, unprogrammed default
 13757                           ;	Table Read Protection Block 1
 13758                           ;	EBTR1 = 0x1, unprogrammed default
 13759                           ;	Table Read Protection Block 2
 13760                           ;	EBTR2 = 0x1, unprogrammed default
 13761                           ;	Table Read Protection Block 3
 13762                           ;	EBTR3 = 0x1, unprogrammed default
 13763   30000C                     	org	3145740
 13764   30000C  0F                 	db	15
 13765                           
 13766                           ;Config register CONFIG7H @ 0x30000D
 13767                           ;	unspecified, using default values
 13768                           ;	Boot Block Table Read Protection bit
 13769                           ;	EBTRB = 0x1, unprogrammed default
 13770   30000D                     	org	3145741
 13771   30000D  40                 	db	64
 13772                           tosu	equ	0xFFF
 13773                           tosh	equ	0xFFE
 13774                           tosl	equ	0xFFD
 13775                           stkptr	equ	0xFFC
 13776                           pclatu	equ	0xFFB
 13777                           pclath	equ	0xFFA
 13778                           pcl	equ	0xFF9
 13779                           tblptru	equ	0xFF8
 13780                           tblptrh	equ	0xFF7
 13781                           tblptrl	equ	0xFF6
 13782                           tablat	equ	0xFF5
 13783                           prodh	equ	0xFF4
 13784                           prodl	equ	0xFF3
 13785                           indf0	equ	0xFEF
 13786                           postinc0	equ	0xFEE
 13787                           postdec0	equ	0xFED
 13788                           preinc0	equ	0xFEC
 13789                           plusw0	equ	0xFEB
 13790                           fsr0h	equ	0xFEA
 13791                           fsr0l	equ	0xFE9
 13792                           wreg	equ	0xFE8
 13793                           indf1	equ	0xFE7
 13794                           postinc1	equ	0xFE6
 13795                           postdec1	equ	0xFE5
 13796                           preinc1	equ	0xFE4
 13797                           plusw1	equ	0xFE3
 13798                           fsr1h	equ	0xFE2
 13799                           fsr1l	equ	0xFE1
 13800                           bsr	equ	0xFE0
 13801                           indf2	equ	0xFDF
 13802                           postinc2	equ	0xFDE
 13803                           postdec2	equ	0xFDD
 13804                           preinc2	equ	0xFDC
 13805                           plusw2	equ	0xFDB
 13806                           fsr2h	equ	0xFDA
 13807                           fsr2l	equ	0xFD9
 13808                           status	equ	0xFD8

Data Sizes:
    Strings     598
    Constant    0
    Data        627
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      93
    BANK0           160    135     153
    BANK1           256     47     246
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), reprak_main@txt(BANK0[17]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), reprak_main@txt(BANK0[17]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_39(CODE[4]), STR_36(CODE[4]), STR_33(CODE[18]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_39(CODE[4]), STR_36(CODE[4]), STR_33(CODE[18]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_24(CODE[14]), STR_22(CODE[21]), 
		 -> STR_19(CODE[6]), STR_16(CODE[18]), STR_15(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_24(CODE[14]), STR_22(CODE[21]), 
		 -> STR_19(CODE[6]), STR_16(CODE[18]), STR_15(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 21
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_24(CODE[14]), STR_22(CODE[21]), 
		 -> STR_19(CODE[6]), STR_16(CODE[18]), STR_15(CODE[18]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S3237$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_24(CODE[14]), STR_22(CODE[21]), 
		 -> STR_16(CODE[18]), STR_15(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> PWM_main@txt(BANK0[17]), GAME_main@txt_g(BANK0[17]), ADC_main@txt_pot2(BANK1[17]), ADC_main@txt_pot1(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S3152$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3152$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 30
		 -> UART_main@text(BANK0[30]), 

    memset@s	PTR unsigned char  size(2) Largest target is 30
		 -> UART_main@text(BANK0[30]), 

    uart_write@text	PTR unsigned char  size(2) Largest target is 30
		 -> UART_main@text(BANK0[30]), 

    uart_write_norm@text	PTR unsigned char  size(2) Largest target is 90
		 -> UART_main@uvod(BANK0[90]), 

    sp__memset	PTR void  size(2) Largest target is 30
		 -> UART_main@text(BANK0[30]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), reprak_main@txt(BANK0[17]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 25
		 -> STR_35(CODE[18]), STR_34(CODE[18]), reprak_main@txt(BANK0[17]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), PWM_main@txt(BANK0[17]), STR_28(CODE[20]), STR_27(CODE[18]), 
		 -> STR_26(CODE[18]), STR_25(CODE[18]), STR_23(CODE[19]), GAME_main@txt_g(BANK0[17]), 
		 -> STR_21(CODE[18]), STR_20(CODE[18]), STR_18(CODE[17]), STR_17(CODE[17]), 
		 -> ADC_main@txt_pot2(BANK1[17]), ADC_main@txt_pot1(BANK1[17]), STR_14(CODE[21]), STR_13(CODE[25]), 
		 -> STR_12(CODE[20]), STR_11(CODE[19]), STR_10(CODE[20]), STR_9(CODE[19]), 
		 -> STR_8(CODE[19]), STR_7(CODE[19]), STR_6(CODE[19]), STR_5(CODE[19]), 
		 -> STR_4(CODE[20]), STR_3(CODE[20]), STR_2(CODE[19]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _reprak_main->___fltol
    _UART_main->_memset
    _uart_write_norm->_putch
    _uart_write->_putch
    _LCD_Init->_LCD_Send
    _GPIO_main->_LCD_ShowString
    _rand->___lmul
    _DAC_main->___fltol
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send

Critical Paths under _ISR_HANDLER in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_GAME_main
    _reprak_main->___fltol
    _PWM_main->_sprintf
    _GAME_main->_sprintf
    _DAC_main->_printf
    _printf->_vfprintf
    _ADC_main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub

Critical Paths under _ISR_HANDLER in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC_main

Critical Paths under _ISR_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_HANDLER in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_HANDLER in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_HANDLER in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_HANDLER in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_HANDLER in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_HANDLER in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_HANDLER in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_HANDLER in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_HANDLER in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_HANDLER in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_HANDLER in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_HANDLER in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_HANDLER in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_HANDLER in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  194095
                                            130 BANK0      5     5      0
                           _ADC_main
                           _DAC_main
                          _GAME_main
                          _GPIO_main
                               _Init
                           _LCD_Init
                     _LCD_ShowString
                           _PWM_main
                          _UART_main
                           _driveLED
                        _reprak_main
 ---------------------------------------------------------------------------------
 (1) _reprak_main                                         26    26      0   13138
                                              4 BANK0     26    26      0
                     _LCD_ShowString
                            ___aldiv
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _reprak_Init
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _reprak_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_main                                          122   122      0    4680
                                              0 BANK0    122   122      0
                     _LCD_ShowString
                          _UART_Init
                             _memset
                         _uart_write
                    _uart_write_norm
 ---------------------------------------------------------------------------------
 (2) _uart_write_norm                                      7     3      4     352
                                              2 COMRAM     7     3      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _uart_write                                           8     4      4     354
                                              2 COMRAM     8     4      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_main                                            21    21      0   37898
                                            106 BANK0     21    21      0
                     _LCD_ShowString
                           _PWM_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              2 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_main                                            6     6      0    3088
                                              8 COMRAM     5     5      0
                     _LCD_ShowString
                           _driveLED
 ---------------------------------------------------------------------------------
 (1) _driveLED                                             1     1      0     132
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GAME_main                                           24    24      0   38706
                                            106 BANK0     24    24      0
                          _GAME_Init
                     _LCD_ShowString
                             ___wmul
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     370
                                             13 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _GAME_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC_main                                            13    13      0   48520
                                             90 BANK0     13    13      0
                           _DAC_Init
                          _DAC_Write
                     _LCD_ShowString
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4   33492
                                             84 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _DAC_Write                                            3     3      0      90
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_main                                            49    49      0   44888
                                            106 BANK0      2     2      0
                                              0 BANK1     47    47      0
                           _ADC_Init
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8   34707
                                             84 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   33303
                                             76 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6   32536
                                             61 BANK0     15     9      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4     795
                                              7 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   25121
                                              8 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     552
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             40 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     967
                                             81 COMRAM     6     6      0
                                              0 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4367
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3802
                                             65 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3416
                                             40 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             65 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2767
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4658
                                             29 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2727
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     953
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     704
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     854
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2817
                                              2 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_HANDLER                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_main
     _ADC_Init
     _LCD_ShowString
       _LCD_Send
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _DAC_main
     _DAC_Init
     _DAC_Write
     _LCD_ShowString
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
   _GAME_main
     _GAME_Init
     _LCD_ShowString
     ___wmul
     _rand
       ___lmul
     _sprintf
   _GPIO_main
     _LCD_ShowString
     _driveLED
   _Init
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
   _PWM_main
     _LCD_ShowString
     _PWM_Init
     _sprintf
   _UART_main
     _LCD_ShowString
     _UART_Init
     _memset
     _uart_write
       _putch
     _uart_write_norm
       _putch
   _driveLED
   _reprak_main
     _LCD_ShowString
     ___aldiv
     ___awdiv
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _reprak_Init
     _strcpy

 _ISR_HANDLER (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     208      57       13.4%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2F      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5D       1       98.9%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhlhhh     22      0       0      37        0.0%
BITBIGSFRllhlll     17      0       0      53        0.0%
BITBIGSFRllhlll      D      0       0      52        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRllhlll      C      0       0      55        0.0%
BITBIGSFRllhlll      7      0       0      54        0.0%
BITBIGSFRhlhlhh      6      0       0      44        0.0%
BITBIGSFRllhlh       6      0       0      49        0.0%
BITBIGSFRhll         6      0       0      47        0.0%
BITBIGSFRhlhhhh      5      0       0      42        0.0%
BITBIGSFRllhhh       5      0       0      48        0.0%
BITBIGSFRhhlhhl      3      0       0      38        0.0%
BITBIGSFRhlhlhl      2      0       0      45        0.0%
BITBIGSFRhhlllh      1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      51        0.0%
BITBIGSFRllhllh      1      0       0      50        0.0%
BITBIGSFRhlhhhl      1      0       0      43        0.0%
BITBIGSFRhhlhhl      1      0       0      39        0.0%
BITBIGSFRhlhll       1      0       0      46        0.0%
BITBIGSFRhhllll      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EC      56        0.0%
DATA                 0      0     3F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun May 07 16:30:09 2023

             uart_write@len 0005                ___fldiv@aexp 0028                ___fldiv@bexp 0027  
              ___fldiv@sign 0020              uart_write@flag 0008                          l52 218A  
                        l53 2186                          l54 21BE                          l55 21BA  
                        l56 21D2                          l79 43AE                ___awdiv@sign 0007  
            uart_write@text 0003         ___wmul@multiplicand 0004                         l200 1F92  
                       l113 27F2                         l203 2052                         l124 4382  
                       l212 3FEC                         l220 4298                         l221 429A  
                       l119 29A0                         l215 4276                         l207 2128  
                       l217 4284                         l218 428A                         l250 4464  
                       l245 2E60                         l431 3098                         l192 1F2C  
                       l360 3636                         l281 3E42                         l361 36B8  
                       l441 4258                         l442 425A                         l434 30E4  
                       l371 3A36                         l276 39E2                         l364 36D4  
                       l381 4404                         l197 1F56                         l541 34FC  
                       l374 3A84                         l358 3628                         l375 3A86  
                       l367 39E8                         l439 424A                         l384 4412  
                       l552 3DD2                         l369 39F6                         l386 4420  
                       l378 3A94                         l802 3928                         l546 443A  
                       l562 3C6C                         l650 31F0                         l387 4422  
                       l571 43FC                         l565 443E                         l493 1E84  
                       l830 3BEE                         l582 3F76                         l486 1C28  
                       l815 3B44                         l583 3F86                         l568 4450  
                       l841 33FC                         l498 418C                         l836 33B6  
                       l845 4352                         l868 32F8                         _GIE 7F97  
                       _PR2 0FBB                         _PR4 0F52                         _abs 42DC  
                       _pad 3C6E                ___awmod@sign 0007                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 003A                ___flmul@bexp 003B  
              ___flmul@sign 0035                ___flmul@temp 0040                ___flmul@prod 003C  
              ___fltol@exp1 0057                        l1100 0DD0                        l1101 0D96  
                      l1202 149E                        ?_abs 0008                        l1300 2B9C  
                      l1116 0EFC                        l1108 10B2                        l1125 0FCC  
                      l1141 41D4                        l1302 2BA4                        l1126 0FBA  
                      l1303 2BEA                        l1240 2AEC                        l1233 2A90  
                      l1153 1876                        l1226 29F8                        l1314 2CE8  
                      l1330 03D2                        l1155 16D6                        l1164 171C  
                      l1404 40A4                        l1229 2B54                        l1325 0BF2  
                      l1422 431A                        l1166 1794                        l1158 169A  
                      l1414 35FA                        l1246 2FD6                        l1167 1782  
                      l1431 2520                        l1192 136E                        l1328 058C  
                      l4001 17A4                        l1185 1178                        l1194 13E6  
                      l1442 4052                        l1370 385C                        l1419 4312  
                      l1291 3C90                        l4011 1806                        l4003 17B0  
                      l1195 13D4                        l1099 0DE2                        l1259 40F4  
                      l1460 379E                        l1428 25DC                        l4021 1864  
                      l4013 181C                        l4005 17BE                        l4101 1284  
                      l1189 14DC                        l1358 09D6                        l1374 3864  
                      l1382 1B82                        l1295 3CE6                        l4023 186A  
                      l4015 1836                        l4007 17E8                        l4111 1328  
                      l4103 12A0                        l1439 4042                        l1448 4144  
                      l4201 38FC                        l4025 186C                        l4017 1852  
                      l4009 17EC                        l4121 137E                        l4113 1336  
                      l4105 12AC                        l4041 10E0                        l4033 10B4  
                      l5001 3C34                        l4203 3902                        l4019 1856  
                      l4123 138C                        l4115 1354                        l4107 12C8  
                      l4051 111C                        l4043 10F0                        l4035 10C0  
                      l1475 43D6                        l1483 3EB0                        l5011 2E62  
                      l5003 3C44                        l1468 4218                        l5101 2A3A  
                      l4205 3908                        l4221 3AB4                        l4213 3A96  
                      l4133 13F6                        l4141 143E                        l4125 1390  
                      l4117 135E                        l4109 12F2                        l4061 1152  
                      l4053 1122                        l4045 1100                        l4037 10CE  
                      l5021 2EC2                        l5005 3C56                        l5111 2AC2  
                      l5103 2A46                        l4207 3918                        l4231 3AEC  
                      l4223 3AC2                        l4215 3A9A                        l4151 14B2  
                      l4143 1458                        l4135 1402                        l4127 139E  
                      l4119 136C                        l4063 1162                        l4055 1130  
                      l4047 1106                        l4039 10D0                        l5023 2F1A  
                      l5015 2E80                        l5121 2B00                        l5113 2ACE  
                      l5105 2A78                        l4209 3920                        l4233 3AFA  
                      l4241 3B24                        l4225 3ACA                        l4217 3AA8  
                      l4153 14C0                        l4145 146C                        l4137 1410  
                      l4129 13CC                        l4081 11E4                        l4073 11AC  
                      l4065 1168                        l4057 1132                        l4049 1116  
                      l6001 0FF6                        l4401 2580                        l1489 42DA  
                      l5041 2FC4                        l5033 2F7A                        l5017 2E8C  
                      l5009 3C60                        l5123 2B24                        l5115 2ADC  
                      l5107 2A7A                        l4171 386A                        l4243 3B34  
                      l4235 3B10                        l4227 3ADC                        l4219 3AB0  
                      l4251 3B74                        l4155 14C2                        l4147 1486  
                      l4139 143A                        l4091 122E                        l4083 11FC  
                      l4075 11B8                        l4067 1188                        l4059 1142  
                      l6011 1072                        l6003 1030                        l4403 2594  
                      l4411 40F6                        l5035 2FAE                        l5027 2F34  
                      l5211 3424                        l5203 33FE                        l5051 310C  
                      l5043 30E6                        l5125 2B34                        l5117 2AFA  
                      l5109 2A86                        l4181 389A                        l4173 3878  
                      l4245 3B3C                        l4237 3B18                        l4229 3AE4  
                      l4341 3C7C                        l4261 3BEC                        l4253 3B84  
                      l4149 14A2                        l4157 14C8                        l4093 123E  
                      l4085 1208                        l4077 11C2                        l4069 1198  
                      l6021 1092                        l6013 1076                        l6005 1032  
                      l4405 25BC                        l4413 410A                        l4421 412A  
                      l6101 028C                        l5141 4394                        l5133 4384  
                      l5037 2FBA                        l5029 2F60                        l5221 346E  
                      l5213 3428                        l5205 3402                        l5061 3154  
                      l5053 311A                        l5045 30EA                        l5127 2B42  
                      l5119 2AFC                        l4191 38C8                        l4183 389E  
                      l4175 3880                        l4239 3B1E                        l4351 3CD2  
                      l4343 3C88                        l4431 2B90                        l4423 2B56  
                      l4255 3BB2                        l4271 3366                        l4159 14CC  
                      l4095 124A                        l4087 1214                        l4079 11D8  
                      l6023 10A0                        l6015 1084                        l6007 1042  
                      l6031 41A0                        l4407 25CC                        l4415 4116  
                      l6111 02D2                        l6103 0290                        l5151 43AA  
                      l5143 4396                        l5135 4388                        l5039 2FC0  
                      l5223 3480                        l5231 34A0                        l5215 343A  
                      l5207 3410                        l5071 319E                        l5063 315C  
                      l5055 312A                        l5047 30F8                        l5129 2B44  
                      l4193 38D6                        l4185 38A6                        l4177 3884  
                      l4169 3866                        l4353 42DC                        l4345 3C9C  
                      l4441 2BDE                        l4433 2BAC                        l4425 2B6A  
                      l4257 3BC2                        l4249 3B46                        l4281 33F4  
                      l4273 3376                        l4265 32FA                        l4097 125A  
                      l4089 1222                        l6025 10A2                        l6017 108A  
                      l6009 1052                        l6041 321E                        l4361 355C  
                      l4417 411A                        l6201 073A                        l6113 02DA  
                      l6105 02B6                        l6121 031C                        l5153 43AC  
                      l5145 43A4                        l5137 4390                        l5161 3618  
                      l5233 34B2                        l5225 3484                        l5217 344E  
                      l5209 341E                        l5081 31D0                        l5073 31AE  
                      l5065 3168                        l5057 312E                        l5049 3108  
                      l5091 29C2                        l4195 38DC                        l4187 38B8  
                      l4179 3892                        l4355 42F6                        l4347 3CB0  
                      l4339 3C6E                        l4451 2C34                        l4443 2BE6  
                      l4435 2BBC                        l4427 2B7A                        l4259 3BE6  
                      l4283 33FA                        l4275 3384                        l4267 3328  
                      l4099 1274                        l4291 4342                        l6019 108C  
                      l6051 326C                        l6043 3248                        l6035 31F2  
                      l4371 35AE                        l4363 3584                        l4419 4126  
                      l6211 0806                        l6203 0758                        l6131 0366  
                      l6123 0342                        l6115 02F2                        l6107 02C8  
                      l5171 392A                        l5147 43A6                        l5139 4392  
                      l5163 3626                        l5155 35FC                        l5235 34E2  
                      l5227 348C                        l5219 345C                        l5083 31E0  
                      l5075 31B0                        l5067 3176                        l5059 313E  
                      l5093 2A08                        l4197 38F2                        l4189 38C0  
                      l3661 36D6                        l4349 3CB4                        l4461 2C88  
                      l4453 2C3A                        l4445 2BF2                        l4437 2BC2  
                      l4429 2B82                        l3901 14FA                        l4277 3396  
                      l4269 3338                        l6029 418E                        l6061 3298  
                      l6045 324A                        l6037 320A                        l4365 3590  
                      l4357 34FE                        l4381 400C                        l6221 08B6  
                      l6213 0816                        l6205 078C                        l6141 039C  
                      l6125 0354                        l6117 02FC                        l6109 02CC  
                      l4701 3806                        l6301 1878                        l5181 396A  
                      l5173 3946                        l5149 43A8                        l5165 3638  
                      l5157 360A                        l5237 34E8                        l5229 349E  
                      l5077 31BA                        l5069 3180                        ?_pad 0013  
                      l5095 2A1E                        l5087 29A4                        l4199 38FA  
                      l3671 3758                        l3663 36E8                        l4463 2CA2  
                      l4455 2C40                        l4447 2BFC                        l4439 2BD2  
                      l3903 150A                        l3911 1534                        l4279 33A4  
                      l4287 431C                        l6071 32C8                        l6047 325A  
                      l4375 35F2                        l4359 351E                        l4391 2464  
                      l4383 23CC                        l6231 091A                        l6223 08EA  
                      l6215 0826                        l6207 07BE                        l6151 045A  
                      l6127 0358                        l4703 3826                        l6311 18DE  
                      l6303 189C                        l5191 39BE                        l5183 3986  
                      l5175 394A                        l5167 36B6                        l5159 3616  
                      l5239 34F8                        l5079 31C0                        l5089 29B4  
                      l3657 443E                        l3665 36FA                        l4465 2CB2  
                      l4449 2C02                        l4457 2C5C                        l3921 1560  
                      l3913 1544                        l3905 151A                        l4289 4332  
                      l6073 32D8                        l6057 3284                        l6049 325E  
                      l4369 359C                        l4385 23EC                        l6241 09CE  
                      l6233 0920                        l6225 08FE                        l6217 085A  
                      l6209 07D4                        l6161 051A                        l6153 048C  
                      l6145 03E2                        l6129 035E                        l6081 0200  
                      l4705 3834                        l6321 1950                        l6313 18EC  
                      l6305 18AA                        l6401 40B8                        l4801 3F3C  
                      l5193 39C2                        l5185 3992                        l5177 3950  
                      l5169 36C6                        l5099 2A32                        l3659 444C  
                      l3667 3704                        l4467 2CB8                        l4459 2C76  
                      l3923 1570                        l3931 159A                        l3915 154A  
                      l3907 152A                        l6075 32E8                        l6067 32AC  
                      l6059 328E                        l4395 24D4                        l4387 2442  
                      l4379 3FEE                        l6251 0A10                        l6243 09E8  
                      l6235 0928                        l6219 08B0                        l6227 0902  
                      l6171 05AE                        l6155 04CA                        l6147 03E8  
                      l6139 0382                        l6091 0250                        l6083 0210  
                      l6331 19D0                        l6323 1996                        l6315 1908  
                      l6307 18B6                        l6403 40C0                        l6411 43B0  
                      l4803 3F4C                        l5187 399C                        l5195 39C8  
                      l5179 3958                        l4821 39E6                        l3669 3722  
                      l4469 2CC8                        l3941 15DC                        l3933 15AA  
                      l3925 1580                        l3917 1550                        l3909 152C  
                      l6069 32B8                        l4397 2510                        l4389 2456  
                      l6253 0A18                        l6245 09F6                        l6261 0A38  
                      l6237 0934                        l6229 0912                        l6181 05E6  
                      l6173 05B8                        l6157 04DE                        l6165 055A  
                      l6149 041C                        l6093 0258                        l6085 021E  
                      l6333 19D8                        l6341 1A1C                        l6317 1918  
                      l6309 18BA                        l6405 40C8                        l4901 3FD8  
                      l6413 43BA                        l6501 1E8A                        l4805 3F56  
                      l5197 39D8                        l5189 39B8                        l6421 2FE6  
                      l4831 3A30                        l4823 39F8                        l3935 15C0  
                      l3927 1590                        l3919 155E                        l4399 2544  
                      l6271 0ABE                        l6263 0A4A                        l6255 0A28  
                      l6247 0A06                        l6239 09AE                        l6191 0630  
                      l6183 05FE                        l6175 05C0                        l6167 0594  
                      l6159 0512                        l6095 0268                        l6087 0222  
                      l6079 01FA                        l6351 1ACE                        l6343 1A3C  
                      l6335 19E0                        l6327 19AE                        l6319 1934  
                      l6407 40E4                        l4903 3FE2                        l4911 4272  
                      l6511 1EB6                        l6503 1E98                        l5199 39DC  
                      l6431 303A                        l6423 2FEE                        l4841 3A72  
                      l4833 3A3C                        l4825 3A04                        l3881 41F4  
                      l3961 165E                        l3953 1614                        l3937 15D0  
                      l3945 15F0                        l3929 1592                        l6281 0B38  
                      l6273 0AF2                        l6265 0A5C                        l6257 0A2C  
                      l6249 0A0A                        l6193 0644                        l6185 0610  
                      l6177 05C6                        l6169 05A2                        l6097 0278  
                      l6089 0246                        l6353 1AEE                        l6345 1A70  
                      l6361 1B48                        l6329 19BE                        l4905 425E  
                      l6521 1F10                        l6513 1EBE                        l6505 1EA6  
                      l4921 445A                        l6601 2DB8                        l4817 3DD6  
                      l6441 307A                        l6433 303E                        l6425 2FFC  
                      l6417 2FD8                        l4851 4380                        l4843 3A74  
                      l4827 3A14                        l4819 39E6                        l3883 41F8  
                      l3971 16A4                        l3963 1666                        l3955 162E  
                      l3947 1600                        l3939 15D8                        l6291 0BA4  
                      l6283 0B40                        l6275 0AFA                        l6267 0A60  
                      l6259 0A32                        l6195 06A8                        l6179 05D8  
                      l6187 0618                        l6099 0284                        l3891 43F4  
                      l6339 19E8                        l4907 426E                        l6531 1F52  
                      l6523 1F18                        l6515 1ED4                        l6507 1EAC  
                      l4923 3E44                        l6611 2E0E                        l6603 2DBA  
                      l4931 4220                        l6451 30D8                        l6443 3088  
                      l6435 304A                        l6427 301A                        l6419 2FDC  
                      l4845 4354                        l4829 3A1E                        l3877 41D6  
                      l3981 16FC                        l3973 16C2                        l3965 1676  
                      l3957 163E                        l3949 1600                        l5901 0D2C  
                      l3885 429C                        l6293 0BB4                        l6285 0B4E  
                      l6269 0A66                        l6277 0AFE                        l6197 0700  
                      l6189 0620                        l6349 1AA4                        l6365 1B5A  
                      l6461 27E6                        l4909 4270                        l6541 1FA0  
                      l6533 1F54                        l6525 1F28                        l6517 1EE4  
                      l6509 1EB0                        l4925 3E82                        l6621 2E44  
                      l6613 2E1C                        l6605 2DC2                        l4933 4246  
                      l6453 30DC                        l6445 309C                        l6437 3056  
                      l6429 3028                        l4941 415A                        l6701 2134  
                      l4847 435E                        l4839 3A40                        l3879 41E2  
                      l3991 173A                        l3983 1702                        l3975 16C4  
                      l3967 168A                        l3959 164E                        l3895 14DE  
                      l5911 0D7E                        l5903 0D30                        l5831 0C0E  
                      l3887 42AC                        l6295 0BCA                        l6287 0B7E  
                      l6279 0B1C                        l6199 0734                        l4695 37A0  
                      l6359 1B1C                        l6391 4060                        l6471 2822  
                      l6463 27EA                        l4871 3F92                        l6551 206E  
                      l6543 1FAE                        l6535 1F64                        l6527 1F3C  
                      l6519 1EEA                        l4919 4452                        l6623 2E48  
                      l6615 2E22                        l6607 2DE4                        l4935 4248  
                      l6455 30DE                        l6447 30B8                        l6439 3072  
                      l4951 4170                        l4943 415C                        l6631 1B84  
                      l6711 215A                        l6703 213E                        l4849 436E  
                      l3993 173E                        l3985 170C                        l3977 16D4  
                      l3969 1698                        l3897 14EA                        l5921 0DC2  
                      l5913 0D8E                        l5905 0D34                        l5841 0C42  
                      l5833 0C10                        l6297 0BD2                        l6289 0B8C  
                      l3889 43D8                        l4697 37A8                        l6393 407E  
                      l6481 291A                        l6473 288C                        l6465 27F0  
                      l4881 3FA8                        l4873 3F94                        l4865 3F88  
                      l6561 2122                        l6553 2108                        l6545 2048  
                      l6529 1F42                        l6537 1F88                        l6625 2E4C  
                      l6609 2E00                        l6617 2E26                        l4929 421A  
                      l6457 30E0                        l6449 30C6                        l4961 442C  
                      l4953 4172                        l4945 416A                        l4937 4146  
                      l6641 1BBC                        l6633 1B88                        l6721 219E  
                      l6713 215E                        l6705 213E                        l4795 4400  
                      l3995 174C                        l3987 171A                        l3979 16E6  
                      l3899 14F8                        l5923 0DC4                        l5915 0DA4  
                      l5907 0D38                        l5851 0C74                        l5835 0C20  
                      l5843 0C4A                        l5827 0BF4                        l4699 37CC  
                      l6395 409A                        l6491 2988                        l6483 2920  
                      l6475 2898                        l6467 2800                        l4891 3FCA  
                      l4883 3FAA                        l4875 3FA2                        l4867 3F8E  
                      l6563 2124                        l6555 211A                        l6547 2050  
                      l6539 1F90                        l6627 2E5C                        l6619 2E3C  
                      l6571 2CEE                        l4963 4432                        l4955 418A  
                      l4947 416C                        l4939 4158                        l6651 1C06  
                      l6643 1BCE                        l6635 1B96                        l6811 2362  
                      l6803 233C                        l6731 21E6                        l6723 21A4  
                      l6715 2162                        l6707 2144                        l3997 177A  
                      l3989 172C                        l5941 0E4C                        l5933 0E14  
                      l5925 0DCE                        l5917 0DB0                        l5909 0D62  
                      l5861 0CAA                        l5853 0C7A                        l5845 0C5A  
                      l5837 0C30                        l5829 0C00                        l6389 4054  
                      l6493 299A                        l6485 2946                        l6477 28A8  
                      l6469 2812                        l4893 3FD0                        l4885 3FAC  
                      l4877 3FA4                        l4869 3F90                        l6565 2126  
                      l6557 211E                        l6549 2060                        l4797 3F1E  
                      l6581 2D32                        l6573 2CF4                        l4965 4434  
                      l4957 4424                        l4973 3D5E                        l4949 416E  
                      l6661 1C54                        l6653 1C0A                        l6645 1BE2  
                      l6637 1BA4                        l6805 234C                        l6741 221A  
                      l6733 21F6                        l6725 21B2                        l6717 217E  
                      l6709 2148                        l5943 0E50                        l5935 0E24  
                      l5927 0DF0                        l5951 0E70                        l5919 0DB4  
                      l5871 0CE6                        l5863 0CBA                        l5855 0C88  
                      l5847 0C60                        l5839 0C40                        l6399 40A6  
                      l6495 299C                        l6487 296C                        l6479 2912  
                      l4895 3FD2                        l4887 3FAE                        l4879 3FA6  
                      l6559 2120                        l4799 3F2E                        l6591 2D88  
                      l6583 2D36                        l6575 2D02                        l4967 4436  
                      l4959 442A                        l4991 3BF4                        l4983 3D9E  
                      l4975 3D6A                        l6671 1D2C                        l6663 1C9C  
                      l6655 1C1A                        l6647 1BF0                        l6639 1BAA  
                      l6807 2350                        l6751 224A                        l6743 2224  
                      l6735 21FA                        l6727 21CE                        l6719 219A  
                      l5953 0E96                        l5961 0EEC                        l5945 0E5E  
                      l5937 0E32                        l5929 0E00                        l5881 0D04  
                      l5873 0CF4                        l5865 0CBC                        l5857 0C8A  
                      l5849 0C72                        l6489 297A                        l4897 3FD4  
                      l4889 3FC0                        l6593 2D8A                        l6585 2D50  
                      l6577 2D10                        l6569 2CEA                        l4969 4438  
                      l4993 3BFC                        l4985 3DB0                        l4977 3D88  
                      l6681 1E60                        l6673 1D48                        l6665 1CC8  
                      l6649 1C02                        l6657 1C32                        l6809 2354  
                      l6761 2274                        l6745 2234                        l6737 21FE  
                      l6817 2374                        l5971 0F40                        l5963 0F12  
                      l5955 0ECA                        l5947 0E60                        l5939 0E40  
                      l5891 0D18                        l5883 0D08                        l5875 0CF8  
                      l5859 0C9A                        l5867 0CC4                        l4899 3FD6  
                      l6499 1E86                        l6595 2D94                        l6587 2D6C  
                      l6579 2D22                        l4987 3DB4                        l6691 1E7E  
                      l6675 1DA4                        l6667 1CFE                        l6659 1C44  
                      l6683 1E66                        l6771 22A8                        l6763 2282  
                      l6755 225C                        l6747 2238                        l6739 220C  
                      l5981 0F6A                        l5973 0F4E                        l5965 0F22  
                      l5957 0ECC                        l5949 0E6A                        l5893 0D1C  
                      l5885 0D0C                        l5877 0CFC                        l5869 0CD4  
                      l6589 2D7A                        l6597 2D98                        l4997 3C0E  
                      l4989 3BF0                        l6693 1E82                        l6685 1E76  
                      l6677 1E40                        l6669 1D1E                        l6933 238A  
                      l6781 22DC                        l6773 22AC                        l6757 226C  
                      l6749 223C                        l5991 0F9C                        l5983 0F7A  
                      l5975 0F50                        l5959 0EDC                        l5895 0D20  
                      l5887 0D10                        l5879 0D00                        l6935 19FE  
                      l6599 2DA8                        l4999 3C2C                        l6687 1E7A  
                      l6679 1E52                        l6791 2304                        l6783 22E0  
                      l6775 22BA                        l6767 2294                        l6759 2270  
                      l5993 0FB2                        l5977 0F5E                        l5969 0F36  
                      l5985 0F7C                        l5897 0D24                        l5889 0D14  
                      l6937 1AB8                        l6689 1E7C                        l6793 2314  
                      l6785 22E4                        l6769 22A4                        l6697 212A  
                      l5979 0F66                        l5987 0F8A                        l5899 0D28  
                      l6939 1B3A                        l6795 2318                        l6787 22F2  
                      l6779 22CC                        l6699 2130                        _ADON 7E10  
                      l5997 0FDC                        l5989 0F8E                        l6797 231C  
                      l5999 0FE8                        l6799 232A                        STR_1 FEE8  
                      STR_2 FEFB                        STR_3 FE28                        STR_4 FE3C  
                      STR_5 FED5                        STR_6 FE9C                        STR_7 FEC2  
                      STR_8 FEAF                        STR_9 FE89                        u3200 36FA  
                      u4000 13E2                        u3201 36F6                        u4001 13DE  
                      u3210 3722                        u4010 13F6                        u3211 371E  
                      u4011 13F2                        u4100 38F2                        u3220 3758  
                      u4020 1410                        u4101 38EE                        u3221 3754  
                      u4021 140C                        u4110 3918                        u4030 1458  
                      u4111 3914                        u4031 1454                        u4120 3AA8  
                      u4200 3BE6                        u4040 1486                        u4121 3AA4  
                      u4201 3BE2                        u4041 1482                        u4130 3AC2  
                      u4210 3328                        u4050 14C0                        u4131 3ABE  
                      u4211 3324                        u4051 14BC                        u4060 3878  
                      u4140 3ADC                        u3180 444C                        u4220 3366  
                      u5100 3DE6                        u4061 3874                        u4141 3AD8  
                      u3181 4448                        u4221 3362                        u5101 3DE0  
                      u4070 3892                        u4150 3AFA                        u3190 36E8  
                      u4230 3384                        u4071 388E                        u4151 3AF6  
                      u3191 36E4                        u4231 3380                        u4080 38B8  
                      u4160 3B10                        u4240 33A4                        u4400 35AE  
                      u5200 3E40                        u5120 3DF8                        u4081 38B4  
                      u4161 3B0C                        u4241 33A0                        u4401 35AA  
                      u5201 3E3A                        u5121 3DF2                        u5050 4412  
                      u4090 38D6                        u4170 3B34                        u4250 33F4  
                      u5051 440E                        u4091 38D2                        u4171 3B30  
                      u4251 33F0                        u5115 3DE8                        u5060 4420  
                      u5220 39F6                        u3620 4218                        u4340 3C7C  
                      u3700 15C0                        u4180 3B74                        u4260 4332  
                      u4420 35E8                        u4500 24F4                        u5300 3EA2  
                      u5140 3E0A                        u5061 441C                        u5221 39F2  
                      u3621 4214                        u4341 3C78                        u3701 15BC  
                      u4181 3B70                        u4261 432E                        u4421 35E2  
                      u5141 3E04                        u5230 3A14                        u4350 3CD2  
                      u3710 1600                        u4190 3BB2                        u4430 35EA  
                      u4510 2510                        u3630 42DA                        u5070 3F3C  
                      u5310 4258                        u5231 3A10                        u4351 3CCE  
                      u3711 15FC                        u4191 3BAE                        u4415 35C0  
                      u4511 250C                        u3631 42D6                        u5071 3F38  
                      u5215 3E42                        u5135 3DFA                        u5311 4254  
                      u5240 3A30                        u4360 42F6                        u4600 2BBC  
                      u3800 177A                        u3720 1676                        u3640 14F8  
                      u4520 2564                        u4440 400C                        u7000 0806  
                      u5080 3F76                        u5160 3E1C                        u5400 2F76  
                      u5320 3D88                        u5241 3A2C                        u4361 42F2  
                      u4601 2BB8                        u3801 1776                        u3721 1672  
                      u3641 14F4                        u4505 24EA                        u4441 4008  
                      u7001 0802                        u5081 3F72                        u5305 3E98  
                      u5161 3E16                        u5401 2F72                        u5321 3D84  
                      u5250 3A6E                        u4610 2BD2                        u3810 1790  
                      u3730 1698                        u3650 150A                        u4370 353E  
                      u4530 2580                        u4450 2414                        u7010 0816  
                      u5410 2FD6                        u5330 3DD2                        u4611 2BCE  
                      u3811 178C                        u3731 1694                        u3651 1506  
                      u4531 257C                        u7011 0812                        u5155 3E0C  
                      u5411 2FD2                        u5331 3DCE                        _PEIE 7F96  
                      u5260 3A84                        u5500 2A1E                        u4620 2C76  
                      u3820 17A4                        u3740 16C2                        u3660 151A  
                      u3900 1130                        u4380 355C                        u4540 25BC  
                      u4460 2442                        u7100 0B9E                        u7020 08B0  
                      u5180 3E2E                        u5340 3C0A                        u5420 30F8  
                      u5261 3A80                        u5501 2A1A                        u4621 2C72  
                      u3821 17A0                        u3741 16BE                        u3661 1516  
                      u3901 112C                        u4381 3558                        u4541 25B8  
                      u4525 255A                        u4461 243E                        u7101 0B98  
                      u7021 08AC                        u5181 3E28                        u5341 3C06  
                      u5421 30F4                        u5270 3A94                        u5510 2A74  
                      u4630 2C88                        u3830 17BE                        u3750 16E6  
                      u3670 155E                        u3910 1142                        u4390 3584  
                      u4470 2464                        u4550 4144                        u7110 0BA0  
                      u7030 08FE                        u5350 3C2C                        u5430 311A  
                      u5271 3A90                        u5511 2A70                        u4631 2C84  
                      u3831 17BA                        u3751 16E2                        u3671 155A  
                      u3911 113E                        u4391 3580                        u4375 3534  
                      u4471 2460                        u4455 240A                        u4551 4140  
                      u7031 08FA                        u5175 3E1E                        u5351 3C28  
                      u5431 3116                        u5520 2ABE                        u4640 2CA2  
                      u4560 2B66                        u3840 1806                        u3760 16FC  
                      u3680 1570                        u3920 1152                        u6400 0C9A  
                      u7120 0BB4                        u7040 09AE                        u5280 4284  
                      u5600 396A                        u7200 3072                        u5360 3C44  
                      u5440 3154                        u5257 3A64                        u5521 2ABA  
                      u4641 2C9E                        u4561 2B60                        u3841 1802  
                      u3761 16F8                        u3681 156C                        u3921 114E  
                      u6401 0C96                        u7121 0BB0                        u7041 09AA  
                      u5281 4280                        u5601 3966                        u7201 306E  
                      u5361 3C40                        u5441 3150                        u5530 2ADC  
                      u4650 2CB2                        u4570 2B68                        u3850 1836  
                      u3770 171A                        u3690 1580                        u3930 1188  
                      u6410 0CAA                        u4490 24D0                        u7050 09E8  
                      u7130 189C                        u5290 4298                        u5610 3986  
                      u7210 3088                        u5370 2E7C                        u5450 3176  
                      u5531 2AD8                        u4651 2CAE                        u3851 1832  
                      u3771 1716                        u3691 157C                        u3931 1184  
                      u6411 0CA6                        u4491 24CC                        u7051 09E4  
                      u7131 1898                        u5291 4294                        u5195 3E30  
                      u5611 3982                        u7211 3084                        u5371 2E78  
                      u5451 3172                        u5540 2AEC                        u4580 2B7A  
                      u3860 1864                        u3780 173A                        u3940 1198  
                      u6500 0DF0                        u6420 0CE6                        u7060 09F6  
                      u7140 18DE                        u7300 1F52                        u7220 30D8  
                      u5380 2EBE                        u5460 319E                        u5541 2AE8  
                      u4581 2B76                        u3861 1860                        u3781 1736  
                      u3941 1194                        u6501 0DEC                        u6421 0CE2  
                      u4485 2478                        u7061 09F2                        u7141 18DA  
                      u7301 1F4E                        u7221 30D4                        u5381 2EBA  
                      u5461 319A                        u5550 2AFA                        u4590 2B90  
                      u3790 174C                        u3950 1312                        u3870 10CE  
                      u6510 0E00                        u6430 0CF4                        u6350 0C0E  
                      u4486 2482                        u7070 0A4A                        u7150 1934  
                      u7230 2800                        u7310 1F64                        u5630 39D8  
                      u5390 2F30                        u5470 31D0                        u5551 2AF6  
                      u4591 2B8C                        u3791 1748                        u3871 10CA  
                      u6511 0DFC                        u6431 0CF0                        u6351 0C0A  
                      u4487 2492                        u7071 0A46                        u7151 1930  
                      u7231 27FC                        u7311 1F60                        u5631 39D4  
                      u5391 2F2C                        u5471 31CC                        u5560 2B34  
                      u5480 29B4                        u3960 136C                        u3880 10E0  
                      u6600 0F5E                        u6520 0E32                        u6440 0D62  
                      u6360 0C20                        u7080 0B1C                        u7160 1950  
                      u7240 2812                        u7320 1FA0                        u7400 2E5C  
                      u5624 39AE                        u5561 2B30                        u5481 29B0  
                      u3961 1368                        u3881 10DC                        u6601 0F5A  
                      u6521 0E2E                        u6441 0D5E                        u6361 0C1C  
                      u7081 0B18                        u7161 194C                        u7241 280E  
                      u7321 1F9C                        u7401 2E58                        u5625 39AA  
                      u5641 3432                        u5570 2B42                        u5490 29C2  
                      u3970 138C                        u3890 10F0                        u6610 0F7A  
                      u6530 0E40                        u6450 0D7A                        u6370 0C30  
                      u7090 0B38                        u7170 1A38                        u7250 299A  
                      u7330 2060                        u5650 345C                        u5571 2B3E  
                      u5491 29BE                        u3971 1388                        u3955 1308  
                      u3891 10EC                        u6611 0F76                        u6531 0E3C  
                      u6451 0D74                        u6371 0C2C                        u7091 0B34  
                      u7171 1A34                        u7251 2996                        u7331 205C  
                      u5651 3458                        u7411 1BB4                        u3980 139E  
                      u6700 1052                        u6620 0F8A                        u6540 0E5E  
                      u6460 0D7C                        u6380 0C72                        u7180 409A  
                      u7340 211A                        u7260 1ED4                        u5580 3636  
                      u5660 346E                        u7420 1BCE                        u7500 215A  
                      u3981 139A                        u6701 104E                        u6621 0F86  
                      u6541 0E5A                        u6381 0C6E                        u7181 4096  
                      u7341 2116                        u7261 1ED0                        u5581 3632  
                      u5661 346A                        u7421 1BCA                        u7501 2156  
                      u3990 13CC                        u6710 1072                        u6630 0F9C  
                      u6550 0E96                        u6470 0DA4                        u6390 0C88  
                      u7270 1F10                        u7350 2D22                        u5590 36C6  
                      u7190 303A                        u5670 34B2                        u7430 1C02  
                      u7510 217E                        u3991 13C8                        u6711 106E  
                      u6631 0F98                        u6551 0E92                        u6471 0DA0  
                      u6391 0C84                        u7271 1F0C                        u7351 2D1E  
                      u5591 36C2                        u7191 3036                        u5671 34AE  
                      u7431 1BFE                        u7511 217A                        u6720 1084  
                      u6640 0FB2                        u6560 0EDC                        u6480 0DC2  
                      u6800 32D8                        u7280 1F28                        u7360 2D32  
                      u5680 34F8                        u7440 1C1A                        u7600 22DC  
                      u7520 219A                        u6721 1080                        u6641 0FAE  
                      u6561 0ED8                        u6481 0DBE                        u6801 32D4  
                      u7281 1F24                        u7361 2D2E                        u5681 34F4  
                      u7441 1C16                        u7601 22D8                        u7521 2196  
                      u6730 10A0                        u6650 0FC8                        u6570 0F12  
                      u6490 0DE2                        u6810 021E                        u7290 1F3C  
                      u7370 2DA8                        u7450 1C44                        u7610 2314  
                      u7530 21B2                        u6731 109C                        u6651 0FC4  
                      u6571 0F0E                        u6491 0DDE                        u6811 021A  
                      u7291 1F38                        u7371 2DA4                        u7451 1C40  
                      u7611 2310                        u7531 21AE                        u6660 0FDC  
                      u6580 0F22                        u6740 320A                        u6900 048C  
                      u6820 0268                        u4980 37CC                        u7380 2DB8  
                      u7460 1C54                        u7620 234C                        u7540 21CE  
                      u6661 0FD8                        u6581 0F1E                        u6741 3206  
                      u6901 0488                        u6821 0264                        u4981 37C8  
                      u7381 2DB4                        u7461 1C50                        u7621 2348  
                      u7541 21CA                        u6670 0FF6                        u6590 0F4E  
                      u6750 323E                        u6910 04CA                        u6830 0278  
                      u4990 385C                        u7390 2E3C                        u7470 1CFE  
                      u7550 21E2                        u6671 0FF2                        u6591 0F4A  
                      u6911 04C6                        u6831 0274                        u4991 3858  
                      u7391 2E38                        u7471 1CFA                        u7551 21DE  
                      u6680 1030                        u6760 326C                        u6920 0556  
                      u6840 02B6                        u7480 1D2C                        u7560 21F6  
                      u6681 102C                        u6761 3268                        u6921 0552  
                      u6841 02B2                        u7481 1D28                        u7561 21F2  
                      u6690 1042                        u6770 3280                        u6930 058C  
                      u6850 02C8                        u7490 1E76                        u7570 2234  
                      u6691 103E                        u6771 327C                        u6755 3234  
                      u6931 0588                        u6851 02C4                        u7491 1E72  
                      u7571 2230                        u6780 32A8                        u6940 05A2  
                      u6860 0342                        u7580 226C                        u6781 32A4  
                      u6941 059E                        u6861 033E                        u7637 361E  
                      u7581 2268                        u6790 32C8                        u6950 05D8  
                      u6870 0354                        u7590 22A4                        u6791 32C4  
                      u6951 05D4                        u6871 0350                        u7647 36CC  
                      u7591 22A0                        u6960 05E6                        u6880 03CE  
                      u6961 05E2                        u6881 03CA                        u6970 0610  
                      u6890 045A                        u6971 060C                        u6891 0456  
                      u6980 0758                        u6981 0754                        u6990 07BE  
                      u6991 07BA                        _TMR1 0FCE                        _TMR3 0FB2  
                      _TMR4 0F53                        _Init 4384              GPIO_main@ledky 000D  
                      abs@a 0008                        _dbuf 0173                        _labs 3FEE  
                      _main 212A                        _dtoa 2B56                        _rand 3E44  
                      _seed 01C3                        _prec 005A                        pad@i 001A  
                      pad@p 0017                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      pad@w 001C                        fsr2l 0FD9                        btemp 005E  
          __end_of_ADC_Init 4384               ___fpclassifyf 34FE                        prodh 0FF4  
                      prodl 0FF3            __end_of_DAC_Init 3FEE                        start 01F6  
          __end_of_ADC_main 29A2             ___fldiv@new_exp 0021            __end_of_DAC_main 212A  
              ___param_bank 0000              _LCD_ShowString 39E4                       ??_abs 000A  
                     ??_pad 0019            __end_of_LCD_Init 36D6            __end_of_LCD_Send 4424  
          uart_write_norm@i 0008                       ?_Init 0001              ADC_main@change 01F5  
             ___fltol@sign1 0056             __end_of___aldiv 31F2                       ?_labs 0002  
           __end_of___fladd 10B4                       ?_main 0001                       ?_dtoa 001E  
           __end_of___fldiv 1878                       ?_rand 000E             __end_of___awdiv 392A  
           __end_of___flneg 4354                       STR_10 FE00                       STR_11 FE76  
                     STR_20 FF68                       STR_12 FE14                       STR_21 FF7A  
                     STR_13 FDA9                       STR_30 FFB0                       STR_14 FDD7  
                     STR_22 FDC2                       STR_31 FDD9                       STR_15 FF8C  
                     STR_23 FE63                       STR_24 FFE3                       STR_16 FF9E  
                     STR_32 FE50                       STR_33 FDDA                       STR_17 FFC1  
                     STR_25 FF56                       STR_18 FFD2                       STR_26 FF44  
                     STR_34 FF0E                       STR_19 FFF1                       STR_27 FF32  
                     STR_35 FF20                       STR_36 FFF7                       STR_28 FDEC  
           __end_of___awmod 3B46                       STR_29 FFB0                       STR_39 FFFB  
           __end_of___flmul 14DE             __end_of___flsub 41D6             __end_of___fltol 32FA  
           ___awdiv@divisor 0004                       _LATD2 7C62                       _LATC4 7C5C  
                     _LATD3 7C63                       _LATD4 7C64                       _RC1IF 7CF5  
                     _LATD5 7C65                       _LATD6 7C66                       i2l330 01DA  
                     i2l331 01F2             ___awdiv@counter 0006                vfpfcnvrt@fmt 009F  
                     _TX1IF 7CF4                       _TRISD 0F95         ___lmul@multiplicand 0006  
                     _flags 00F8         read_prec_or_width@c 000E         read_prec_or_width@n 000F  
                     _fputc 36D6                       _fputs 41D6                       labs@a 0002  
                     pad@fp 0013                       _width 0058                       _putch 443C  
                     dtoa@d 0020                       dtoa@i 0028                       dtoa@p 0024  
                     dtoa@s 002A                       dtoa@w 0026            __end_of_PWM_Init 425C  
                     tablat 0FF5            __end_of_PWM_main 30E6                       plusw1 0FE3  
                     plusw2 0FDB                ?_ISR_HANDLER 0001                       ttemp5 005F  
                     ttemp6 0062                       ttemp7 0066                       status 0FD8  
                     wtemp8 005F             __end_of_sprintf 40F6              ?___fpclassifyf 0002  
         __end_of_DAC_Write 429C           __end_of_GAME_Init 4466           __end_of_GAME_main 2E62  
           __initialization 3CE8                __end_of_Init 43B0      __end_of_LCD_ShowString 3A96  
              __end_of_labs 4054                __end_of_main 23CC                __end_of_dtoa 2CEA  
              __end_of_rand 3EB2               DAC_Write@data 0004                LCD_Send@data 0002  
                    ??_Init 0002                      ??_labs 0006                      ??_main 00E2  
                    ??_dtoa 0022                      ??_rand 0010               __activetblptr 0002  
__end_of_read_prec_or_width 3866           __end_of_GPIO_main 39E4                      ?_fputc 0003  
                    ?_fputs 000C                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE            ___awdiv@dividend 0002                      _ANSELA 0F38  
                    ?_putch 0001                      _ANSELC 0F3A                      _GODONE 7E11  
                    i2l5701 01A8                      i2l5703 01D2                      i2l5705 01E6  
                    i2l5707 01EA                      i2l5651 0018                      i2l5709 01F0  
                    i2l5661 00B6                      i2l5653 0026                      i2l5671 00F6  
                    i2l5663 00C8                      i2l5655 009A                      i2l5681 012C  
                    i2l5673 00FE                      i2l5665 00D0                      i2l5657 00A2  
                    i2l5649 000A                      i2l5691 015E                      i2l5683 013C  
                    i2l5675 010E                      i2l5667 00E0                      i2l5659 00B2  
                    i2l5693 016A                      i2l5685 0140                      i2l5677 0112  
                    i2l5669 00E4                      i2l5695 016C                      i2l5679 0124  
                    i2l5687 0142                      i2l5697 017A                      i2l5689 0150  
                    i2l5699 0188                      _RCREG1 0FAE                      _SPBRG1 0FAF  
                    _TMR2IE 7CE9                      _TMR2IF 7CF1                      _TMR3IE 7D01  
                    _TMR3IF 7D09                      _TMR4IE 7BE8                      _TMR4IF 7BF0  
                    _TMR1ON 7E68                      _TMR2ON 7DD2                      _TMR3ON 7D88  
                    _TMR4ON 7A8A                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _SSPBUF 0FC9                      _TXREG1 0FAD            __end_of___xxtofl 2B56  
              ?_reprak_Init 0001                ?_reprak_main 0001               main@menu_kurz 00E4  
              _CCPTMRS0bits 0F49                vfprintf@cfmt 00B2             ?_LCD_ShowString 0003  
         __end_of_UART_Init 443C                   DAC_main@A 00C1                   DAC_main@i 00C6  
                    ___flge 32FA                      ___fleq 3B46                      ___lmul 3F1E  
          __end_of_driveLED 3E44                   ??___aldiv 000A                   ??___fladd 004A  
         __end_of_UART_main 34FE                      ___wmul 43D8                   ??___fldiv 0018  
                 ??___awdiv 0006                   ??___flneg 0006                   ??___awmod 0006  
                 ??___flmul 0031                   ??___flsub 0052                   ??___fltol 0052  
                    _efgtoa 01FA                      _floorf 23CC                      _memcpy 40F6  
      read_prec_or_width@ap 000A                      _melody 01F6                      _memset 2E62  
                    clear_0 3D32                      clear_1 3D3E            ___awdiv@quotient 0008  
           ___awmod@divisor 0004                      _reprak 00E7                      isa$std 0001  
           ___awmod@counter 0006                      _printf 43B0                      pad@buf 0015  
                    dtoa@fp 001E                      _strcpy 429C                __pdataBIGRAM 01F6  
                    fputc@c 0003                      fputs@c 0010                      fputs@i 0011  
                    fputs@s 000C             ___fpclassifyf@e 000A                   ?_ADC_Init 0001  
           ___fpclassifyf@u 000C             ___fpclassifyf@x 0002                __mediumconst FDA8  
                 ?_DAC_Init 0001                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                   ?_ADC_main 0001                   ?_DAC_main 0001  
         ??_uart_write_norm 0007            __end_of_vfprintf 40A6                   ??_sprintf 0058  
                ___flge@ff1 0042                  ___flge@ff2 0046             ??___fpclassifyf 0006  
              ___xxtofl@arg 000C                ___xxtofl@exp 000B                ___xxtofl@val 0002  
                ___fleq@ff1 0002                  ___fleq@ff2 0006                  __accesstop 0060  
   __end_of__initialization 3D50                   ?_LCD_Init 0001                   ?_LCD_Send 0001  
                ___flneg@f1 0002               ___rparam_used 0001                  ___fltol@f1 0060  
            __pcstackCOMRAM 0001                __pidataBANK1 3EB2               __end_of_fputc 37A0  
             __end_of_fputs 421A               __end_of_putch 4452                   ?_PWM_Init 0001  
                 ?_PWM_main 0001                  ??_ADC_Init 0002                  ??_DAC_Init 0002  
                ??_ADC_main 00CA                  ??_DAC_main 00BA                     ??_fputc 0007  
                   ??_fputs 0010                     ??_putch 0002                  __pbssBANK0 00E7  
                __pbssBANK1 016B                  ??_LCD_Init 0003                  ??_LCD_Send 0002  
        uart_write_norm@len 0005                     ?___flge 0042                     ?___fleq 0002  
                   ?___lmul 0002                     ?___wmul 0002                     ?_efgtoa 0068  
                   ?_floorf 0029                     ?_memcpy 0002                     ?_memset 0002  
            ___lmul@product 000A                PWM_main@duty 00DB                     ?_printf 00B4  
                ??_PWM_Init 0002                     ?_strcpy 0002                  ??_PWM_main 0058  
                 ?___xxtofl 0002             ISR_HANDLER@t_c2 005C                     _SSP1ADD 0FC8  
                   _SSP2ADD 0F6E                     _SSP2BUF 0F6F                   ?_driveLED 0001  
           LCD_ShowString@i 0008              reprak_main@len 007C              reprak_main@txt 0064  
          ADC_main@txt_pot1 01C7            ADC_main@txt_pot2 01D8                     __Hparam 0000  
                   __Lparam 0000                   _DAC_Write 425C                     ___aldiv 30E6  
                   ___fladd 0BF4                     ___fldiv 14DE                     ___awdiv 3866  
                   ___flneg 431C                     ___awmod 3A96                     ___flmul 10B4  
                   ___flsub 418E                     ___fltol 31F2                   _GAME_Init 4452  
                 ?_vfprintf 00AC                   _GAME_main 2CEA                     __pcinit 3CE8  
                   __ramtop 1000                     __ptext0 212A                     __ptext1 1B84  
                   __ptext2 4146                     __ptext3 30E6                     __ptext4 33FE  
                   __ptext5 3D5E                     __ptext6 3BF0                     __ptext7 2E62  
                   __ptext8 4424                     __ptext9 2FD8                   _T1CONbits 0FCD  
                 _T2CONbits 0FBA                     _buttons 00F0       read_prec_or_width@fmt 0008  
                ??___xxtofl 0006                   _T3CONbits 0FB1            ___awmod@dividend 0002  
          ___aldiv@dividend 0002                   _T4CONbits 0F51                     efgtoa@c 006E  
                   efgtoa@d 007C                     efgtoa@e 0080                     efgtoa@f 006A  
                   efgtoa@g 0093                     efgtoa@h 008A                     efgtoa@i 0088  
                   efgtoa@l 008E                     efgtoa@m 007E                     efgtoa@n 0097  
                   efgtoa@p 0073                     efgtoa@t 0075                     efgtoa@u 0099  
                   efgtoa@w 0082                     _sprintf 40A6        end_of_initialization 3D50  
                ??_driveLED 0002                     floorf@e 0037                     floorf@m 0033  
                   floorf@u 0039                   _GPIO_main 392A                     floorf@x 0029  
                   memcpy@d 0008                     memcpy@n 0006                     memcpy@s 000A  
                   fputc@fp 0005                     memset@c 0004                     memset@k 000A  
                   memset@n 0006                     memset@s 000C               __Lmediumconst FDA8  
                   fputs@fp 000E            ??_LCD_ShowString 0005          _read_prec_or_width 37A0  
     LCD_ShowString@lineNum 0007           __end_of_vfpfcnvrt 1B84                  efgtoa@mode 007A  
                efgtoa@sign 0092                  ?_DAC_Write 0001            ___aldiv@quotient 000C  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0008  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00A5                  ?_GAME_Init 0001                  ??_vfprintf 0058  
                ?_GAME_main 0001             _uart_write_norm 3D5E                     strcpy@d 0008  
                   strcpy@s 0006                   _UART_Init 4424                  _uart_write 3BF0  
                 _UART_main 33FE                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0051               ___xxtofl@sign 000A                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                 _TRISEbits 0F96                 uart_write@i 0009        ??_read_prec_or_width 000C  
               ___fldiv@grs 0023                 ___fldiv@rem 001C                  ?_GPIO_main 0001  
               ___flmul@grs 0036                 _CCP1CONbits 0FBD                ADC_main@pot1 01E9  
              ADC_main@pot2 01ED            reprak_main@F6526 015A                  driveLED@in 0002  
            __end_of___flge 33FE              __end_of___fleq 3BF0              __end_of___lmul 3F88  
             __pidataBIGRAM 25DE                 vfpfcnvrt@ap 00A1                 vfpfcnvrt@cp 00AA  
               vfpfcnvrt@fp 009D              __end_of___wmul 43FE                  ?_UART_Init 0001  
            __end_of_efgtoa 0BF4                  ?_UART_main 0001              __end_of_floorf 25DE  
            __end_of_memcpy 4146                  floorf@F526 016B              __end_of_memset 2FD8  
            __end_of_printf 43D8              __end_of_strcpy 42DC         start_initialization 3CE8  
                GPIO_main@i 000B              UART_main@F6213 0100                 __end_of_abs 431C  
               __end_of_pad 3CE8                DAC_Write@lsb 0003                DAC_Write@msb 0002  
     __end_of___fpclassifyf 35FC           GAME_main@game_end 00E1     __end_of_uart_write_norm 3DD4  
               vfprintf@fmt 00AE                 ??_DAC_Write 0002                    ??___flge 004A  
                  ??___fleq 000A                    ??___lmul 000A                    ??___wmul 0006  
               ??_GAME_Init 0002                    ??_efgtoa 006F                 __pdataBANK1 0100  
                  ??_floorf 002D                 ??_GAME_main 0058                    ??_memcpy 0008  
                  ??_memset 0008                 ?_uart_write 0003                  memset@dest 0002  
                  ??_printf 0058                    ??_strcpy 0006                   ___fladd@a 0046  
                 ___fladd@b 0042                DAC_main@freq 00C3                   ___fldiv@a 0014  
                 ___fldiv@b 0010                   ___flmul@a 002D                   ___flmul@b 0029  
               __pbssCOMRAM 0058                   ___flsub@a 0064                   ___flsub@b 0060  
             __pcstackBANK0 0060               __pcstackBANK1 01C7                 ??_GPIO_main 0009  
             ??_ISR_HANDLER 0001         uart_write_norm@text 0003           GAME_main@vysledek 00DB  
               _efgtoa$3290 0077                   _dtoa$3259 0022                   __pintcode 0008  
             __pmediumconst FDA8            _reprak_main$3616 0075                    ?___aldiv 0002  
         ADC_main@data_pot1 01F1           ADC_main@data_pot2 01F3                    ?___fladd 0042  
                  ?___fldiv 0010                    ?___awdiv 0002                    ?___flneg 0002  
                  ?___awmod 0002                    ?___flmul 0029                    ?___flsub 0060  
                  ?___fltol 0060                 PWM_main@jas 00DD                 PWM_main@txt 00CA  
               ??_UART_Init 0002                 ??_UART_main 000E                    _ADC_Init 4354  
                  _DAC_Init 3F88                    _ADC_main 27E6                    _DAC_main 1E86  
                  ?_sprintf 00B4             ___aldiv@divisor 0006             ___aldiv@counter 000A  
                  _LCD_Init 35FC                    _LCD_Send 43FE              ___wmul@product 0006  
                  _LATAbits 0F89                    _LATBbits 0F8A               ??_reprak_Init 0002  
             ??_reprak_main 0058                    _PIR1bits 0F9E                    i2u620_40 00B2  
                  i2u620_41 00AE            ?_uart_write_norm 0003                    i2u621_40 00C8  
                  i2u613_40 0018                    i2u621_41 00C4                    i2u613_41 0014  
                  i2u630_40 0188                    i2u622_40 00E0                    i2u614_40 0026  
                  i2u630_41 0184                    i2u622_41 00DC                    i2u614_41 0022  
                  i2u631_40 01A8                    i2u623_40 00F6                    i2u615_40 003C  
                  i2u631_41 01A4                    i2u623_41 00F2                    i2u615_41 0036  
                  i2u615_46 003E                    i2u632_40 01D2                    i2u624_40 010E  
                  i2u616_40 0054                    i2u632_41 01CE                    i2u624_41 010A  
                  i2u616_41 004E                    i2u616_46 0056                    i2u625_40 0124  
                  i2u617_40 006C                    i2u625_41 0120                    i2u617_41 0066  
                  i2u617_46 006E                    i2u626_40 013C                    i2u618_40 0084  
                  i2u626_41 0138                    i2u618_41 007E                    i2u618_46 0086  
                  i2u627_40 0150                    i2u619_40 009A                    i2u627_41 014C  
                  i2u619_41 0096                    i2u628_40 015E                    i2u628_41 015A  
                  i2u629_40 017A                    i2u629_41 0176         __end_of_ISR_HANDLER 01F6  
              GAME_main@cas 00DF                   _vfpfcnvrt 1878                  _ADCON0bits 0FC2  
                _ADCON1bits 0FC1                  _ADCON2bits 0FC0                    _PWM_Init 421A  
         ___wmul@multiplier 0002                    _PWM_main 2FD8             reprak_main@btn1 007B  
                vfpfcnvrt@c 00A9             reprak_main@perc 0079           ___lmul@multiplier 0002  
                 copy_data0 3CFC                   copy_data1 3D20               UART_main@flag 00D8  
                  __Hrparam 0000               UART_main@text 00BA               UART_main@uvod 0060  
                 memcpy@tmp 000C                  vfprintf@ap 00B0                    __Lrparam 0000  
                vfprintf@fp 00AC         __end_of_reprak_Init 418E         __end_of_reprak_main 1E86  
               DAC_main@dir 00C5                  ?_vfpfcnvrt 009D                  _ANSELAbits 0F38  
                _ANSELBbits 0F39                  _ANSELDbits 0F3B                  _ANSELEbits 0F3C  
        ___fpclassifyf@F465 016F                  sprintf@fmt 00B6                    ___xxtofl 29A2  
                  __ptext10 421A                    __ptext11 35FC                    __ptext20 43B0  
                  __ptext12 4384                    __ptext21 425C                    __ptext13 392A  
                  __ptext30 429C                    __ptext22 3F88                    __ptext14 3DD4  
                  __ptext31 40F6                    __ptext23 27E6                    __ptext15 2CEA  
                  __ptext40 32FA                    __ptext32 3FEE                    __ptext24 40A6  
                  __ptext16 3E44                    __ptext41 3B46                    __ptext33 23CC  
                  __ptext25 4054                    __ptext17 3F1E                    __ptext50 3866  
                  __ptext42 14DE                    __ptext34 34FE                    __ptext26 1878  
                  __ptext18 4452                    __ptext51 29A2                    __ptext43 2B56  
                  __ptext35 31F2                    __ptext27 37A0                    __ptext19 1E86  
                  __ptext52 39E4                    __ptext44 3C6E                    __ptext36 418E  
                  __ptext28 43D8                    __ptext53 43FE                    __ptext45 41D6  
                  __ptext37 0BF4                    __ptext29 01FA                    __ptext54 4354  
                  __ptext46 36D6                    __ptext38 431C                    __ptext47 443C  
                  __ptext39 10B4                    __ptext48 42DC                    __ptext49 3A96  
              _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B  
                  _driveLED 3DD4                  strcpy@dest 0002                 _ISR_HANDLER 0008  
                  efgtoa@fp 0068                    efgtoa@ne 0071                    efgtoa@pp 0079  
                  efgtoa@ou 0084                _PSTR1CONbits 0FB9                    isa$xinst 0000  
                  int$flags 005E                    _vfprintf 4054                   printf@fmt 00B4  
                  main@flag 00E6                _SSP1STATbits 0FC7                ??_uart_write 0007  
              _SSP2STATbits 0F6D                   putch@data 0002                UART_main@idx 00D9  
                  memcpy@d1 0002                    memcpy@s1 0004                    intlevel2 0000  
                 sprintf@ap 00BC           DAC_main@data_pot1 00BD           DAC_main@data_pot2 00BF  
               _reprak_Init 4146                   strcpy@src 0004                  _RCSTA1bits 0FAB  
        __end_of_uart_write 3C6E                 _reprak_main 1B84                 efgtoa@nmode 007B  
                  printf@ap 00B8                 ??_vfpfcnvrt 00A3      LCD_ShowString@textData 0003  
            GAME_main@tmr_c 00DD              GAME_main@txt_g 00CA                    sprintf@f 00BE  
                  sprintf@s 00B4                ___aldiv@sign 000B               ___fladd@signs 004E  
              ___fladd@aexp 004F                ___fladd@bexp 0050  
